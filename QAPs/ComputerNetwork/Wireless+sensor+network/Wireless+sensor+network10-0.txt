★How does a wireless sensor network work?
There are many ways to implement a WSN.  Typically they consist of small nodes with a low-power microprocessor, like an MSP430, and an on-board low-power wireless 802.15.4 radio -- such as a CC2430. The microprocessor is typically imaged with some kind of OS that is either Zigbee, TinyOS, or Contiki based. The last two are academic, open-source OS's that you could use on your wireless node. Each offer a communication stack that forms a network over which to route packets periodically.  When nodes are not plugged in they run on a batteries and the stack needs to be optimized for energy savings -- which typically involves drastically lowering the duty cycle of the radio (i.e. 1% duty cycle) since the radio consumes more power than the processor.  Writing to memory is also energy expensive, so many protocols optimize by lowering the duty cycle and minimizing writes to flash memory. On the interface to applications all three OS's offer an IPv6 stack.  So communicating with the nodes can typically done if you set up a bridge to your network through a 802.15.4-to-802.11(or ethernet) box.  There are tons of protocols available and quite a bit of documentation for TinyOS (TinyOS Home Page) and Contiki (The Open Source Operating System for the Internet of Things). Typically a sensor network follows a tree topology, with nodes sending data to the root of the tree for delivery.  The Collection Tree Protocol (CTP) is the most often used protocol for deployments.  Variants of these are used in commercial deployments as well.    Embed Quote