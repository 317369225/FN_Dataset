★When do you need a DSL?
You *need* a DSL when you have market requirements which can only be met through a custom created, domain specific language. Most of the time it's technically better to build domain specific support as a set of modules, libraries or classes for use with some existing language. or to create and application with built-in support for some existing embeddable language (such as TCL or Lua).  Python has become particular popular as a way to host modules for performing domain specific functions.  It's relatively easy to create a low level library to drive a device or network service or to interface to some other systems.  From there it's possible to create "bindings" to allow access to that functionality from Python, Ruby, Java, etc.  Python is also sometimes (though rarely) used as an embedded language (Apache OpenOffice and vim are a couple of simple examples).      TCL was originally intended to be a sort of common language for linking to (embedding within) other projects.  In particular it was created by an EECS instructor to encourage his students to use one common language for their projects rather than devoted time and effort on immature and incomplete bespoke scripting features.  Lua is probably the most popular of the "embeddable" scripting languages and is used somewhat less often has a standalone programming language.