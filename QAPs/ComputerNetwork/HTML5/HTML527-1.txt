★What are the best HTML5 frameworks?e.g. http://html5boilerplate.com/
Ok, I might go  counter flow here, but personally I prefer HTML frameworks that expose the DOM way of doing things (i.e. jQuery style) rather than trying to wrap HTML, CSS, Javascript into a "open but single provider" application model. Some frameworks will tell you that they take care of the HTML, CSS, and even Javascript for you, and that if you obey to their application model, you won't have to learn those. However, I would challenge that the most future proof technology to acquire is a deep understanding of HTML, CSS, and Javascript and to be prudent with single vendor API/Framework that take you away from this necessary expertise. Many time, you will have to work on performance and behavior bugs, and the closer your are to the runtime the easier it will be. It is relatively easy to debug a HTML5/CSS/Javascript bug and workaround it if necessary. However, when you have a middle-man, it can become very complex to understand who is causing the problem (just to understand how the HTML/CSS/JS code get generated can take a long time, and then changing this can be near impossible). The great news about HTML5 is the consensus it has built in the market. Now all major browser vendors are competing on performance and compliance on a single spec. This is huge, and if you target HTML5 only, the "fragmentation" days are over, and while you might have to give some hint here and there, the HTML5 browsers are very robust and consistent these days (not without pain, but much less that dealing with middle-man renderers). Lastly, there are a fundamental difference between the DOM way of building application and the traditional object oriented one. In a traditional object oriented UI application model (Flex, Swing, MFC) the component tree is the display tree. In a DOM-UI application model (HTML/#HTML5) the display tree is separated from the component behavior. Many frameworks are trying to build the traditional way to the DOM runtime, however, I am not sure it is the most optimum way of building an application in this context. I much prefer sticking with the DOM way, and see how I can optimally structure my code around it.