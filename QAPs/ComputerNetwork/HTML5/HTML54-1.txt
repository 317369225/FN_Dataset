â˜…Does Facebook regret its HTML5 mobile strategy?Seem like it's moving more toward native apps these days.
Facebook is hedging against both technologies right now. They have a couple relatively small applications (Messages and Camera being the two big ones) that are focused around specific aspects of the experience. But the core experience remains HTML5. This is true in their store apps, but also true of their pure mobile web app as well. Right now, the idea of a mobile experience is still fairly new compared to the industry as a whole. When the desktop was created, there was no web, so native applications were your only option. As the web emerged, UI patterns became more entrenched, and some UI elements won out over others. The desktop web picked up the speed, power, and flexibility of native, and real applications became realistic. During the early 2000s, the desktop web exploded, and some of the biggest applications in the world (including but not limited to Facebook) arose. Mobile's design patterns are starting to become entrenched, and we're seeing the browser developers (namely Apple and Google) add features to accentuate that. But it's a slow process. Native code's advantage is that, by being controlled by a single vendor, it can move much more quickly in adding features. As the different platforms compete, they come to a more consistent set of features, which allows cross-platform APIs to be developed for the web browser. This has been happening over the last few years, and there is no reason to expect that this will not continue. Facebook's core experience is driven by their ability to build features, test them on subsets of users, and deploy them to everyone over time. They need the ability to do this quickly and without having to wait for an App Store approval. They also don't want to have to rewrite the feature for every native/web platform they support, especially if they're iterating quickly on those features. Mobile web makes sense for their development style, even if it causes issues with the user experience. Put another way, they are not necessarily driven by user experience, so they don't emphasize it as much in their core app. If they were, there are a number of techniques they could do to improve their mobile web app without rewriting it natively. Their Messages app and their Camera app are focused on aspects of the Facebook experience to keep people dumping data into Facebook. They're not features that are going to change frequently, and aren't features that need to have infinite flexibility in how their data is conveyed. Furthermore, they require features that native simply does better right now (real-time server communication and push notifications in the case of Messages, access to the hardware camera and GPU for image processing in the case of Camera). Messages itself is primarily mobile web in its UI (many chat programs are, actually). So no, I don't believe they regret it at all. They're simply using the technology that meets their needs for different aspects of the Facebook experience. By centralizing their core app technology as mobile web, they can add new features quickly to every platform and iterate on them. By focusing on mobile native for Messages and Camera, they provide features mobile web can't yet do. The technologies are complementary, and they're using each where it makes sense for them.