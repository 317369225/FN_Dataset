★What is the difference between client socket and server socket (in computer networking)?
Both are the same except one thing at startup: - one "connects" (TCP) or "sends" (UDP), the other "binds" (TCP) or "receives" (UDP) If you're sending UDP, UDP is one way only - if you want two ways, you'll need to both bind and send on both points. Node a: # prepares an udp to send to the same ip+port socket = new udp().connect(ipb, portb) socket.send(data) or # prepares an udp to send to any ip+port, on demand socket = new udp().connect() socket.send(ipb, portb, data) or # prepares an udp to send and receive on a certain port socket = new udp().bind(ipa, porta) socket.send(ipb, portb, data) Node b: socket = udpserver.bind(ipb, portb) while data = socket.receive()    do stuff    # reply back (case 3 above)    socket.send(ipa, porta, otherdata)    # reply to any sender    socket.send(data.sender(), otherdata) If you're sending TCP, it's two way independent of whoever is starting the connection Node a: socket = socketclient.connect(ip, port) while relevant     socket.write(data)     data = socket.read() socket.close() Node b: socketserver.bind(ip, port) socket = socketserver.accept() while relevant     socket.write(data)     data = socket.read() socket.close()