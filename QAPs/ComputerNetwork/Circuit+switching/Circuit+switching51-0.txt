★What are the differences between circuit switching and message switching?
Assume Alice wants to communicate with Bob. In a circuit-switched environment, Alice's system initiates a connection request that reserves capacity along a path to Bob.  Once a full path is reserved, all future messages will traverse that path.   The circuit reservation request can include minimums of bandwidth, latency, error-correction, and other properties, so that Alice can have some confidence about those properties.   The circuit stays in place until Alice or Bob releases it, even if it isn't being used.   If the parameters are set too high or too many reservations already exist, no circuit is established even if there is a route and some capacity available.  If a failure of an intermediate node occurs, Alice and Bob will (eventually) learn of it because their circuit fails and generates some error message — often, a "keep alive" message is sent on the circuit to show that it is working.  Circuits can be very long-lived. In a message (or packet) switched environment, Alice sends her message (or packets) addressed to Bob.  At each node in the network, some decision is made on where to next send the message; routing decisions can be determined statically, or dynamically.   Eventually, the message is delivered to Bob.  Because of the hop-by-hop nature of the transfer, subsequent messages might arrive out of order, or with interarrival delays that are quite varied because the paths taken by each message may be quite different.   Multiple copies of the same message might arrive, too.   If there is no path, or a bad path, or a failure along the way, a message might not be delivered at all with no notice to Alice or Bob.  Because of the design, packets can be queued until capacity exists on a link, thus helping utilize the channel and even out the load. The general notion of how telephones work illustrates circuit switching — Alice calls Bob, the call is made and the line stays there until one of them hangs up.  If the line fails during the call, Alice and Bob will notice.  If all circuits are busy, they get an error tone and can't complete the call. The general notion of how the postal service works illustrates message switching — Alice sends a series of postcards to Bob.  Some may get picked up right away, others may accumulate in the postbox and get picked up all at once.   Depending on sorting, the availability of room on the trucks or trains, etc, the postcards will get delivered but maybe not in the order sent…maybe all at once, or maybe one every other day.   If a postcard gets lost or damaged by a sorting machine, neither Alice nor Bob get any notification.  The postoffice has huge rooms to store incoming mail until it is sorted and delivered to the next postoffice, so it is highly unlikely that the system would ever claim to be full and refuse another postcard. The Internet currently uses packet switching.  With additional protocol options, the delivery of packets can be made more reliable, include notification to the sender of non-delivery, serialized, and (sometimes) even within a bounded interval.  (Think of postal options — return-receipts and special delivery, for instance.) These concepts are more thoroughly covered in any standard textbook on data communications.