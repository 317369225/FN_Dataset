★What was it like to be a programmer without the Internet?When there were no online documentation, no Google, no StackOverflow...
I started programming in earnest around 1977. I'd taken a PL/1 programming course in 1973 at Cornell but to be honest it was on punch cards and I didn't much like it. In 1976 I was hired by the Harvard School of Public Health on their research staff and did data collection stuff, occupational epidemiology. We did a lot of data analysis and there weren't nearly enough programmers, we had one programmer who had a part-time junior assistant and to be kind their time was not allocated equally to all projects, well, that was hopeless anyhow given needs and deadlines. So I began diving into statistical packages on the IBM systems (4331 and ITEL AS/5, a 370 clone at OIT.) And later lab work, analyzing data from a newly hooked up pulmonary mechanics device (spirometer) mostly on a PDP-11, first RT-11/FB and then Unix. What was it all like? As others have said but can't be emphasized enough: You learned to read technical manuals, not just read but ponder. And if you got stuck you were pretty much stuck until you dragged yourself out. Maybe a colleague would look at your problem but not likely, they didn't have time to debug your code or explain some complex software interface and most likely didn't know any more about it, probably less, than you did because it was your problem you were working on not theirs. I got very good at asking myself if there was perhaps a little software experiment I could do which would help me get unstuck? Write a simple test program that only used that unfamiliar software interface rather than trying to immediately integrate it into a large program where perhaps there are other interactions distracting from the solution. I did get an internet capable account at MIT around 1978 but I didn't know anyone there or anyone else who used their homegrown OS (ITS) so it was just another mystery to spend time on. I played with MACLISP and joined some mailing lists but that was about it. I doubt I ever sent any email because I can't imagine who I might send email to back then! When I was hired by Boston University in 1983 they were not on the internet. That was one of my projects about a year later, get them on the internet. In fact, I registered the domain BU .  EDU (something keeps expanding that to "Boston University" without the spaces -- oh the irony!) which caused quite a bit of flak for me but that's another story. Same thing. Even when we got hooked up (10.4.0.44) there wasn't a lot to use, not like today. You joined mailing or discussion groups if you were precocious, sent some email. Very little documentation was online, almost none. In a phrase: It was lonely. Literally. I'd spend overnight and/or all weekend in a dead computing center to get some quiet staring at some programming problem I was stuck on, 12, sometimes 20+ hour butt-busters spent coding and pondering. One more thing: Software wasn't nearly as standardized as it is today. Boston Univ used a home-brewed operating system on their big IBM mainframe. Its poor documentation evolved into an in-house joke like whatever task needed to be done the OS authors in a meeting might quip "oh sure as soon as we write the new syscall interface manual we'll get to that" as a way of saying "never". MIT used ITS, also in-house and quirky to say the least. And you couldn't go to a book store and buy books that would help much, certainly not like from the 90s on where there were several "Teach Yourself BlahBlah!" books on almost any topic you could think of. Maybe you could find a college textbook (e.g., on lisp or machine language) but mostly it was technical reference manuals and staring at code examples if you could find any. Nonetheless as I got the hang of it it was all absolutely fascinating. I could tell this machine what to do and it would do it, tirelessly, accurately, it would express my creativity in a way few had ever experienced. It was a special world, a world I was coming to understand and control. And yes we knew: It was the future.