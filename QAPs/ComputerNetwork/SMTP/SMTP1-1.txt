★How does the SMTP protocol actually work?What does a protocol look like? What does an info package on SMTP look like? Does it have specific data fields like Date, To, From, CC, body, etc?
SMTP was originally defined by two separate documents, RFC-821, which defined the communication protocol between sending and receiving servers, and and RFC-822, which defined the format of the content. The current versions are RFC 5321 - Simple Mail Transfer Protocol and RFC 5322 - Internet Message Format. Additional standards have followed, including RFC 2045 - ultipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies and numerous related standards. Explaining all this would take not just a very long article, but a book. In a very small nutshell, however, the protocol described in RFC 821 is essentially a text-based connection, and you can in fact use a telnet client to emulate the sending side. The sending side sends commands and textual data, and the receiving side sends response codes to indicate that all is okay or an error. Once the connection is opened, a HELO or EHLO command followed by a MAIL FROM command starts the session. The RCPT TO command specifies the addressees that the sender is requesting that the receiving server should handle. (The sender may have "split" the message, and will only be asking the receiving server to deliver to a subset of the message's actual recipients.) The DATA command instructs the receiving server to expect the message to follow.  The message is sent as lines of text. (MIME encoding is required to convert anything else into a text representation.)  The message is terminated by transmission of a line that consists of a single dot character, followed immediately by two newlines. The receiving server can deliver the message, or it can be a relay that then becomes the sender in a conversation with one or more other receiving servers. Each server along the way will add a 'Received' header to the body of the message before delivery or relaying, and in strict adherence to the standards that is the only change it should make to the message. (In the real world of anti-virus and various other concerns, this is not the case.) The format described in RFC 822 is a series of header lines, consisting of a header name, a colon, and header content, followed by a blank line, followed by the message body.  There is a way to create long headers by "folding" lines. There is a way to encode non-ASCII characters in headers. The content-type and content-transfer-encoding headers describe what format the message body is. The type can be plain text, HTML, various types of files, and "multipart".  If the body consists of multiple parts, there will be separators and additional headers within the body, describing the format of each part. The content-transfer-encoding describes how binary or non-ASCII characeter data is converted into text by the sender and must be converted back by the receiver.  There's one final thing that I want to point out about the protocols. You can think of RFC-821 as being the envelope, and RFC-822 as being the letter inside it. Furthermore, you should think of the envelope as being opaque. It's not one of those envelopes with a window in it so that the address printed on the letter shows through. It is an opaque envelope with the address printed on it -- i.e., the content of the RCPT TO command data. The headers are part of the content, so the To, Cc, and Bcc that you may see inside your mail client are not actually part of the delivery process.  The addressees listed in the RCPT TO command may be completely different from what you see in the headers. The From header, as well, can be completely different from what was given in the MAIL FROM during the RFC-821 SMTP conversation. This is why help desks get calls from people who say "I got this spam message and it wasn't even addressed to me", and it is a big part of why forgery of email message addresses is way too easy.    Embed Quote