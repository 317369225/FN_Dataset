★Why is TCP/IP often referred to as a 'stack'?How did the word 'stack' go from a 'stack of books' to how it is used in the context of computer science?
We engineers love to sound geeky and speak in Lee7speak when we're communicating with non-technical people, but deep down, we're very simple human beings who love to use analogies to explain stuff that we do (a quick quora search will show many engineers using the most interesting analogies to explain techniques/technologies). From Wikipedia: The stack was first proposed in 1946, in the computer design of Alan M. Turing (who used the terms "bury" and "unbury") as a means of calling and returning from subroutines. Now the words "bury" and "unbury" bring to mind a simple analogy.... burying humans ofcourse. :P Now assume we have a hole in the ground. We bury one person in the hole for a start. Now, if we want to unbury him (or even scarier, he wants to unbury himself), he can just dig himself out of the grave. But assume we bury another person right on top of him. Now even if the person at the bottom wants to dig his way out (Shaun of the Dead music playing in the background), he has to wait for the person on top to be unburied before he can get out. Similarly, if there are 9 people buried ABOVE him, he has to wait for ALL 9 of them to be unburied before he can finally breath some fresh air (and taste some human flesh! :P). In essence, the only 2 possible options for a person on the outside (who for some reason, is very interested in burying and unburying people) are: Bury Unbury And that is exactly what the datastructure in question offers you..... Now, I'm assuming that Computer scientists of the age didn't want to come across as creepy zombie-creating necrophiliacs discussing burials, so over time, the much simpler analogy of a "stack" came into use. Just as with the burial example, in a stack (of say, boxes), you can either add a box at the top of the stack or remove a box from the top of the stack, effectively offering you the same 2 operations, which today we call "push" and "pop"! Now, talking about TCP/IP, the model is basically a set of protocols (enclosed within the 4 "layers") that are piled up one on top of the other. Now obviously the moment anyone sees this, the first thing that pops to mind, especially if you're a computer scientist who has been working with stacks, is that this is a stack... and hence the moniker of "Protocol Stack"... But, if you like, you can still call it a TCP/IP Protocol Zombiefier (well, atleast in whispers :D), and stay true to Alan Turing's ideas! :D    Embed Quote