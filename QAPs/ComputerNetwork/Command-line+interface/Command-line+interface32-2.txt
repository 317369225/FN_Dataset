â˜…Do people still write and compile programs from the command line instead of an IDE? Why or why not?I'm currently in an introductory C course and we've started learning how to compile and debug using tools such as gcc, gdb and valgrind. Is this approach still relevant in a practical context, or is using an IDE more common in the real world? I noticed that professional programmers still use no-frills word processors such as Notepad and Vim. Sorry for the noob question.
Command line tools coupled with a programmable editor such as Vim or Emacs can be extremely powerful, while still being able to run on the most arcane systems with limited or no GUIs. They can very well perform like an IDE if you want them to. Secondly, Vim/Emacs style processors allow you to have a highly customized experience for your personal needs without really getting in your way. They do not promote a certain style of programming, such as the learn-as-you-go style of Eclipse or make-a-giant-project-for-everything style of Visual Studio. There are tons of awesome plugins contributed by the community which proprietary IDEs tend to lack. Although, the best IDEs out there do have a lot of community support. Finally, you can be sure that any modern POSIX system will come with these tools because they are free and essential to the operating system. Setting up Vim+cygwin or Vim+mingw on Windows is pretty easy, although it is trickier than getting Eclipse/Visual Studio set up.