â˜…Do people still write and compile programs from the command line instead of an IDE? Why or why not?I'm currently in an introductory C course and we've started learning how to compile and debug using tools such as gcc, gdb and valgrind. Is this approach still relevant in a practical context, or is using an IDE more common in the real world? I noticed that professional programmers still use no-frills word processors such as Notepad and Vim. Sorry for the noob question.
You all gonna hat me for saying but I like a IDE better for writing code. I mostly do java and a tad of c++. If my colleagues write a java app, I can import that easy in Idea and 'voila' I have a compile-able working project and I can code away, when I add the app to glassfish and I can debug it, in seconds... May be a minute. Being +40, I just cannot remember all the keyboard shortcut's, which I am sure there are in VIM or other editor. And I hate configuring a tool each and every time for a language.. I like it that my IDE has a database viewer to write some queries, I like it that it does help me refactoring I like it when it highlights what files are used in a build, there are many thing's I like a IDE with because I don't have time to read all the documentation of all the tools, so my IDE is helping me. Now, the point is that the IDE should help you, not work for you because that means you don't understand... I also spend more time designing a application than actually coding, so the time I 'win' my typing faster is very low... With c ? used to use QtCreator and now using CLion, CLion is very promising. On average I do have 10 terminal windows up to create final builds and rsync it to our preproduction server, it's not that I don't like a terminal, I love it and it's my choice when i need to search for files, locate and move them around, by I like a IDE better for code editing.