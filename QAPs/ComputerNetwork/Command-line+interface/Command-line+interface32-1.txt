â˜…Do people still write and compile programs from the command line instead of an IDE? Why or why not?I'm currently in an introductory C course and we've started learning how to compile and debug using tools such as gcc, gdb and valgrind. Is this approach still relevant in a practical context, or is using an IDE more common in the real world? I noticed that professional programmers still use no-frills word processors such as Notepad and Vim. Sorry for the noob question.
Like Simon Willison so eloquently puts it - not relying on gives you superpowers. After you reach a certain level of skill as a programmer, an IDE starts slowing you down, rather than the opposite. I remember my time as a .NET developer - even though I was REALLY into using a lot of powerful refactoring tools such as ReSharper, Visual Studio still slowed be down in the end. It's a big, complex multi-gigabyte tool that start pretty slowly, takes ages to install, and I quite often found myself waiting for it while it performed some unfathomable computation in the background. All things that make you lose flow. Compare this to me nowadays, developing node.js using Sublime Text. The server reloads in milliseconds. Sublime loads in a second or two. I run tests and compile stuff with small batch scripts that I've written myself. I develop at insane speed compared to a few years back. Back them, I was driving around a battlecruiser, trying to swat flies with it. Nowadays, I'm a ninja that can cut the flies precisely with my katana.