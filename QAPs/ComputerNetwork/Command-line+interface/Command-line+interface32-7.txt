â˜…Do people still write and compile programs from the command line instead of an IDE? Why or why not?I'm currently in an introductory C course and we've started learning how to compile and debug using tools such as gcc, gdb and valgrind. Is this approach still relevant in a practical context, or is using an IDE more common in the real world? I noticed that professional programmers still use no-frills word processors such as Notepad and Vim. Sorry for the noob question.
IDEs are good in certain aspects. A beginner just need to create a new project, click C environment, type in some lines of codes, press run and it runs. But when you need to do a larger or complicated project which is quite common for professionals, what you want is a customized environment which does not need to be good at everything but can be good at everything you need and want it to. Using command line + scripts + some powerful editors (for e.g., VIM), you can have direct control over what you want and achieve a very high level of efficiency. I am very amateur and actually a fool bird. I used Visual Studio for all my C-based projects in college. When I continue my career, I found it is very difficult to configure the VS. There are just so many options, tabs, windows, etc. And these options' names are not that clear or understandable for me. Every time I want to something, I need to Google 'how to ...'. Then I changed to vim + shell in Linux. By typing commands, I enjoy the direct control over options of compilers and other tools. By editing and using scripts, I can make my jobs done automatically (for e.g., cross-compile a code, upload it to the target machine, run it, record and analyse the results, draw figures I need and show them to me) and I can know exactly what are happening in my working environments which is very important to me. I have absolutely no idea about how to use VS to do what I am doing very efficiently now.