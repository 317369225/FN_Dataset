â˜…Do people still write and compile programs from the command line instead of an IDE? Why or why not?I'm currently in an introductory C course and we've started learning how to compile and debug using tools such as gcc, gdb and valgrind. Is this approach still relevant in a practical context, or is using an IDE more common in the real world? I noticed that professional programmers still use no-frills word processors such as Notepad and Vim. Sorry for the noob question.
While a lot of people love command line.. and I have nothing against it and use Sublime + Terminal quite often, once you try IntelliJ and all the features it has the answer to your question will present itself to you :) But joking aside, one thing that people have probably forgot to note is that regardless of whether or not you want to use IDEs, you still need to know how to to do things via cli. It's the nature of the beast if one wants to be a solid developer. Using simple editors + cli to build, test and automate tasks or full blown IDE really boils down to a matter of preference. In some scenarios you just have to use an IDE due to the complexity of the SDKs/APIs (read Xcode/iOS/Cocoa or Android Studio/IntelliJ for Java/Android dev) and where you need some push from the autocomplete and tools within the IDEs that make you develop faster and so on. But the bottom line is having experience with cli environment is undoubtably something that every developer should have a good grasp on. After that it's really a matter of preference.. I like IDEs a bit more (but only IntelliJ when I work on some more complex project), other times (like web stuff, node and so on, I just use Sublime to do stuff like bash scripts, Gulp tasks and compile stuff quickly)