â˜…Do people still write and compile programs from the command line instead of an IDE? Why or why not?I'm currently in an introductory C course and we've started learning how to compile and debug using tools such as gcc, gdb and valgrind. Is this approach still relevant in a practical context, or is using an IDE more common in the real world? I noticed that professional programmers still use no-frills word processors such as Notepad and Vim. Sorry for the noob question.
Yes. No matter how big the project is you can always use the command line. Doing so requires you yo know your tool chain much better but it also means you can work remotely over small bandwidth, like 2400 baud, lines. In the Scada world, this is still not all that unusual though maybe it is all now at least 9600 baud. All I need is SSH (or even telnet) and I can write anything. Knowing the curses library from memory helps make a tiny and fast UI. When do I need to be on the same machine as the compiler? Only when I am working on and SDL based application that needs DRI. Sadly I have seen developers so dependent on their IDE they don't have a clue how to build an application without it. And that is fine until they get a new job with a whole new IDE or worse yet, one where they have to code remotely.