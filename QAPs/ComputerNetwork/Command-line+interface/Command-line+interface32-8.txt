â˜…Do people still write and compile programs from the command line instead of an IDE? Why or why not?I'm currently in an introductory C course and we've started learning how to compile and debug using tools such as gcc, gdb and valgrind. Is this approach still relevant in a practical context, or is using an IDE more common in the real world? I noticed that professional programmers still use no-frills word processors such as Notepad and Vim. Sorry for the noob question.
I use the command line for close to 90% of my coding needs. The primary reason is portability. I am sure that if I only relied on a text editor and the compiler or interpreter then I can sit down or login to any system and get things done. This is also because most of my code nowadays are for teaching, demonstration and quick scripting. The command line is ideal for that. In the case of scripting, I strongly rely on a series of programming languages and not just one language or tool to get the job done. My latest script involved curl, sort, uniq, sed and jq to grab some JSON formatted data from a web service, clean it up then pipe it to awk to put it in an associative array to apply counts then wrapped the whole thing in a bash script that does multiple web service calls and spits the results into an output file. The whole activity took no more than 15 minutes to complete. PS. I also recall that when teaching systems programming. I would rather use the command line because I can show the code generation steps involving pre-processor, compiler (and its stages) and linker. Here they see and appreciate the end to end lifecycle of the code.