★Do people still write and compile programs from the command line instead of an IDE? Why or why not?I'm currently in an introductory C course and we've started learning how to compile and debug using tools such as gcc, gdb and valgrind. Is this approach still relevant in a practical context, or is using an IDE more common in the real world? I noticed that professional programmers still use no-frills word processors such as Notepad and Vim. Sorry for the noob question.
I agree with everyone that many IDEs are bloat, slowing you down more than speeding you up. However, the one great advantage of an IDE over command line is the debugger.  Most debugging tasks are so unique to the specific situation, that any automation you get from the command line rarely speeds you up, so that advantage of the command line doesn't really help.  However, in IDEs, the ability to click on a variable and see its value, have the stack trace appear in a window, or use a keyboard shortcut to add or remove a breakpoint is something that is generally much better in an IDE. In contrast, in my experience, most (but not all) debugging that occurs on the command line includes adding print statements, recompiling, and rerunning.  An IDE with a decent debugger definitely has this beat. Given that such a large amount of coding involves debugging, this can sometimes tilt the scales towards an IDE.