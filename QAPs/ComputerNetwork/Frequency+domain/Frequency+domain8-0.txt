â˜…Is frequency domain processing always faster than time domain processing because of FFT?We use FFT for large scale signal processing in usual because we can replace complex convolutional processing in the time domain to less complex multiplication processing in the frequency domain. Hence, it is wondering wether frequency domain processing is always computational efficient than time domain processing or not. If it is not, could you show some related examples for easy understanding?
Not necessarily. It would appear to be the case due to the immense amount of literature available to optimize FFT processing, but there are still downsides like the following: 1. If the signal is real, time-domain convolution may actually require lower MIPS than an FFT multiplication which necessarily has to involve complex numbers. 2. Not all time-series data is going to contain number of sample points close to the power of 2. In such cases, the options are to either do an FFT of size equal to the next higher power of 2 or perform a DFT of the same length as the data. The latter does not have as many optimized implementation as the former and may end up being as complex as the time domain convolution if not more. 3. It is a lot easier to assess the effect of quantization noise due to a fixed-point implementation of time-domain data. On the other hand, fixed-point operations on the FFT coefficients is a non-linear operation and it is not very clear how the noise translates back to the time-domain after an IFFT. There are models available to do this though, but it gets a bit messy.