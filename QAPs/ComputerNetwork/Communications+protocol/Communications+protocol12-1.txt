â˜…How difficult is it to develop a simple networking communication protocol for an individual into computer science and microcontrollers?
It shouldn't be so hard if you have a good understanding of things like SPI, I2C, etc. Protocols like I2C have most of the underlying structures needed for a simple yet useful network, like device addressing, bus arbitrage, etc. More sophisticated protocols like CAN have also more complicated features like checksums, error detection and correction, noise imminent, data priority, etc. You may implement your networking protocols on top of them and add your own needed features like multiple simultaneous streams, wireless handling, plug and play, auto device detection, auto address assignment, etc. If you want to design your own networking protocol for the ground up, you must use bit banging and/or other methods and it will be harder and need more work and also takes most of your processing power in a microcontroller. You may dedicate a microcontroller to network handling and use another one for your application. For application network, designing a simple specific protocol to connect devices is like building a simple TCP server. You need to design various commands, their arguments, data types and data handlings and implement them in your microcontroller. Since you are the protocol designer, then you don't need to follow any law. Everything is in your hands and you decide how to implement them. So it's much easier than implementing an existing protocol. I hope this answers your question and helps you.