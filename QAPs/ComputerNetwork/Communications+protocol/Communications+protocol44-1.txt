★What is the difference between TLS, SSL, and HTTPS?
TLS (Transport Layer Security) is the new name of SSL (Secure Socket Layer). SSL 3.0 served as the basis for TLS 1.0 which, as a result, is sometimes referred to as SSL 3.1. But specifically, SSL and TSL has different ways to secure the connection. There are two distinct ways that a program can initiate a secure connection with a server: By Port: Connecting to a specific port means that a secure connection should be used.  For example, port 443 for https (secure web), 993 for secure IMAP, 995 for secure POP, etc.  These ports are setup on the server ready to negotiate a secure connection first, and do whatever else you want second. By Protocol: These connections first begin with an insecure “hello” to the server and only then switch to secured communications after the handshake between the client and the server is successful. If this handshake fails for any reason, the connection is severed.  A good example of this is the command “STARTTLS” used in outbound email (SMTP) connections. The “By Port” method is commonly referred to as “SSL” and the “By Protocol” method is commonly referred to as “TLS” in many program configuration areas. Sometimes, you have only the option to specify the port and if you should be making a secure connection or not and the program itself guesses from that what method should be used … many old email programs like Outlook and Mac Mail did that. To Review: In email programs and other systems where you can select from SSL or TLS together with the port a connection will be made on: SSL means a “by port” connection to a port that expects to the session to start with security negotiation TLS means a “by protocol” connection where the program will connect “insecurely” first and use special commands to enable encryption Use of either could result in a connection encrypted with either SSL or TLS of any version based on what is installed on the sever and what is supported by your program. Both methods of connection result in equally secure communications. HTTPS is HTTP-within-SSL/TLS. SSL (TLS) establishes a secured bidirectional tunnel for arbitrary binary data between two hosts. HTTP is a protocol for sending requests and receiving answers, each request and answer consisting in detailed headers and (possibly) some content. HTTP is meant to run over a bidirectional tunnel for arbitrary binary data; when that tunnel is a SSL/TLS connection, then the whole is called "HTTPS".