★How many man-hours would be required to write a J2EE application server?What is the number of man hours required to implement a fully J2EE compliant app server like JBoss ? I assume its a fairly complex task to implement an app server. How many man hours would be required to implement  workable model of web-container + servlet container like Tomcat ?
I think it would take a while just to estimate the cost in hours of building a full enterprise Java ("Java EE 7" compatible) application server. However, it is much more reasonable to estimate the cost of building the web container portion of that, similar to Tomcat. I am going to give you two different answers. One is using any number of open source libraries that already exist to cover various portions of the APIs and functionality necessary in that web container. The second is building the entire thing from scratch, such that there are zero external dependencies. So, with a good development team of 7 hand-picked engineers, I estimate that we could deliver a working (and supportable) web container with deployment and basic RESTful management in 4 months, leveraging various OSS libraries (many of the same ones leveraged in e.g. Tomcat). That is roughly 4 man years (but I'm assuming that we're pushing hard and working 60 hour weeks). Without those handy open source libraries to do all of that stuff, the picture would be quite a bit different. Keep in mind that a library, by its nature, tends to be overkill for any point usage case. What that means is that a library might have taken 10 man years to create, and have another 10 man years of maintenance and improvements in it, but might only save you 3 man months in terms of implementation. So my estimate (with the same team) is that a similarly functional server would take about 3x the elapsed time to build, but would likely take longer to mature (e.g. lack of code and path coverage from a testing POV, lack of battle-hardened component use "in the wild"). So instead of 4 months, I would estimate 12 months, corresponding to about 10 man years (I'm assuming a lower average number of hours per week for a longer project). Lastly, my assumptions were with a hand-picked team of engineers who could build any product that I can throw at them. You're not going to be able to find a team like that, and I would suggest that the estimates will tend to grow exponentially as the quality of the team degrades. Tomcat, for example, now has many hundreds of man-years in it, but was originally built (largely) by one engineer (James Duncan Davidson at Sun). For  the sake of full disclosure, I work at Oracle. The  opinions  and views  expressed in this post are my own, and do not  necessarily  reflect the  opinions or views of my employer.