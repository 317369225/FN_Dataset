â˜…Which is the best application server for Ruby?Many servers exist, unicorn, apache(passenger), and so. Give me some advice.
I really like Unicorn. It's a bit more complicated than Passenger; there's no 15 minute installation tutorial and there are a lot of moving parts, but if you have the time and the interest here are the benefits I see over Passenger. Transparency Passenger spins up worker threads and manages them for you, but it's a little opaque to monitor and a little "smart". There are tools that can help this, but you need special "passenger" tools. If you want to monitor it with god, monit, or bluepill it doesn't really work. Passenger fans say you don't need to, that it monitors itself, but I want to know everything that's running on my machines so when something wedges or goes wrong I know where to look for a solution. Zero Down Time Deploys This is the real nut. Unicorn plays well with the kernel and child processes. When you deploy to Unicorn you can set it up to deploy a new master thread, warm it up, and be ready to serve traffic before it kills the old master. This allows you to always have an app instance running and never have downtime for your deploy. With passenger, I always see long requests for about 5 seconds after a deploy. This isn't terrible, but 0 is better than 5. It's Proven The guys at GitHub use Unicorn. The guys at Twitter use Unicorn. If you need more proof that it works in a high volume, high stress server environment you're asking too much. For more info check out http://unicorn.bogomips.org/ http://engineering.twitter.com/2... or https://github.com/blog/517-unicorn Even if you don't decide to use Unicorn, I suggest understanding how it works. It's really clever, and I learned a ton about signals and processes and how a Unix system works just by studying the Unicorn documentation.