★Threading (computer science): Multi-threading on a uniprocessor is frequency division multiplexing(FDM) or time division multiplexing(TDM) (round robin)?I used FDM and TDM just to elaborate my question. It has nothing to do with Signal Processing.
The notion of FDM and TDM don't really apply to process scheduling (though I suppose you could think of round-robin as similar to TDM). I suppose if you applied those ideas from signal processing to scheduling, TDM would refer to a system where you fixed the order of process execution and varied the time, and FDM would be fixing the time but varying the order. In any case, the Linux kernel actually has multiple schedulers, the default being the "Completely Fair Scheduler". Before that, Linux used the "O(1) Scheduler". There's also the optional "Brain Fuck Scheduler". To complicate things, for each scheduler, there are per-process scheduling policies: round-robin, FIFO, idle, batch, and normal. To further complicate things, there are also configurable preemption policies (none, voluntary, desktop, and real-time). In theory, you could contrive a configuration of these parameters to make Linux process scheduling almost purely round-robin. You can even configure real-time scheduling parameters for certain apps to allocate an almost fixed time-slice for them. In practice, Linux process scheduling results in a fairly complex beast that, essentially, attempts to weigh the priorities, CPU resource demands, and interrupt handling requirements of each process to dynamically compute time slices AND the order of execution simultaneously.    Embed Quote