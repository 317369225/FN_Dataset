★What is the best continuous integration & deployment server?
There are many solutions out there. You can have a look at other answers on Quora like: What are some friendlier alternatives to Jenkins/Hudson? What is the difference between Bamboo, CircleCI, CIsimple/Ship.io, Codeship, Jenkins/Hudson, Semaphoreapp, Shippable, Solano CI, TravisCI and Wercker? What is the best technology stack for continuous integration on open source projects?If you just want to get a list of tools, jump to this answer: What are the alternatives to Travis CI? Logically it strongly depends on your requirements, your techstack and how your daily workflow looks like. In my experience it helps if you ask yourself a couple of simple questions to determine which solution would fit best for you & your projects. SaaS vs. self-hosted The first fundamental decision you have to make is whether you want to use a hosted/SaaS solution or a self-hosted/maintained server. If you are using GitHub or Heroku, the first group is most likely better for you. If you have any security concerns, your own locally installed server is the better choice. Simplicity vs. customizability SaaS solutions are generally easier and simpler to setup but you only have a pre-defined set of features. If you need to customize your continuous integration service to a high extent a self-hosted solution might be the better choice. Open source software vs. proprietary software You can test your OSS projects with hosted as well as non-hosted CI solutions. It makes no difference in my opinion. The advantage of hosted solutions is that you don’t have to care about the maintenance of your server. Most of the hosted solutions follow the GitHub model and you test OSS for free. Travis CI built a really good solution to fit the needs of OSS projects (focus on continuous integration instead of continuous deployment). Continuous integration vs. continuous deployment I am a strong believer in continuous deployment, instead of just focusing on continuous integration. CI is important, but just the first step and if you want to get your product out there really fast, you should automate your whole workflow. A smoothly running CD solution is the glue between all the tools you are already using, especially your SCM provider/server and your hosting environment. Conclusion: I’m biased since I’m building a hosted CI & CD solution. Nevertheless if you look at the trend of IaaS/PaaS/SaaS solutions, it absolutely makes sense to use a hosted solution instead of a locally installed one. You should focus on creating your software and not on managing & maintaining the underlying infrastructure. I would highly recommend to take a look at one of the hosted solutions like codeship.io (links to: http://codeship.io/)codeship.com (links to: http://codeship.com/) or travis-ci.org. If you want to run your own server, unfortunately there’s currently no better solution than Jenkins/Hudson. There's another comparison: http://blog.thinkful.com/post/52...