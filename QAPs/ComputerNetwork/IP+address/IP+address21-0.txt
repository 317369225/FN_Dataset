★How do I do fast local geolocation of an IP address?I need to determine a city, state, and country from an IP address very quickly, in a matter of milliseconds.  This speed requirement demands that I do it based on a local database.  I've downloaded the hostip.info database but I can't find any instructions on how to do lookups in it.  Does anyone have any suggestions?  A free option would be ideal.
I would recommend wrapping an in-memory database with a memcached for the best speed, scalability, and operational flexibility. At iLike.com we (Ray Fortna wrote the code that he and I "designed" on a whiteboard) wrapped the C-API to the MaxMind City database in a customized memcached which we had added a GEOIP verb to (a small number of lines of code), so we could just do: telnet geoip-server 25010 Connected to geoip-server.ilike.com (XX.X.X.XX). Escape character is '^]'. GEOIP 67.183.65.7 US      WA      Washington      Bonney Lake     98391   America/Los_Angeles     -122.185204     47.193699 Which was a tab-delimited geo-hierarchical result for that IP. This gave us a simple store with sub-1ms response on the local net which we could put locally (same-node), remotely, use from Ruby, Perl, PHP, etc, all of which have memcached clients. Putting it on memcached ensured that it was on a stable high-performance/low-overhead server engine that we knew could handle thousands of concurrent persistent connections and hundreds of thousands of requests per minute. Centralizing this service to a few servers with a load-balancer in-between made managing upgrades to the GeoIP database and other maintenance to the servers painless and zero-downtime. Having one of these per front-end server seemed like a bit of a waste of 20-30MB of RAM. Note you can start with http://www.maxmind.com/app/geoli... for free then upgrade to the more accurate http://www.maxmind.com/app/city for pay if you feel you need it. Most of the user-concert targeting features in iLike and all the features where we showed per-viewer "(on tour)" links next to songs and albums did geo-resolution using this service. Many offline log-processing analytics features -- where we would break down millions of daily plays, views, etc across hundreds of GBs of server logs -- used this simple service for high-volume Geo-IP resolution from web server logs.