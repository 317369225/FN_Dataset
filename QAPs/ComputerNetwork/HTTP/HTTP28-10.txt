â˜…If HTTPS is more secure than HTTP, why don't all websites use HTTPS?
There are two reasons why HTTPS isn't universal on the web. One is that HTTPS isn't necessarily or typically particularly good security -- it's far more secure than HTTP, but only because HTTP isn't secure at all; however, it has many systemic problems that have been inconsistently patched by browser or server best-practices (for instance, self-signed certificates are rejected by default on most browsers not because they are invalid but because they are essentially meaningless), and inherits plenty of problems from other domains (the certificate system is based off DNS, and DNS has both systemic and implementation-specific security problems -- for instance, I've seen people completely break certificate-based security and spoof supposedly secure sites by taking advantage in inconsistencies in how null characters in the middle of domain names are handled between browsers and automated domain registration systems). HTTPS also has a history that goes back into the stone-knives-and-bear-skins age of crypto and keeps backwards compatibility with some really broken cyphers and hashes. On top of this, root certificates are leaked accidentally all the time. HTTPS is basically just a clusterfuck of accumulated mediocre security design from twenty years ago. For evidence, watch lectures from any security conference regarding HTTPS or certificates and count the gaping holes. The other is that in order to get even minimally legitimate HTTPS (in other words, in order to avoid self-signed certificates), you need to pay into the certificate hierarchy. This can sometimes be quite expensive -- hundreds of dollars per year -- and many providers aren't actually very prompt or reliable. I've heard horror stories about certificate renewal requests going through and then the new certificates not being provided for months. (There are other reasons. Not every site really needs encryption; for instance, static html pages serving non-sensitive content publicly. Encryption adds overhead. But, really, the issue is that HTTPS doesn't give enough bang for your buck to make economic sense for throwaway homepages.) Despite my reservations about HTTPS, it's better than nothing, and I recommend (as a user) using it on whichever websites support it. However, it doesn't always make sense as a web host -- particularly when money is tight. One of the few positive side effects of the ongoing siloization of the web (wherein individual user homepages disappear and people migrate to facebook and blogger) is that large companies foot the bill for certificates.