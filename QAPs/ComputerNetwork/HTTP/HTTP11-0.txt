â˜…Why would HTTP long-polling be used instead of HTTP Streaming to achieve real-time push notifications?
HTTP Streaming has some disadvantages: 1) Since one HTTP connection is persistent between browser and server, it occupies one channel to the server host. This is not a big issue for most modern browsers since they generally don't have only 2 channels per host. 2) The HTTP Streaming works by pushing content continuously to browser, the memory usage is kept accumulated in browser. Basically, the browser needs to close and reconnect the streaming channel to release memory. 3) Some HTTP proxies don't transfer bytes to downstream if the HTTP connection is not closed. In this case, HTTP streaming doesn't work since the connection is held for long time. I once implemented Comet with HTTP Streaming and met above issues. And, HTTP Streaming implementation might be more buggy. I solved quite a few very tricky bugs in our web servers due to HTTP Streaming. The main reason is that the long-time connections should be managed in server side very carefully. It is prone to leak connection resources. So, if I have a chance to implement Comet again. I would prefer Long-Polling to HTTP-Streaming.