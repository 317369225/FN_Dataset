★HTTP Streaming: Which method is better , HTTP Downloading or RTMP Streaming?For my video sharing website, I am using Amazon Cloudfront(CDN) service , Here there is two option for video delivery HTTP Downloading and RTMP Streaming . So which method I have to use for video delivery to make video to run smoothly and to load faster even on heavy traffic ??? And what are the advantages & disadvantages of using these mathods ???
I get the streaming service choice question (RTMP/RTSP, HTTP Stream? HTTP Progressive?) with some regularity and I find that the answer is an AND answer, not an OR answer.  I say offer English and Spanish, order the cracked crab and the lobster, rock the coupe and the SUV. That is, if can you can, offer both a streaming RTMP format and a streaming HTTP format.  Given the fact your service is based on Flash Media Server you just might have this option with fewer issues than you may think - a single Adobe Media Encoder feed can be parlayed into three feeds: RTMP/S- Traditional Flash Players (port 1935) HDS - HTTP streaming to Flash Player for Android (port 80) HLS - HTTP streaming for iPads, iPhones, and such (port 80) Probably the greatest strength of an Adobe Flash Media Server-based service is that FMS packages these feeds on the fly from a single feed where other methodologies require separate feeds or alternatively encoded files - exponentially increasing your storage demands and encoder budget. Of course you'll have to have your web development team make a fairly elegant interface to make all this seamless for your use (a often overlooked, under appreciated, however critical step). Protocol Pro's and Cons - But First… Progressive Media First and foremost let's consider that we're talking about streaming and omit the progressive download option (which doesn't require a specialized streaming server at all - any web server with the correct MIME types/Content Handlers, etc. will deliver progressive media content without little to no hassle. Not that a commercial server manufacturer will deter you from purchasing their product to progressively serve media over port 80 - just consider Apache and IIS if that's your route.  Congratulations, you just saved $10K a year. Progressive media, just so we're on the same page, is web delivered media (typically port 80 like any web content) that downloads your movie in entirety to play.  Progressive service only allows the user to place the play head in a time that has already been downloaded - no scrubbing forward in the movie to rebuffer a  scene in minute 31:00 if to that point you've only downloaded the movie up to minute 12:00.  Bummer, but it's low tech and cost effective. Try an example  and click forward in this espresso brewing video or the trailer of 21 Jump Street.  You can't view that content until the data has been downloaded: Vimeo Progressive Example - Brewing Espresso http://vimeo.com/37438159 Apple Movie Trailer Progressive Example - 21 Jump Street http://trailers.apple.com/traile... Don't be fooled by a ragingly fast download for those of you blessed with a GigaMan circuit in your office.  (At my office - two).  In that case click the "HD" version so you can watch the file download - and note you can't click forward to save your life.  A personal favorite behavior is to watch users click on progressive media that is either cached locally on their workstation or downloaded on their gigabit LAN from a resident web server and say, "See?  It's streams."  Solution:  Head to your local Marriott, grab a free breakfast, login, and tell me again how that works.  Or, for slightly more forward thinking ask your network administrator to "rate-limit" (via Cisco QoS toolkit, for example) a few ports on your office switch down to 384 kilobits per second, 500 Kbs, 750 Kbs, 1.5 Mbs - plug in a few test wireless access points and you've got a local low-bandwidth test bed.  (Alas, without the complimentary waffle). Progressive media, though it obviously has it's place, is not streaming.  For our discussion streaming will: Allow users to scrub forward or backward and rebuffer regardless of how much has been downloaded. Will not download in entirety to a user Protocol Pro's and Cons - But I Digress... The most salient difference for your average user when considering RTMP versus HLS HTTP and HDS HTTP streaming is the port over which it is delivered.  That is, RTMP uses a unique "1395" versus the Plain Jane, the nearly-everything-on-the-web moves via HTTP port "80".  Is RTMP better?   Technically, yes, but we've run into this network quandary before with security VPN practices when a technically sound methodology was overshadowed and supplanted by one that could move freely with regular web traffic.  Remember a few years back (think when you saw "Harry Potter and the Prisoner of Azkaban") your method of securely connecting to your office network was based on a technology called IPsec?  It's even natively in your original iPhone.  It's great, it's functional, it works - and sometimes when I'm in a Marriott, or presenting on someone else's corporate LAN - damn….  The IPsec protocol suite doesn't get routed as freely as the more popular SSL, and many times gets blocked.  RTMP streams are subject to a similar pitfall, while HTTP streams travel freely where any web page can be loaded. In car parlance, think of the DeLorean "DMC-12".  Avert your mindset from the tainted brand and consider how cool that car was for an American audience at the time - stainless steel panels, rear mounted engine, fiberglass underbody designed by Colin Chapman?  Sick.  And it just didn't take. And a final, and rather blunt, comparison in terms of everyday lexicon:  The word "hyperbole" may be eloquent, more people are always going to connect with the more pedestrian vernacular and say, "bullshit". So which delivery mechanism is better?  The point is moot if the one you choose is restricted or isn't ubiquitously transmitted/used across global networks.  (And how many people really speak Basque?). That being said (in FMS) RTMP can be quite secured through protected streaming practices and, if you have the knowhow, can be utilized in a custom applications that can incorporate two-way video, chats, gaming object coordinates, etc.  Conversely HTTP HLS is the only way you're going to get streaming content to an iOS device like the iPad or iPhone. Which on to use?  In FMS a single feed, again, can be parlayed into three separate feeds without much fuss - RTMP (traditional Flash via port 1935), HDS (HTTP, port 80), and HLS (Apple iOS, port 80). Don't require English if you can natively speak Spanish and French and potentially triple your audience.  RTMP, HDS, or HLS?  The answer is yes. *  A great first-timer video for people who aren't up to snuff on streaming delivery methodologies can check out the following video from Lynda.com: Understanding Delivery Protocols Up and Running with Flash Media Server 4.5 - Lisa Larson-Kelly Lynda.com