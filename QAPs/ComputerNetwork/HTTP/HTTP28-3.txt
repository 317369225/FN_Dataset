★If HTTPS is more secure than HTTP, why don't all websites use HTTPS?
I have to agree with Jeff Nelson - everything should be served over HTTPS.  Everything. To understand why, you have to understand what HTTPS gives us: 1) confidentiality: what webpages you are viewing / what you are doing isn't visible to anyone sniffing network traffic - it's encrypted. 2) authenticity: the webpages you are viewing are authentic - they aren't modified in any way 3) freshness (protection from replay attacks).  Important in some scenarios (e.g. online banking, where you are sending money to someone - you certainly don't want someone malicious to send another copy of that command and transfer twice the money). What does it not get you: 4) anonymity: packet sniffers can still see which IPs you are communicating with, which will likely tell them which websites you are viewing / what applications you are running (e.g. if you are connecting to Spotify-owned IPs, you must be running Spotify). When most people think about secure communication, they think of (1), not (2).  I'd argue that (2) is the most widely important property of https - when I connect to, say, cnn.com, I want to know that the page my browser is showing was exactly what cnn sent.  I don't particularly care if anyone sees that I'm reading cnn, and I might not care if they know what article I'm reading, but I sure as hell care that there's no man in the middle injecting attack code into the page I'm viewing. And this isn't just a theoretical concern: a few years ago Facebook used to serve their login page via http, and a government in the middle east actually injected javascript into the login page to steal people's passwords right out of the login form.  Didn't matter that passwords were only sent to Facebook over https - the login page running on http led to user accounts being compromised. So... why isn't everything using HTTPS?  Probably just because it's not the default configuration - raw HTTP is easier to get set up.