★What are the best simulators for a peer-to-peer system or distributed system?I'm trying to test the performance of a distributed protocol. So it would be better to if the simulator can focus on the processing of single nodes and hide the detail of node to node communication. Another way to put this is that I want to run the protocol in a simulated platform and collect the log. And then do performance analysis based on these log.
The first step to deciding which simulator to use is to chart out your requirements. Do you need an accurate model of a physical network? If yes, you probably need a full blown per-packet simulator such as ns-3 which can go so far as to run an actual Linux kernel as a node. If not, do you just want the abstraction of a channel in between your nodes? Maybe PeerSim will do. Do you want nodes that are executing your distributed protocol to semble actual multi-core physical servers with different resources on them? At what level of realism do you want the abstraction of the server's hardware to behave? Cloudsim might help on this front. If none of these work and you want to code up your own simulator, the SimPy libarary for python is worth exploring (I'm using this to play with some distributed protocols myself these days). Chart out a list of these questions before you proceed with narrowing down the simulator you want. Next, try to understand to what degree the simulator itself has been validated. Far too many scientific results and claims have been produced off simulators which were never validated for the said use-cases and experiments. As an example, if your performance results depend on say, the I/O bandwidth of an actual server, and your simulator does a weak job of modeling this, you're probably going to get bogus results. If what you want is performance data along the lines of latency and throughput, you're really better off coding this up to run in the real-world or at least on a well-validated emulator. The right way to proceed is to play with the basics of your idea in a simulator and then evaluate a proper implementation on a real testbed.    Embed Quote