â˜…Computer Architecture: Why is context switching expensive on intel x86 chips?
In fairly general terms, hopefully fitting the intention of the question - looking at context switch cost in relation to the cost of doing other things, it's because memory access is slower than processing by orders of magnitude. Processing can run as fast as it can because processor and operating system both maintain an astounding number of various buffers and tricks to feed the core with data at suitable speed, giving it the illusion of fast memory access, and shuffling everything back into the right places later, when time permits. Switching contexts causes all (or at least some) of this Rube Goldberg factory to grind to a halt, because no liberties can be taken with timing and consistency when you are packing up data to be taken out again later. The incoming task can't start until all its state and internals have been put in the right places, and putting it there can't start before the corresponding stuff has been flushed for the outgoing one. The relative cost of this isn't so much a flaw of the cpu architecture, as it is a testament to how successfully it masks the cost of the memory performance gap when it can. Context switches won't let it mask anything because they are context switches, and thus we get to experience the harsh reality of memory access in full. It bears mention that 'context switch' can refer to several things; switching between programs is heavier than invoking a system call, and switching between threads inside a single program isn't terribly expensive in comparison with either. The cost, unsurprisingly, is in proportion to the amount of context which needs to be switched for a given type of task. This is not exclusive to x86s, by the way, they just happen to live in a market segment where it's cost effective enough to go for peak compute performance relative to the accompanying memory. The circuitry in your alarm clock possibly sports a friendlier cpu/memory performance ratio, since it doesn't require bleeding-edge processing speed for anything. Aside from architectures, any kind of context switch is going to look expensive when compared to not switching contexts (but I don't suppose anyone was wondering about that...)