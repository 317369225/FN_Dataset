â˜…Why are system calls expensive in operating systems?
Here is a quick answer. CPUs and Modern Operating Systems implement protection rings in hardware and software respectively. The idea is to isolate processes for security and fault tolerances. Usually the kernel process runs in ring 0 which has the highest privileges while the user space would run in higher ring such as ring 3. This makes sense in multi user and multi tasking operating systems where one process should not access the memory contents of another process. The kernel acts as a moderator to processes who would request system access on behalf of the user process. However this incurs overhead due to lot of additional instructions that need to be performed. But real mode operating systems such as DOS always run in ring 0 and can make direct system calls without overheads. If you are looking at GNU/Linux, there's a project called Kernel Mode Linux which makes it possible to run user space programs in kernel mode. Here's the link: Execute user processes in kernel mode