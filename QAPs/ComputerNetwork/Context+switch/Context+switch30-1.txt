â˜…Why do only IT/Software companies like Facebook, Google, Valve, Dropbox etc. see the importance in creating fun and the most comfortable working places?
In short, the nature of the work. However, a clarification is required. Distinction must be made between "IT" jobs (managing databases, corporate IT, customer support, testing and QA) and "Innovative Software" jobs (making apps, games, social media and such). Software jobs are fun. IT jobs have traditionally been boring and regarded as a drudgery. Fungibility of Products and Services To understand why software jobs are fun, one must understand why traditiona jobs are not fun. Traditional jobs (manufacturing, service sector etc.) are the products of a long evolution that began with the industrial revolution. The key triumph of the Industrial Revolution was mass production and specialization. Products could be made out of a number of identical, interchangeable parts which could be mass produced. This is called fungibility. Workers slowly started concentrating on smaller and smaller specializations resulting in greater and greater efficiencies. For example, a typical desk job usually involves handling a very insignificant portion of the overall work of a large corporation. The work is often repetitive. Fungibility of Workers Very soon people realized that if the workers themselves could be made fungible - that is identical and interchangeable - more efficiences could be realized. Compare this with the pre-industial society where each artisan (or at least each artisanal guild) would have its own disctinct style. If you were employing one craftsman, he could be not be easily replaced by another. The industrial age gave rise to the interchangeable worker. One assembly line worker is pretty much the same (in terms of skills) as another. This was achieved by the modern public education system which ensures (or at least tries to) ensure that all of us graduate with more or less the same kind of skills. When the worker pool is fungible, market forces can prevail and wages can be determined by market forces, hence greater efficiency. Boring Work So this is what this results in - repeatable, standardized, interchangeable production of goods and services. A worker pool with repeatable, standardized, interchangeable skill set. Any deviation from the "system" will actually drive efficiencies down. Thus, people thinking for themselves or out of the box actually hurts a traditional corporation. If you work at McDonalds, trying to get creative with your burgers is going to cost the company business. Software Work Software work is fundamentally different. Even though efforts have been made to make writing software more industrial, it largely remains a craft. Each programmer is unique. Each software product is unique. Programmers are not interchangeable. Software itself is interchangeable to some extent, but not really. Even though there exists software "engineering" there is very little engineering like about software. A software engineer is much closer to the artisan of medieval times than he is to the industrial worker of present age. Since software cannot be produeced industrially (ie mass market identically produced goods) the only way to make money is to go the other way. The more unique or innovative your software is, the more valuable it becomes. Thus, the chief concern of managers in software companies is how to foster innovation. The fun atmosphere that OP is talking about are just ways to foster creativity. It isn't unique to software, other crafts-like trades do it too (consciously or unconsciously). e.g academia, films and TV, arts etc. IT is Boring Too There are parts of the software world (usually referred to as IT) that have been industrialized to a large extent. Corporate IT, database management, customer support, testing and QA are some examples. Companies like TCS or Wipro don't need a creative atmosphere and would arguable suffer if they did have them.