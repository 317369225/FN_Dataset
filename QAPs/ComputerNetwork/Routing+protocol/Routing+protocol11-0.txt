★How do distance vector routing protocols work?
The algorithm is available in plenty on the internet, so am assuming you'd like to know how it works rather than a paste of the algorithm. Let’s say you are playing a board game. There are 5 players and each of you place your coin at some arbitrary point on the board. (A, B, C, D and E) The objective of the game is to pass cards given to you to other players as indicated on the cards. There are some costs associated with each pass. These costs for simplicity sake, let’s consider as the distance between your coin and the other player’s coin. The person with the least cumulative cost after passing all cards to the destined recipient wins the game. Now, the twist is that you only know the costs to send to the ones you are sitting next to (say B and E), you don’t know the cost of sending the card to the other players (D and C). But, what you can know is cost from B and E to their neighbors.   Round 1:   A: You begin. You sit next to B and E (say you’re all sitting in a circle) You tell Cost to B – 2 Cost to E – 3   B: B says Cost to C – 5 Cost to A – 7   Now you know a new neighbor's cost – C! Logic says you can’t directly pass to C, you have to give to B and B will give to C. So now you have updated your costs Cost to B – 2 Cost to E – 3 Cost to C – (2+5) = 7   C: C says Cost to D – 1 Cost to B – 6   Now you know cost to D so, update Cost to B – 2 Cost to E – 3 Cost to C – (2+5) = 7 Cost to D – (7+1)=8 .... Lets say E said cost to D is 2 Now you'll update the known cost to D since this will be cheaper (3+2 = 5) And so on and so forth. Once all players say the costs, you will know the cost to every other player. And you try and get the cheapest possible cost. This is how distance vector works. Roughly.   This is a very simple and highly diluted example purely for understanding the basic working of Distance Vector. One important note - the routers send an update message whenever their cost changes. And only where there is a cost change. I struggled to understand when I  first read this and I've tried my best to simplify it. That might have  led to me missing out on the nuances of the algorithm. So, please do read the algorithm for a much much better understanding, this is the basic idea. Please let me know if you have any further queries, I’d love to help you out.    Embed Quote