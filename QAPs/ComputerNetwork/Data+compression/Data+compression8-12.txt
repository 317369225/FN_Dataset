★How does file compression work?zip, tar, gz, rar etc. How does a file become 'smaller'?
Assume we are using a file system that takes one unit of memory for every character/number. If your file contains this: 0000000000 It will take 10 units of memory. A compression algorithm will try to represent this in a meaningful form (without losing any meaning), at the same time will try to conserve memory. It does this by finding a shorter description of the contents of the file. One possible compression would be describing the file as 10 zeros  This takes 8 units of memory (including the space). A smarter algorithm would describe it using even less space: 10:0 Where the developer has described the algorithm's as <count:character>. It is important to keep in mind that the algorithm must be designed in such a way that we must be able to decompress to get back the original content. One of the first compression algorithms that get taught to computer science students is the Run Length Encryption or Run Length Compression. This does compression by simply counting the characters just like the example algorithm above. For instance a file containing the sequence aaabbcddddef will be compressed to a3b2cd4ef. A good Run Length Encryption algorithm will check if the compressed sequence is shorter than the original, and compress only if that condition gets satisfied. Slightly more than layman explanation: Compression is works because fortunately, most data is sparse. By this I mean that, most of the data is noise/redundant. Imagine we are in a binary world, in where 1 means presence and 0 means absence, in that case you'll find more 0s than 1s. Also take a look at  Kolmogorov complexity which is one of the foundational topics in Information Theory that talks about making the choice between whether or not it is better to leave the string compressed or in its original representation.