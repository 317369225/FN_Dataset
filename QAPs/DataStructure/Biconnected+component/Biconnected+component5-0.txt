Is there an algorithm that finds subgraphs of a graph such that each node in a subgraph is connected to at least k other nodes of that subgraph?I'm looking for extracting k-connected subgraphs from a graph. The application of such a problem being, given the mutual friends between each friend in a social network, a k-connected subgraph corresponds to a community amongst friends.
You're mixing together two different notions. A graph is said to have minimal degree k  if every vertex has at least k  neighbors. A graph is said to be k  -connected if removing any subset of k−1  vertices from the graph leaves a connected graph. (see k-vertex-connected graph). A "community" of people in a social network is a very vague notion, and none of these definitions necessarily captures it well. First off, you never said what k  was; a 1-connected subgraph isn't the same thing as a 6-connected subgraph. Now, there are many graphs with minimal degree 3, say, that look nothing like a community; for instance, a set of 12 people arranged in cliques of 4 is a subgraph of minimal degree 3, but the cliques are totally unfamiliar with each other so that's hardly a community. 2-connected or 3-connected graphs are a better model for a community, but there could still be many cases where they would seem wrong. A long cycle (A knows B who knows C who knows D... who knows Z who knows A) is 2-connected, but is that a community? A doesn't know anyone here except B and Z, and the same applies to everyone else. You can push for 3-connected or 4-connected etc., but you quickly run the risk of not finding any communities according to those stricter definitions. Anyway, sure there exist algorithms for finding k  -connected subgraphs of a given graph; you probably mean to ask if there are efficient ones. For k  =2 the answer is yes, there's a linear-time algorithm by Hopcroft and Tarjan that finds biconnected components (those are maximal 2-connected subgraphs). See Biconnected component. For k  >2 the situation becomes more complex since there's no unique way of defining maximal components. If you just want to find some k  -connected subgraph, this may be easier, but it may or may not be feasible depending on the value of k  and the size of your graph. See SPQR tree and other references you can find by Googling for "k-connected components". 