Bulk Synchronous Parallel Computing: What kinds of BSP algorithms have been developed?
In my 1998 paper "Foundations of Time-Critical Scalable Computing" I listed a number of the algorithms that had been developed and published by the Oxford BSP Group over the previous five years. The paper is available here http://paloaltodata.com/index.ph... The list included: Primitive operations: broadcasting, preﬁx sums, load balancing. Sorting and searching: sorting, radix sorting, integer sorting, merging, selection, multiway searching, relational join. Data structures: heaps, priority queues, dictionaries, list ranking, tree contraction, expression evaluation. Linear algebra: matrix-vector multiplication (dense, sparse), matrix multiplication, Gaussian elimination, LU decomposition, QR factorisation, triangular systems, banded systems, Toeplitz systems, sparse Cholesky factorisation. Graph algorithms: connected components, spanning trees, biconnectivity, shortest paths. Computational geometry: convex hull, geometric searching, visibility. String algorithms: string matching, string edit problem. Scientiﬁc computing: FFT, N-body problem, molecular modelling, computational ﬂuid dynamics, computational electromagnetics. I'm sure there are many others that have been developed since then. Updated 22 Oct 2013 • View Upvotes