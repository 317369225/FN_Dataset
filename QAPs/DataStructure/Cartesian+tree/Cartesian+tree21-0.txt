What is the Euler's identity of algorithms?
The Euler identity's elegance is perhaps tying together two seemingly unrelated concepts. In this vein, I would like to propose Cartesian Trees. There are two problems: Range Minimum Query This is an querying operation done on arrays, where the minimum element in a subarray is queried. Lowest Common Ancestors This problem arises when given a rooted tree, and two vertices, determine a vertex that is an ancestor to both of them (think ancestors as yourself, your parent, your parent's parent, etc.) that has the highest depth from the root. This two problems may seem unrelated, but Cartesian trees allow you to show that being able to solve one will automatically solve another. There is also also a subtree-subarray bijection that is exhibited. 