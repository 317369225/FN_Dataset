What are some habits in database design for a web developer to build early on?
A few basic things that programmers tend to not know about databases, but should. Make as few calls to the database as possible.  If possible, return many records at once and store in an object instead of looping through a select statement.  And don't just do SELECT *.  Be specific. Know what an index is, how it works, and when to use one.  Understand how a b-tree works and how it applies to scanning data in tables.  Understand performance implications of updating or inserting data when an index is present. For that matter, know what all the different objects in a database, what they are, and when to use them.  IE, materialized views, synonyms, sequences, etc. Understand the basics of an explain plan.  Know what a hash-join, nested loop, merge join, and Cartesian joins are. To expand a bit on Peat Bakke's answer, know when to rationalize and when not to.  There are advantages and disadvantages to going fully normalized and while there's a ton of theory, actual results are the difference makers. Instead of sending tuning requests to a DBA, try a bunch of different things yourself.  When you do get stuck, sit down with the DBA to understand what is going on. Take a look at table partitioning and how it can help in efficiently retrieving and storing data. Leverage database platforms for what they are good at.  Do aggregations, sorts, and joins directly in the database.  It is far more costly to try and write the code to do that kind of stuff.  Basically transform the data as much as possible in the database.  An example might be instead of returning data then running a substring function in the application on all records returned, run the substring function directly in the select statement.  That way your data is only "looped" through once. 