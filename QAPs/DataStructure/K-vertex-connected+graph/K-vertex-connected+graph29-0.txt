In layman's terms, what is TREE(3)? Why does it grow so rapidly to make massive numbers?
I hadn't heard about it before, but I'll give it a shot from what I can find on the internet. First, we need to be able to talk about k-labeled trees. These are graphs where every vertex has one of k labels, so you can imagine the vertices as being labeled with a number from {1, ..., k}. Since you asked for TREE(3), let's make it concrete: fix k at 3 and use the labels {1,2,3}. We also require that they are trees, that means that there is exactly one path between each pair of vertices. Now draw such a tree: it has labeled vertices, and edges between pairs of vertices. Then draw another tree. And another. Make a long sequence of trees, but there are two rules: tree number n can have at most n vertices. So trees can only get really large after you've drawn a lot of them. And another rule is, you can never draw a tree that contains an earlier tree. When does a tree "contain" another tree? This is actually exactly what you expect it means: it means that you can take a red felt tip pen, and link each vertex in the earlier tree to a vertex with the same label in the new tree; you have to do this in such a way that two linked vertices in the new tree are connected by an edge if and only if the corresponding vertices are connected by an edge in the old graph. (There are also unlinked vertices in the new tree, but those don't matter, and neither do edges that connect to an unlinked vertex.) Okay, now we have all the ingredients. You may think that you can draw an infinite number of trees according to the rules I just described. But actually, that turns out to be impossible: there is a thing called Kruskal's tree theorem which states that you cannot make an infinite sequence of trees in this game. TREE(3) is the longest sequence that can possibly be made according to the rules! 