What are the standard puzzles asked in programming interviews?
Here is the list of algorithmic questions I have encountered in my interviews: Given is number N. Create a function that calculates [math]\sqrt{N}[/math]. Given  is an array containing N numbers, A[0], A[1], ... A[N-1]. Compute the  array B of length N, such that B[i] =  A[0]*A[1]*...A[i-1]*A[i+1]...*A[N-1]. Algorithm should work in time  O(N), memory O(N) and can't use division. Given is an array containing N numbers, which are either 1, 0 or -1. Find out the length of the longest contiguous subsequence going from index i to j, such that A[i]+A[i+1]..+A[j-1]+A[j] == 0. Given  is array A containing N numbers. Find three different indexes i,j,k,  such that A[i]+A[j]+A[k] == 0. Algorithm should work in time O(N^2). Given  is matrix M of size X*Y, filled with integers. Rows and columns of the  matrix are sorted in non-decreasing order. Find the number of zeros in the  matrix in time O(X+Y). You will be  given N numbers, one at a time. Each time you are given a number, write  out the median of numbers you already have. Total time of algorithm  should be O(N*log(N)). You should also argue why it cannot be O(N). There  are unknown number of objects given to you, one at a time. At each  moment you can decide either to keep the new object and throw away the  one you already have, or throw away the new object and keep the one that  you already have (in other words you can only use constant memory). Pick up the  random object with uniform probability. You are given a file containing numbers. Output the number which is not in the file. (a really nice solution is to output a number 2^S, where S is the size of the file in bits) Edit: Because of great success here goes more problems: Given is an array containing N positive (>0) numbers, A[0], A[1], ... A[N-1]. You are starting at coordinates [0,0] and go A[0] steps to the north, then A[1] steps to the east, A[2] steps to the south, A[3] steps to the west, A[4] steps to the north, etc. Calculate the smallest index i, such that path A[0], A[1], ... A[i] crosses itself. Time complexity should be O(N), memory complexity O(1). Given an integer X written in negabinary notation (Negative base). Output the number (X+1) in negabinary notation. Number of negabits can be upto 10^6. Imagine an infinite Ulam spiral  with number 1 at coordinate [0,0]. You are given coordinates [X,Y]. Output the number on the spiral lying on coordinates [X,Y]. Space and time complexity O(1). There is a circle with radius N and center at [0,0]. Calculate the number of points with integer coordinates lying inside the circle. Time complexity O(N). Given is an array containing N integers, A[0], A[1], ... A[N-1]. Find the index i, such that A[j] <= A[i] for all j<i; and A[j] >= A[i] for all j>i. I.e. the numbers on the left side of i, are smaller-or-equal to A[i]; and on the right side of i, are larger-or-equal to A[i]. Space and time complexity O(N). Updated 66w ago • View Upvotes