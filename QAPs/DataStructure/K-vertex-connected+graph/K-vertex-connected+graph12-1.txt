What is the P versus NP problem in computer science?
P is a class of decision problem which can be determined by a deterministic turing machine in polynomial time. NP is a class of decision problem which can be determined by a non-deterministic turing machine in polynomial time. We can see that any P problem also belongs to NP. Hence P is definitely a subset of NP. However the question is does P = NP hold good? i.e can every NP problem be determined by a deterministic turing machine? P=NP has neither been proved nor disproved. However most believe P != NP If P=NP holds we will have efficient algorithms to solve many complex problems. Hope that helped! 