What are the top 10 algorithms every software engineer should know by heart?
Basically just understanding why an algorithm is considered good and why another is bad is more important than just knowing. Typically run time ( CS focuses on worst case ) is a pretty important factor in the “is this a good algorithm” decision. But if you need a list of things to start exploring algorithms I would suggest starting with: Set Theory Data Structures (Stack, Heap, Trees, etc.) Sorting Algorithms (Bubble, Quick, Heap Sort, etc.) With a short detour to Huffman Coding Big O Notation (Asymptotic Notation)... (more)