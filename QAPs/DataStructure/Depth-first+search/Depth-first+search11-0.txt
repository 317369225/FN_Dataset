Why space complexity of depth first search is O(bd)?
DFS algorithm can be implemented recursively and iteratively . Depth-first search - in the iterative version, we have a user defined stack, and we insert elements onto the stack just like we insert elements in the queue in the BFS algorithm. If the max depth is d , then at every level you have to store the children( b branching factor) of all the node in path from root to that particular node. so, when you have reached the leaf node the number of nodes in the stack will approx db (<=N(number of nodes) ). level 1: b-1 nodes level 2 : b-1 nodes â€¦. level d-1: b-1 nodes level d: b nodes So, total node in the memory = (b-1)(d-1)+b = bd+1-b+d+b = bd+1-d = (b-1)d+1 === aprrox O(bd) space. Q1) when can the space complexity be O(N)? if the height of the tree is 1( max depth d) and branching factor is N, then all the nodes will be in the memory bd = N. ( i know it's a bad example) 386 Views