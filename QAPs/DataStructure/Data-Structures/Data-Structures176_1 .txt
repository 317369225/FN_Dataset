Why is the time complexity of Insertion and Deletion in Singly Linked List Big O(1)?Yes, you are corrrect if you consider two operations (indexing and inserting) in one go. It is not true in this case because when you are inserting a node in the middle of a linked list, the assumption taken is that you are already at the address where you have to insert the node. The time complexity of accessing the node is O(n) whereas only inserting a node is O(1). The same is true for Deleting a node from a singly-linked list. I hope that answers your questions. In case you want to know more about it, you can clear your doubt at Big-O Algorithm Complexity Cheat Sheet 103 Views  View Upvotes