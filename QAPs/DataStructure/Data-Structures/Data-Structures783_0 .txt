What are the different kinds of trees that can be defined on graphs? And why do we study each of them?Be careful with your wording here. We do not “define” a tree on a graph. Certain graphs have the property that they are trees. So what is a tree? A tree is simply a graph (usually we refer to the finite variety, but they can be infinite) which is connected and acyclic. A graph is connected if any two nodes in the graph have a path between them. This captures the idea that no two nodes are on separate pieces of the graph. A graph is acyclic if no path exists beginning and ending in the same node. Probably the most immediately useful kinds of trees to study are the various kinds of search trees. The first kind most students usually encounter are binary search trees. Binary search trees are data structures that store data in a manner that enables very efficient retrieval. How do they work? Before we get into those details, ask yourself, how do we store large amounts of non-digital data in a way that allows for quick lookups? A phone book is an example of a large source of information containing usually only a couple numbers of interest to us. How do we find these numbers? We have a key (a last name for example) in mind and we begin somewhere in the phone book (say in the middle). The middle of the phone book may have some last name Katz. If we are looking for the last name Chan, where do we look? Certainly not in the part of the phone book following Katz. This eliminates 1/2 the remaining pages each time. Binary search trees (and their generalizations, B-Trees) store data in a way that enables us to do the same kind of thing, but at an even larger scale. B-Trees are widely used in Database Management Systems like SQL Server and MySQL. We study them to understand how to design databases that utilize their B-Trees appropriately. That’s just one example, but it’s a really central one that should keep you busy for a long time. 227 Views