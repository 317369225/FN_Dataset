Does software engineering require the usage of dynamic data structures and pointers?Is dynamic data structures (e.g linked lists, binary trees) commonly used in software engineering? Also are pointer variables (like in C) used in software engineering as well?Such structures are widely used these days, but surprisingly it is possible to write non trivial code without them. Much of the world’s computer systems were once based on COBOL, original versions of which had no ability to dynamically allocate memory - you literally have to define all the data structures and the length of all your strings and other structures at compile time. COBOL allowed arrays, but not pointers. The reason is the early computers which executed COBOL were so memory constrained that forcing developers to allocate all memory upfront was the safest way to ensure they didn’t inadvertently exceed the physical limitations of the machine. Its difficult for people who didn’t live through those times to understand what it was like. I still remember having to get approval from several layers of management because I wanted 300Mb of hard disk space. Nowadays computer resources such as memory are effectively unlimited for most applications. It is much easier to write clean code which properly isolates subcomponents with dynamic memory allocation, so the severe resource constraints which created the need for COBOL mostly no longer apply. 127 Views · View Upvotes