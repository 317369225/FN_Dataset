Given a min-heap of N elements, is it possible to find an element in less than O(N) time?let’s say you have min-heap H of N elements. Can you find/extract an element from Heap H given it’ key in better than O(N) time complexity?Thanks for A2A :) No. Problem with min/max heap is that they are not sorted in any order like BST, AVL, Red-Black, 2–3 Tree and others, what this mean is if you traverse them in any order like in-order, pre-order, post-order or any you can’t get them sorted unless you apply N min/max extract operation. As you know that min/max extract operation is O(log(N)), given you have to heapify again, which implies you have to spend O(NlogN) time. Now let’s start searching you may start from root element, once you will compare your key element with root then you will have two choice either go to left or right, but this is not true since if you go to left side then there’s possibility that left subtree has an element which greater/lower than current element, similarly for right subtree. Therefore you couldn’t make any choice, but still you want to search this element so you have to visit all element in heap in worst case, which implies you can’t have better than O(N) algorithm. 33 Views · View Upvotes · Answer requested by Pooja Aggarwal