Why is it quicker (O1) to find an item in a list through hashing (hashmap), than it is do go directly to the item that you're looking for?For clarification: Why is accessing an item in a python3 list, by index slower than accessing one in a dictionary, by key?As pointed out by Steven, O(1) isn’t speed but rather speed of growth, like the difference between acceleration and velocity. A hashmap and a direct lookup are both technically O(1) because their complexity doesn’t appreciably increase even if you add a whole lot of elements to the list. The reason a hashmap might be practically slower is that it includes a direct lookup as part of its algorithm. Your hash function (which itself requires several arithmetic operations) gives you either a memory address or an address-offset, at which point you perform a direct lookup to get the value. So while both algorithms are constant, hashing requires more operations and is thus the slower algorithm 249 Views · View Upvotes