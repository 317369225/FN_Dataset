What is the difference between keys and values in binary search trees in Java?In Java, to my knowledge there are at least two collection data types that use a binary search tree as their underlying data structure - TreeSet and TreeMap. TreeSet simply contains a set of items; it is basically a collection of unique stuff, where the uniqueness of each item is determined by a comparator function which you can supply to the set or is implemented by the class of the items in the set. TreeMap is the same as tree-set, only slightly different in that each item has a value separate from itself i.e. the item is now used as a key which points to some other value else where. If this was C, you could say that each key acts as a pointer to some address which houses the value. Now back to your question. It is slightly confusing in the way it is stated because it makes it appear as if binary search trees inherently have keys and values, but this is not so. In fact the only difference between treeset and treemap is where you get the value stored in the tree. For treeset, the value is the item in the set, whereas for treemap, the value is the item pointed to by the key. I believe Iâ€™ve answered your question but to conclude, keys in most data structures usually have no meaning on their own but rather exist to provide easy access to something else, values are the end goal. Thanks for the Asked To Answer. 168 Views