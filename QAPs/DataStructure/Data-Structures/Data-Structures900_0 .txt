How do enqueue and dequeue differ?A queue is like a line at the grocery story (in fact, the British call them both “queues”). When a person goes to the end of the line, they’ve been enqueued. When they finish checkout out and leave the line, they’ve been dequeued. In practical terms, the reason you use a queue in a program is because you want a certain set of actions to happen in a particular order, and you don’t want the next action to start until the last has completed. There are a number of reasons you might want this, the most common arising from languages that permit “asynchronous” actions, meaning actions that can all be executed simultaneously without interfering with one another. Sometimes you don’t want that to happen. Let’s say somebody clicks a button rapidly ten times and every time they click, a turtle takes one step across the screen. Well, you don’t want the turtle to be running logic to animate ten different steps at the same time — that would completely ruin the animation. So what you do is add those steps to a queue. Clicking the button ten times quickly enqueues all ten steps. The queue then dequeues one step, which causes the turtle to animate through a single step. Once that is complete, it dequeues the next and starts a fresh animation, and so on and so forth. Hope that helps :) 207 Views · View Upvotes