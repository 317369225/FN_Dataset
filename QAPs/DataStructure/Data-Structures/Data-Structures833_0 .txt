Which trie data structures must one learn while learning programming, given there are so many?There are so many tries! - R-tries, ternary tries, PATRICIA tries, suffix tries, X-tries, Y-tries, and many more! Which are the most modern ones that are heavily used in the industry, and are asked in SDE interviews?Holy crap, I never knew there were so many kinds of tries! To me, a “trie” is a simple data structure that stores a collection of words and allows you to look up whether a given string is in the collection or is a prefix of one of the words in the collection. This simple kind of trie will often be useful in solving interview problems involving strings. A suffix trie is a trie built from the suffixes of a string. It can be used for solving problems similar to string matching, but not efficiently. For that you’ll need the suffix tree, which is more compact but also difficult to construct. Suffix trees are much less likely to come up in interviews but you may want to familiarize yourself with their applications anyway. I haven’t heard of any of the other terms mentioned. 9.6k Views · View Upvotes · Answer requested by 1 person