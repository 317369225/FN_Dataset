How do I design a data structure to store sets, efficiently add new sets and, given any set, check if we have already stored any of its subsets?I would use linked-lists. There are two types of nodes required, a “set” node which contains the element and a pointer to the next set node and a “set-of-sets” node which contains a pointer to the head of a linked-list of set nodes and a pointer to the next set-of-sets node. Insertion of a new element to a set means simply inserting at the head of that set while inserting a new set means simply inserting that set at the head of the set-of-sets. Both operations take O(1) time. Checking that set A is a subset of set B would take O(mn) time however (where m is the number of elements in A and n is the number of elements in B) because you would have to check that each element of A is an element of B. If the elements were sorted then the check would take O(m log n) time but you wouldn’t be able to use linked lists for that purpose. 122 Views · Answer requested by Guillaume Aubian