Which algorithms and data structures are encountered in most software jobs?Arrays, Linked Lists, Stacks, Queues, Hash Tables, BSTs, Maps (Hash vs BST), Sets, Tries all have real applications in the software industry. Its just that they may not be all used in one application/project by one engineer. Coming to algorithms, Sorting, Searching, BFS & DFS, String manipulations, Bit manipulations, Recursion, Iteration are quite common. Most of the times, you are not writing DSs and Algos from scratch for good reasons. Inbuilt libraries provide you nice, tried and tested wrappers around them and all you do is use the container classes and their APIs. Map is a wonderful data structure. Heard of MapReduce in Hadoop? Heard of key-value data stores? A Map can be implemented using a Hash table (for O(1) operations). In which case it is called a HashMap. It can also be implemented using some BST (for O(log n) operations). In which case it is called a TreeMap. Now, why would anyone use a TreeMap over HashMap if it is slower? Well, if you need to maintain the relative ordering of all elements within the data structure. Let’s say you want to iterate over all elements in order - not possible in HashMap. Yes, a lot of seasoned programmers can’t reverse a Linked List. Just like a lot of folks on Quora can’t recall Archimedes Principle. We all studied it, didn’t we? But we don’t “deal with it” everyday. 706 Views · View Upvotes