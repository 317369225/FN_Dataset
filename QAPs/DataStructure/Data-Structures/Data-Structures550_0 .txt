How can I build a hashmap/dict in Python, completely from scratch?Every language has its fundamental types that are the foundation for every other derivative types you may think of. `dict` in Python is one of them and it’s impossible to implement anything close by efficiency in Python (I’m not talking by C-extensions). You can try to measure the performance of the builtin `dict` and the following: class Dict: def __init__(self): self.keys = [] self.values = []   def __contains__(self, item): return item in self.keys   def __setitem__(self, key, value): try: idx = self.keys.index(key) self.keys[idx] = key self.values[idx] = value except ValueError: self.keys.append(key) self.values.append(value)   def __getitem__(self, item): return self.values[self.keys.index(item)] 21 Views · View Upvotes · Answer requested by Joel De La Cruz