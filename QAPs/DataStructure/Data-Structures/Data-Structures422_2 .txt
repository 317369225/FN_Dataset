Why do some programmers ignore algorithmic efficiency and rather focus on just making a program work?I am an Aerospace Engineer and I enjoy coding. To me, one of the most important part of an efficient program is an Algorithm but then I met developers who have no clue about time complexity or space complexity. I am just curious as to why algorithmic efficiency is ignored when itâ€™s so important?I know some people that work in the gaming industry. I also love programming. They ignore it, because they can. They are not passionate about making things the best they can be or do not have the time, they just want it done. Even in the gaming industry, things are made as fast as they need to be, if someone makes something better it would be applied, but it is not needed. I had one example from a friend, he worked at Google. He loved his job and all was great. He had some free time and improved a program by using a fenwick tree. It was not his problem to begin with. It got implemented of course. Now, the problem was silly and someone who has done a bit of serious competitive programming would immediately see this, but that was not needed. Every problem has a bottom level it needs to be solved at, everything better is welcomed. Any industry just wants things to get done first, right? Complexity is not the only important thing there is, it is important only if needed to get things done. There are a lot of thing that need to be coded. I assume that is why there are developers who have no clue about complexity. It is not necessary for them to know. I was personally shocked to find out that some people in the gaming industry do not know linear algebra (basics) and physics beyond high school level. If they need to know mathematics for something, they just google it, take the formula and apply it. If it is not perfect yet (they do not know why) they will just add some factors in the equation to make it look pretty. That is all that matters. It works and is pretty. :) 111 Views  View Upvotes