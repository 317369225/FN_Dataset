How do I perform revolve operation using a treap?I am solving 3580 -- SuperMemo problem. Where revolve operation is defined as rotate sub-sequence {Ax ... Ay} T times. For example, performing "REVOLVE 2 4 2" on {1, 2, 3, 4, 5} results in {1, 3, 4, 2, 5}. How to use split and merge functions to perform revolve operation on a treap?Assuming revolve {Ax, … , Ay-1, Ay} means it becomes, {Ay, Ax, ... , Ay-1} First step, we will find where the first element of the sequence Ax will end up after the operation. It can be easily done by pos=  pos= x+Tmod(y−x+1)  x+Tmod(y−x+1) Next we need to find how many elements from the front will move to the rear. For this we can find the range nr  nr =y−pos+1  =y−pos+1 Now, we know that the sequence {Ax, … , Ay-1, Ay} will look like {Ax+nr, Ax+nr+1, … , Ax, Ax+1, … , Ax+nr-1} after the revolve operation. All that is left is to do the split and merge as required. Assuming the initial tree is denoted by root. We have, split(root, l, r, y) split(l, l1, r1, x-1) split(r1, l2, r2, nr-1) // nr denotes number of elements from the front that need to be shifted to the rear and so (nr-1) denotes the index merge(r1, r2, l2) // r2 becomes left and l2 becomes right to make the revolve operation. merge(l, l1, r1) merge(root, l, r) Hope it helps! Good Luck! 143 Views · View Upvotes