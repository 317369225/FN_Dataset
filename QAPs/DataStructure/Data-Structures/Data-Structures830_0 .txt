How do I solve this problem on binary search?Practice Problem on Binary Search Is there any solution using binary search possible ? Please help me by explaining the idea behind solution instead of the code only.ll A[100001]; int main() { //ifstream cin("in.txt"); ll n,k,idx; TC() { scanf("%lld %lld %lld",&n,&k,&idx); loop(i,k) scanf("%lld",&A[i]); sort(A,A+k); ll high=n+1,low=1,mid=-1,ans; ll pos_of_mid,no_of_small_elements_then_mid; if((n-k)<idx) ans=-1; else if(A[0]>idx) ans=idx; else while(high>=low) { mid=(high+low)/2; no_of_small_elements_then_mid=lower_bound(A,A+k,mid)-A; if(A[no_of_small_elements_then_mid]==mid)// codition if mid is found on excluded array { int tp=no_of_small_elements_then_mid; while(A[tp]==(mid) ) { tp++; mid++; } no_of_small_elements_then_mid=tp; } pos_of_mid=mid - no_of_small_elements_then_mid;// find what is the //pos of mid in actual array if(pos_of_mid==idx) break;// pos matches given index go out of loop else if(pos_of_mid<idx) low=mid+1; else high=mid-1; } if(mid!=-1) ans=mid; printf("%lld\n",ans); } } 339 Views  Answer requested by Aditya Pratap Singh