How do I explain the average case analysis of quick sort algorithm?Quick sort is a “divide and conquer” sort that works by creating two sub-lists out of one list and recursively sorting the sub-lists. This makes the average running time proportional to N log N where N is the number of elements in the list. In a worst case scenario where the pivot is either the minimum or maximum element in the list each time, the sort becomes an N^2 sort but runs very slowly because each individual element is being sorted recursively. So proper selection of the pivot is vital. Provided that the element about which the list is divided (the pivot) is chosen randomly, one can expect a 3:1 split of the list (ie one sublist contains 3 times as many elements as the other). This makes the running time a little longer than a pure base 2 logarithm (the base is 1.333) but still logarithmic. 45 Views · Answer requested by 1 person