Is there any data modeling pattern for versioning changes on data (not schema) of 50GB database with 300 tables?We do schema versions simply: we have a version table for “sub-schemas” in our database, and we make sure we roll schema changes through our world synchronously so we don’t have to worry about many versions of the schema. Down that path lies madness. When we do a schema upgrade, we execute the upgrade and change the schema version number after the upgrade, and then change the app builds. If possible, we do it with a rolling upgrade without downtime, although some upgrades are complex enough to require (hopefully brief) downtime. Our apps know what version of the schema they support, and if the schema number in the version table doesn’t match the one they support, they halt immediately. This is preferable to running for “awhile” and crashing, possibly leaving the database corrupt. We don’t attempt to version data in any general fashion, and we don’t attempt to support any notion of “down-revving” the schema. 208 Views · View Upvotes · Answer requested by Samur Araújo