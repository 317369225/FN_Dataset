Is it possible for someone to master at least 20 programming languages, 100 frameworks, and all data structures and algorithms in their career?20 programming languages, sure. If you take two years to master each that is only 40 years. 100 frameworks, easy. Many frameworks are small, and virtually all strive to be easily learned. All algorithms? All data structures? Not to much. New ones are being invented all the time. Technically when you make a minor change to and algorithm for a slightly different set of trade offs (say less memory faster running time, or faster running time but a less accurate answer) you have made another algorithm, and if no one else has made that set of trade offs in that way you have added to the list of “all algorithms” this list may be growing more slowly then one person can learn them, but they are not all public. So I'm sure I made a new algorithm or three last week, but unless someone else put them in a book you won't run across them. Ditto for data structures, technically a B+ tree with floating point values is distinct from on with strings, and one with strong keys and a float payload is yet another. If you use that broad definition it is worse then learning all algorithms. 333 Views