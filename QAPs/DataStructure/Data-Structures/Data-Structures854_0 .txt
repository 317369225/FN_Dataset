What are some intermediate level problems where understanding correctness of algorithms is a must (and why)?This may sound stupid. But I see some guys solve easy algorithmic problems without understanding required algo well. They know what the algo is used for, have a working code and implement it. I wanna see how solutions of these coders fail to get AC. I am a novice, that’s why I can’t give it a try.I don’t know why Michael’s answer was downvoted, but apart from the scenario of “just a one person appears who remembers one task from one competition to suggest”, I think the easiest option is indeed to look on the automatic judges if they have some statistics. For example if you see in statistics for some problem that many people attempting it got TLE, significantly higher percentage than on usual, it quite likely mean that the easy-to-come-up solution has a worse complexity than it seems by intuition, so people who don’t bother to analyse the algorithm learn it had too bad complexity only after they’ve coded it up and got TLE. Unfortunately harder to do the same with ANS, as if you see many ANSs you don’t know if people had wrong algorithm or missed some edge cases or just had bugs. In such scenario probably judges with associated community are your best bet so that you can see some forum about the task - if people are correcting other people who thought they had the solution, then it might be the kind of an excercise where the obvious solution turns out incorrect if you start analysing it (also, if you can hope that someone will just remember a problem in mind to staright away fit your needs, your only chance is to ask on such forums, on Quora you have very low probability). 353 Views