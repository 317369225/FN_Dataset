How can I store and process large 2d array?I have to store and process the relations (correlations) between a large number of objects. And I'm looking for a right concept for this problem. The array can be dynamically resized by adding new objects. I'm going to present the relation values as a float number (like in the image).A linked list would probably be your best bet given that you want to grow your matrix dynamically and especially if you expect to insert cells in random positions. A suitable structure (in C) would be as follows: typedef struct _matrix2x2 { double data; int row; int column; struct _matrix2x2 *right; struct _matrix2x2 *down; } Matrix2x2; The elements proper would start at (1,1), (1,2) etc. A row number of 0 would mean that the node is a column header while a column number of 0 would define a row header. The root node would have a row and column number of 0. Insertion of a node would require you to traverse the row headers for the right row and adjusting the right links appropriately. You would then do the same thing for the column headers. Note that I am assuming that your Linux system can handle then necessary memory allocation requests including disk caches. If you have to handle disk storage manually then this becomes a little more system dependent. Basically, if you are storing the entire matrix on disk the the right and down pointers would become disk block or record numbers. 210 Views  View Upvotes  Answer requested by Tomasz Antas