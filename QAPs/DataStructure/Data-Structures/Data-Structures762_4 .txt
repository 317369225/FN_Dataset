What is the difference between keys and values in binary search trees in Java?Binary search trees are not specific to Java. It’s a data structure that you can build in Java, and you may choose for nodes to have values or not. The classical binary search tree just has nodes each with one value, and the nodes are sorted by that value. Want to find a node with a greater value? Go right. Otherwise go left. If you want to separate the concept of sorting from other data, you can give each node a key and value. Let’s say you’re a terrorist and wanted to store all the 100 people in a room in a binary search tree, and you carve into each of their foreheads a unique number, 1 to 100. I guess he’s number 11. You ultimately want to be able to look at their numbers and be able to search for their name in log(n) time, which the binary search tree allows you to do. Have the tree sort the nodes by the forehead number. When you find the node, query the value, the name. Then proudly introduce yourself to your hostage. Get to know them. Stockholm syndrome can work wonders! But the point is, if you decide to dehumanize your hostages, having them identify with just a number, then each node just has one piece of “data”, where the value acts as the key as well. 385 Views