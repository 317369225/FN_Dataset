Which data structure is best in the given scenario in which memory is limited but insert and delete method is also easy?This looks like homework rather than a question legitimately about security, so I'm willing to bet the answer they're looking for is a hash set. Since limited memory is a given, you don't want to have to store entire retinal images to match against. A checksum approach in which you compare hashes would be clearly better. And since you're hashing stuff and have to quickly check against a collection of approved hashes, this problem has "hash set" written all over it. The size of the hashes depends on the number of expected users. 16-bit hashes will take you up to about 64,000 (2^16), or, practically speaking, significantly less than that, since you want to leave holes for unauthorized users to minimize false positives. Storing 32,000 user hashes that are 16 bits each requires only 500 KB. If the client wants more users than that, they can afford to pay for a more advanced system for which memory isn't as constrained. Depending on the tolerance for false positives/negatives, though, you could even go as small as a bloom filter. Bloom filters are tiny, but risk false positives because collisions are a cost of doing business with bloom filters, and removing users could cause false negatives by removing a bit that several other authorized users collided on. Ultimately, for the unscrupulous businessman, you might get away with "return true" as your authorization function, because what attacker in their right mind would just walk up to a retinal scanner and expect it to work for them? 394 Views  View Upvotes  Answer requested by 1 person