Why is a lookup in a hash data structure so fast (O(1))?The basic idea is the “pigeon hole principle” which says that if you have m pigeons and n holes to put them in that if m<=n then each pigeon gets it’s own hole if, and only if, there is a one to one mapping between pigeons and holes. What the exact function is that does this doesn’t really matter and in the literature is usually called the hash function [H(x)] as long as for a given x you will get the same mapping each time. The problem comes that it is not possible to have a completely bijective H(x) when the input set is infinite and the output set is finite thus there will always be some rate of collisions (called α  α normally). Thus for all real life cases m>=n and thus alpha is α>1  α>1 which means that the actual run-time complexity of H(x) for all x is O(1+α)  O(1+α) . It is generally agreed that α  α is almost always greater then .6666… 301 Views · View Upvotes