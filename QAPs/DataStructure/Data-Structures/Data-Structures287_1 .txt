Is there an algorithm better than o(n) for the following problem, given a hashset contains integers and a number, find closest num to the given num?n is the number of elements in the hashsetIs there an algorithm better than o(n) for the following problem, given a hashset contains integers and a number, find closest num to the given num? How can there be? A hashset is great for asking the question “Does this value exist?” It doesn’t provide any kind of support for “Find something kind of close to this value.” That means that if you have to answer this question and aren’t lucky enough that your value is actually in the hashset, you absolutely have to do something with all the values. That means that you’re talking about no better than O(n). Now, if you had a bunch (m) of values you’re looking for, you might be able to do better than O(m*n). A hash table isn’t a good structure to answer this question, but you could answer this question in O(log n) time in a sorted array, for instance. But putting all the data in the sorted array means you would have to sort the items, which is worse than an O(n) operation. If m is large enough, it still may be worth doing. 212 Views · View Upvotes