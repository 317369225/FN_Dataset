How do you avoid a hash table getting sparsely populated?
A naive answer to this question is to use linear probing wherein you hash to an array index and insert in the next available slot. However, this will give you terrible lookup times. A more reasonable question would be how to avoid a hash table being sparsely populated and guarantee fixed lookup times. Often this question is asked as "how does one achieve high load factor in hash tables with fixed or guaranteed lookup times") This is primarily done by using multiple hash functions. If there is a hash collision, the key is hashed against a different function until an empty slot is found (ca... (more)