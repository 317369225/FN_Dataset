What should every programmer know about hash tables and hash functions?
In this answer I’ll drill a bit into how hash tables become O(n) instead of O(1). A basic hash table is: A hashing function that maps a large space onto a small space An array the size of the small space — call that size M — with O(1) lookup behavior because we use the output of the hash as an array index M container or list array elements (“buckets”) each with O(K) lookup behavior, where K is the number of items in bucket. Hash table lookup is O(1) if and only if O(K) == O(1). This happens when both of the following are true: the hash is perfect, evenly distributing data across the buckets; and... (more)