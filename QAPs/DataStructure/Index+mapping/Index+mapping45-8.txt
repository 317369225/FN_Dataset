Why do Hash Tables need to store the Key of a record?Can't we just insert the Value (without the Key), after we calculate the hash for the table (using the Key)? I guess what I'm trying to get at is, what is the use of the Key after calculating the hash? We can just retrieve the record's Value if the requesting application knows the Key. Am I getting this wrong? Thanks.
This is actually a very good question. It took me some time to even understand it. My take is as follows: You are right. If the app stores the required keys then I can't think of a reason why the table needs to store the keys. However this is done mostly for reasons of convenience. The list of keys being available at any given time allows programmers to Iterate or display content or sort or manipulate it in any way needed. If it wasn't available, each program would have to manage the list of keys. Moreover, there is no advantage as it will be necessary for the program to store this list to retrieve the values anyway. Storing the keys in the Hashtable reduces programmer burden. Would love to hear from other Quorans on this topic. Thanks for the question. Edit: Other answers on this thread got me thinking about this again... In case your key causes a collision, then the logic to narrow down to the correct element will need some twiddling on the programmers part. That makes it important to store the key with the table so that colliding elements can be identified by the key. Updated 18 Oct 2014 â€¢ View Upvotes