What is the difference between primary key and unique key in MySQL?
Primary key is key of the primary index. And usually (at least w/InnoDB) primary index is ~ a sorted dictionary mapping this key to values of all other columns. I.e. in fact, all table data is stored in primary index in such a way that DB can extract any row (or a range of rows) there with a single index seek (i.e. DB engine needs t = O(log(totalRowCount)) + O(returnedRowCount) to perform this operation). Unique key is key of some secondary index having unique constraint (i.e. literally, a requirement to check key uniqueness on any update). And any secondary index maps its secondary keys to corresp. primary key values. Thus if you extract a row (or a range of rows) based on unique index key, DB can't do this by a single index lookup, if you need any columns that aren't a part of unique or primary key. To perform such an operation, it will join the primary index - this implies ~ 2x IO for a single key lookup, and may be 100x IO for key range lookups, if the table is really large. Btw, this is related to any lookups based on secondary index key: unique indexes are absolutely the same as non-unique, the only difference is unique key constraint. You can find more comprehensive description of how it works in my answer here: How does a relational DBMS internally store its data? 