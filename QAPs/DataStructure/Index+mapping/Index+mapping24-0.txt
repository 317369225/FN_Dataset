In Elasticsearch, how do I get a list of the top 10 most frequently occurring values of a field?
There are a bunch of ways to interpret this question, depending on the nature of the data involved. What sort of fields, and what sort of values? The most straightforward interpretation is for a single- or multi-valued scalar field, where you'd like to count the frequency of values across all documents in an index. This, and many other interpretations of the question, is a trivial application of Elasticsearch Aggregations, specifically a Terms Aggregation. A more sophisticated take on this question would be to make a list of the most frequently occuring values within a single field of a single document. This kind of frequency analysis is important for examining text, where the frequency of a term can indicate its themetic or rhetorical significance. Toward that end, let's see what Elasticsearch can tell us about these lines from Edgar Allen Poe.     HEAR the sledges with the bells,           Silver bells! What a world of merriment their melody foretells!     How they tinkle, tinkle, tinkle,         In the icy air of night!     While the stars, that oversprinkle     All the heavens, seem to twinkle         With a crystalline delight;       Keeping time, time, time,       In a sort of Runic rhyme, To the tintinnabulation that so musically wells     From the bells, bells, bells, bells,           Bells, bells, bells—   From the jingling and the tinkling of the bells. Reading that definitely gives the feeling that repetition is an important attribute of the overall text. However, if we want to rank the terms by their frequency in a single field, using a naive Terms Aggregation isn't going to cut it, because aggregations count the number of documents in the index in which a term occurs.   "aggregations" : {     "top-terms-aggregation" : {       "buckets" : [ {         "key" : "a",         "doc_count" : 1       }, {         "key" : "air",         "doc_count" : 1       }, {         "key" : "all",         "doc_count" : 1       }, {         "key" : "and",         "doc_count" : 1       }, {         "key" : "bells",         "doc_count" : 1       }, ... Fortunately, we can obtain much more detailed information using document Term Vectors. Using term vectors, we can have Lucene calculate and store much more detailed information about each term's relationship with the documents and fields in which they occur. That includes the positions within a field as well as the frequency with which a term appears in a given field of a specific document. As of its 1.0 release, Elasticsearch provides access to the term vectors information via the _termvectors endpoint on a document. Making a request to that endpoint, we can ask for the terms' statistics. "bells" : {   "doc_freq" : 1,   "ttf" : 10,   "term_freq" : 10,   "tokens" : [ ... ] In this case, the term_freq field is what we're looking for, and now we know that the term "bells" occurred 10 times in the indexed stanza. This is not a particularly cheap bit of analysis. Storing detailed term vectors information takes extra time and storage when indexing your documents, and is not enabled as a default behavior. It must be explicitly turned on in the index mapping at index creation time. Additionally, the _termvectors endpoint currently returns statistics for all of the terms in the document. Analysis is left to client side post-processing of the query, and care should also be taken to be aware of potentially slow performance from what may be a costly request. For a script that I used to flesh out my answer, see here: nz/elasticsearch-term-frequency.sh 