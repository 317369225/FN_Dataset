Why do Hash Tables need to store the Key of a record?Can't we just insert the Value (without the Key), after we calculate the hash for the table (using the Key)? I guess what I'm trying to get at is, what is the use of the Key after calculating the hash? We can just retrieve the record's Value if the requesting application knows the Key. Am I getting this wrong? Thanks.
Because most hashing functions aren't perfect. You're most likely to end up with a hash function that maps several of your keys to the same location in the data array, given a large enough data set. This is called collision. This is resolved by storing multiple HashTable items in a linked list, which is hashed to the same location in your primary array. Now, while the lookup is performed, more than a single key is likely to hash to the same location in your data array, and you have multiple value elements to choose from, to return to the client. This is where your key, comes in. If you store your keys with the values, then based on what key was used to perform the hash while servicing the GET, you'd know which element to return. 