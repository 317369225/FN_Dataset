I just bought CLRS. What's the best way to obtain the knowledge this book offers?
I think using Coursera's "Design and analysis of algorithms Part 1 & 2 " by Tim Roughgarden is going to be fairly effective. Basically this CLRS book is 'large'. Reading it end to end at the first go does not make much sense, specifically if you don't implement anything. Having another book which heavily focuses on algorithm implementation is good too, such as Robert Sedgewick's algorithms in Java or C++. I think another good idea is to implement the algorithms with python in most cases at the beginning too because that way you can focus more on the intuition instead of the language details. But I'm not sure how many people will agree with me here. Here's the first one of the algorithm course, Coursera, and here's the second part, Coursera. You can preview the lectures even if you don't want to follow the course. After that training in USACO or some other competitive programming platform for getting better in ''solving problems with the algorithms'' is probably going to be the most effective way to use time. Reading algorithm books end to end without solving problems does not make much sense. The retention is going to be extremely low. The algorithms need to be 'internalized'. As far as I understood some people like to learn algorithm on the fly as the problem requires, and some people really need to understand the theory, proof of correctness, complexities before they even start solving problems. I think it depends on our personality which style we would like to follow. Personally I'm following the same game plan and I think it's possible to move pretty fast to a proficient algorithmic problem solver if we acknowledge that solving problems is important for retention and the intermediate stage should not take more than 6-10 months. Obviously I'm pretty sure that the advanced stage will take more than that (at least 18 months at minimum and above).And if we want to do better in contests that's going to be another game because coding under stress is likely to be different from just understanding it. I think I'd be finishing these two courses and keep doing USACO for this month and the next one. After that go for more platform specific problem solving when I can safely acknowledge that I know the required vocabulary and have the 'preliminary' idea of what's happening. I also think it's better to just accept that we will probably have to do it several times in the beginning and even in our professional career considering It's important to be really good at the basics. Besides one interesting thing about algorithmic problems is that it 'drains' people very fast aka drains energy really fast because the only way to get the intuition is to make a very good mental model of the problem and the solution and why each step is being taken in the way that is. I was really slow at the beginning but now I seem to be faster than before at least. You are not 'getting bored'. Your brain is distracting you as it needs time to recharge after focusing really hard. I think raising focus should be done incrementally. Updated 49w ago â€¢ View Upvotes