What are the standard puzzles asked in programming interviews?
I really think that the term "standard puzzle" is misleading. In my opinion if you've been led to believe that programming interviews are all puzzles then you've been going to the wrong kind of interviews. When i'm interviewing candidates I want to know that they'll be good contributors to our development team, that they have the technical experience to solve the kind of problems they could encounter every day (like designing a high volume message processing and storage system from scratch) and not how good they are at solving mathematical stuff most programmers won't encounter day-to-day unless they work in financial modelling. At a push i'll discuss running time, and O(x) notation, if the candidate has academic experience I may push into the realms created by some of these questions but only if i'm putting them into a role where they actually need it, otherwise i'm wasting time by making potentially good candidates feel bad when asked purposefully confusing brainteasers and by depriving myself of what could be quality interview time. Increasingly bigger companies are realising the same things: Google Skips 'Waste of Time' Brainteaser Interview QuestionsÂ  Here's Why Google Ditched Brainteasers For Behavioral Interview Questions 