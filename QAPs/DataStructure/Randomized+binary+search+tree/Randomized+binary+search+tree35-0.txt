How did you approach and learn data structures and algorithms and how did you become good at implementation?
I took a course in it. CPSC 223: Data Structures and Programming Techniques. The course was taught by Professor James Aspnes, the Director of Undergraduate Studies of the Computer Science Department at Yale University. He has some fantastic notes that he has created and posted online, as well as some interesting homework assignments that make you try and apply various data structures/techniques to solve different problems. Some topics covered include the following: Asymptotic Notation Stacks Queues Deques Linked Lists Dynamic Programming/Memoization Hash Tables AVL Trees Splay Trees Binary Search Trees Heaps Augmented Trees Graphs/Depth-First Search/Breadth-First Search Randomized Algorithms/Data Structures (Skip Lists) Various Sorting Algorithms (Quick Sort, Radix Sort, Merge Sort, Heap Sort, etc). Recursion The notes also have fantastic coverage of the C programming language. This is how I learned to program in C. I think C is a great language to learn Data Structure/Algorithms, because you have to be very careful with memory management. It is also in general a language that every computer scientist should know. Make sure to actually do the problem sets! Implementing data structures is how you get betteSubmitr at understanding their uses. It is important to be able to pick the appropriate data structures for a given problem and make your own by combining elements of other data structures. HTML View: Notes on Data Structures and Programming Techniques (CPSC 223, Spring 2015) PDF View: http://www.cs.yale.edu/homes/asp... 