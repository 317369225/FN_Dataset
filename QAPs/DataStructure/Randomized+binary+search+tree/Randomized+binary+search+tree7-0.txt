What is the best approach to become better at C++?
One of C++'s big strengths that, like the rest of them, comes at a cost is that it's a truly open language, not controlled by any organization ever since AT&T abandoned it in the 1980s. Until 2012, there was not a single official C++ website. In 2012, the first and so far the only actual C++ web page was created, http://isocpp.org/ (I'm not counting web access to WG21's papers as it's not much of a website and certainly not something for a beginner to make sense of) As a consequence, if you really want to learn C++, I advise against any and all online tutorials and against most books. Without any kind of quality control, many professional book writers published many awful C++ textbooks that may be easy to read and sell well, but teach lies. Stick with the community-verified book list available at StackOverflow: http://stackoverflow.com/a/38828... Write code. C++ is a deeply practical language, it was invented and continues to exist to solve practical engineering problems. The more practice you have the more of it will make sense. The first time I've read Effective C++ in 1998 I didn't understand half of it. After a few years of professional experience it was suddenly trivial and oversimplified (then the same happened to Modern C++ Design). Emulate software engineering work: not just write code, but design, debug, profile, tune, write unit tests, run static analysis tools, set up source control and automatic builds. When you must look something up online, trust community-verified sources (http://stackoverflow.com , http://cppreference.com), but still keep in mind that they are sometimes wrong. If http://isocpp.org disagrees with what I said, trust http://isocpp.org . 