To what extent does functional programming require different data structures and algorithms?
By and large persistent data structures have logarithmic execution while changing self-assertive positions. This could possibly be an issue, subsequent to the consistent in an O(1) calculation might be high, and the logarithmic lull may be "assimilated" into a slower general calculation. All the more vitally, persistent data structures make thinking about your system less demanding, and that ought to dependably be your default method of operation. You ought to support persistent data structures at whatever point conceivable, and just utilize a changeable data structure once you've profiled and confirmed that the persistent data structure is an execution bottleneck. Whatever else is untimely improvement. 