What does the new introductory CS curriculum at CMU look like?
Let me first say that I have not taken any of the new CS course curriculum, so most of this is based on course websites and TA experience. When a freshman comes in, if he or she has programming experience, his or her first CS class will be 15-122. Students with no programming experience must take 15-112. There also two other classes which are part of the curriculum, 15-210 and 15-150, which I will also touch on. 15-112 15-112 teaches a large subset of python [1]. The first half of the course focuses on teaching basic programming in python: program structure (loops, conditionals, functions) basic data structures (arrays, sequences, dictionaries) debugging (exceptions, asserts, code tracing) problem solving file i/o There are also two weeks on more advance topics. This semester, they are spending a week on graphics and a week on "advanced iteration" which covers list comprehensions, generators, generator expressions, and combinatorial iterators. The second half of the course is about various programming paradigms. They spend a week each on the following flavors of programming: event-based functional web object-oriented The last two weeks are all short presentations about more advanced topics, most of which are given by students in the class. 15-122 The majority of 15-122 is taught in an in-house language called C0. C0 is a subset of C (with contracts, see below) which is supposed to serve as a soft introduction to the C-language. The later part of the course is taught in C, and the last two programming assignments are in C. The nice thing about C0 is that it has an explicit way to show preconditions, postconditions, and loop invariants (collectively called contracts) built into the language. So, if a student has good contracts, he or she can prove the correctness of their code. This helps in debugging because if their contracts are correct, but their implementation is wrong, then the program will exit as soon as a contract is not met. The course also serves as an introduction to data structures and they study the following: binary search and AVL trees tries graphs stacks and queues heaps and priority queues Other topics covered include memory management, runtime analysis, and dynamic programming. 15-150 This course is an introduction to functional programming, taught in SML. Students typically take this their second semester at CMU. It seems to be a renumbering of 15-212, which was part of the old CS curriculum. EDIT: Thanks to Michael Arntzenius for letting me know that 15-150 isn't a renumbering of 15-212. Although they cover similar material, 15-150 focuses more time on big-O analysis and less time on programming language theory. 15-210 This course covers algorithms and data structures more rigorously and focuses on parallel algorithms and analysis. It is taught in SML, but seems to cover the same material of the old course 15-211 (which was previously taught in java). [1] https://www.cs.cmu.edu/afs/cs/ac... Updated 191w ago • View Upvotes • Asked to answer by Tudor Achim