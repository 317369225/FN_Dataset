What are the most important fundamental concepts in Computer Science?
The basics: Discrete math -- you need to master all the concepts of sets, boolean logic, combinatorics, number theory, probability, algebra, etc. to have a strong foundation for computer science.  Continuous math (calculus, etc.) is not very important I think :) Next that I can think of: The concept of states.  This makes the understanding of states, state machine, state transitions, the whole concepts of stateful vs. stateless design, caching, cache coherence, persistence, soft states, etc. possible.  A lot of my non-programmer friends don't understand this concept. The concept of instruction and the sequentiality of the processing of instructions.  Some junior programmers I knew initially didn't understand that instructions are executed sequentially.  (Processors don't really have to be sequential, but it's what the vast majority of processors are mostly supporting right now). Complexity of a piece of program (both runtime and space complexity).  Need to deeply understand what O(1), O(N), O(N log N), etc. mean before understanding why certain algorithms / data structures are fundamentally (not just artificially / empirically) more performant than the others. Concepts around data.  Input and output and intermediate forms, mutable vs. immutable, serialized vs. object form, object-oriented programming, canonical vs. derivative, representations (normalized vs. denormalized), eager vs. lazy loading, database concepts like ACID and BASE, encoding and decoding, encryption and decryption, compression and decompression, information security. Concepts around memory: virtual memory space, stack, heap, pointers, referents vs. references, allocation and deallocation, garbage collection, working set, paging to disk, etc. Concepts around processes: the running instance of code.  Concepts: compilation, thread, process, statically loaded vs. dynamically loaded libraries, runtime vs. compile time errors, how the OS schedules processes and threads, etc. The higher level concepts after these probably belong to the domain of software engineering, systems, or some specializations of theoretical computer science. Updated 158w ago • View Upvotes