What are the most important fundamental concepts in Computer Science?
As far as general programming know-how, computer engineering encompasses the skills that are useful for producing good quality, maintanable, robust software (often with a team of other engineers). In addition to learning a couple languages--and, more importantly, learning how to learn other programming languages quickly--knowing how to define and document a specification, use version control and create a regression test would make you a more effective software engineer. These skills are about the day-to-day work of creating good software, which is much more than writing code. As far as computer science, the study of Turing machines falls under computational theory, which could be argued is at the core of computer science. Other related topics in computational theory include automata (essentially a subset of Turing machines), complexity, formal languages and computability. Computational theory and, in turn, computer science, concerns itself not with the practical aspects of making software but, rather, the underlying ideas behind what it means to compute in the first place. Software engineers take for granted things like control-flow syntax, compilers and the stack, but a lot of problem solving and mathematical justification (computer science) went into creating those tools. 