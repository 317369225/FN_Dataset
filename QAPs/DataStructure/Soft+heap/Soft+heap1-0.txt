What is the most efficient algorithm to find the kth smallest element in an array having n unordered elements?
What you're looking for is called the [math]k[/math]th order statistic. There are a few algorithms for solving this in linear time (both deterministically and non-deterministically).  Those algorithms are: Quickselect Median-of-medians (also known as BFPRT) Introselect Unnamed algorithm using soft heaps Quickselect Quickselect is a randomized algorithm that solves the problem in [math]O(n)[/math] expected time.  Quickselect is an adaptation of the quicksort algorithm. More info: http://en.wikipedia.org/wiki/Qui... Median-of-medians (BFPRT) The median-of-medians algorithm solves the problem deterministically in [math]\Theta(n)[/math] time.  The constant value for the median-of-medians algorithm is pretty high, however. More info: http://en.wikipedia.org/wiki/Med... Introselect The introselect algorithm starts off by using quickselect, but as soon as it deviates from O(n) operations, it defaults to using the median-of-medians algorithm, ensuring a worst-case run-time of [math]\Theta(n)[/math]. More info: http://en.wikipedia.org/wiki/Int... Unnamed algorithm using soft heaps This selection algorithm involves inserting and deleting elements from a soft heap and runs deterministically in [math]\Theta(n)[/math] time. More info: http://en.wikipedia.org/wiki/Sof... ----------------------------------------- For reference: http://en.wikipedia.org/wiki/Sel... kth order statistics Updated 103w ago • View Upvotes • Asked to answer by Anonymous