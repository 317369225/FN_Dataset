What all things do I need to know about Garbage collector in Java for a tech interview?
For an application developer position (and not for a performance specialist position) the following should suffice : 1. Whats the structure of java heap ? What are young generation/old generation/perm generation ? How does an object get moved from eden space to survivor space 1/2 to old generation ? 2. What's the difference between major and minor GC ? 3. What are the differences between serial, parallel and concurrent GC ? 4. What is G1 GC ? 5. How do you configure your applciation to completely ignore System.gc() calls 6. Looking at GC logs how do you know whether its minor/major GC ? implicit GC/ result of System.gc() invocation ? 7. How do you configure heap size/perm gen size ? 8. What's the difference between ParNew and DefNew Young Generation Garbage collector? 9. How do you increase java heap space size for running maven/ant commands ? 10. What is java heap dump ? What are the uses of "jmap" and "jhat" commands ? 11. if Object A has reference of object B and object B has reference of Object A and they don't have any other live reference, will they be garbage collected ? 12. What if finalize() method of an object throws Exception ? Will that object be garbage collected ? 13. What are the differences between strong/soft/weak/phantom references in java ? 