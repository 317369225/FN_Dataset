What is a graph database? Why would someone choose a graph database over a relational database?I would also like to know the particular areas of application where one can choose a graph database over a relational database.
Greg Kemnitz once again gave a great history lesson.  I would like to add to the why. Neo4J has fun propaganda that says graphs are everywhere.  From a philosophical point of view I agree with them.  From a practical point of view I would not enjoy implementing a graph database everywhere. First there are some technical limitations usually around scale.  Second there are other models that are just better tools for the job.  However, there are great applications for graphs models that are challenging for a relational data base.  I offer my technical definition of the problem space for when to use a graph data. When it makes sense to talk about your data in navigational modeling terms and most or all of the following is true: There are N number of objects that can be a root node of a tree Root nodes have N number of child nodes Child nodes go for N number of depth Trees have N number of relationships to other trees To think about this in business domains I like graph databases for these kinds of problems: Marketing Segmentation applications Customer Relations Management applications User Device Reputation Authorizations applications Billing of Material advance data analytics It is also fun to think about: Movie Tag information advance data analytics (aka Kevin Bacon Game) 