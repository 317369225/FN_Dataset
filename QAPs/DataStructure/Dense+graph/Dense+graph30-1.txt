Given an undirected graph and two sets of nodes, which is the best algorithm to check that every item of the first set is adjacent to every item in the second set?The graph is implemented in C using adjacency lists. The only solution that I found is the naive one and performs in O(n*m) : for every item on the set1 check that is in the adjacency list of the second one.
That every/every necessity means that you'll ultimately have to check every node in either of the sets to see if they are adjacent to every one in the other one to get a positive answer. However, there are ways to improve the time taken to get a negative. Order every node in each set by number of adjacent nodes. If any given node has less adjacencies than the other set has nodes, then it is impossible for the condition to be true. After that, there are various heuristics that can help, but those greatly depend on the relative sizes of the sets and how dense/sparse the adjacency matrix would be. 