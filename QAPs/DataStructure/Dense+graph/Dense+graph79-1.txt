Is there a simple explanation of the Louvain Method of community detection?
Louvain method is a quite simple algorithm and still one of the best in its area (fast and effective). You take a node and try to aggregate it to one of its neighbours. You choose the neighbour that maximizes a modularity function. This function tells you how connected is the community you are trying to attach your node to going to be if you actually attach your node to it (this function is easy to compute and this makes Louvain very fast!). Once you iterate through all the nodes, you will have merged few nodes together and formed some communities. This becomes the new input for the algorithm that will treat each community as a node and try to merge them together to create bigger communities. The algorithm stops when it's not possible to improve modularity any more.Â  Louvain typically executes in nlogn, although this is an experimental result and it's not possible to prove it. 