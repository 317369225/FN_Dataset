What are examples of one CPU architecture clearly beating another, despite both chips' implementations having similar semiconductor process sizes and die areas?
For PCs, x86 pretty much dominated - Apple used 68K and PowerPC for while but then even they switched to x86 for Macs.  For these x86 is clearly >90%. In mobile, ARM has largely "beaten" Intel's x86 and Atom architectures.  The dominant mobile hardware vendors, Apple and Samsung along with other Android vendors, all use ARM and they account together for >90% of the market thus ARM is >90%. The key is to understand: Different applications require different trade-offs of features and performance, which are often are best fit by different solutions.   Every solution has trade-offs - you can't have it all in any design. No vendor or engineer is smart enough to make a "one size fits all" architecture that always optimal for every case or situation.  Trying is a great way to fail.   As Dirty Harry said: "A man's got to know his limits!"and that applies to engineering as well.  Ultimately the above are due to how the laws of physics constrain what is possible.  There is no magic or free lunches in engineering, just choices of options and trade-offs.  That some people ascribe magic is more of a character flaw of those who imagine magic is involved. If you are trying to find some kind of "magical formula" for success, you are doing it wrong.  Numerology (which is effectively what you are doing) is not effective at this. 