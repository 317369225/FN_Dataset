I'm a newbie at algorithms, but I'm capable of writing codes in C++ & Java. Do I have a chance to win the ACM ICPC 2016 title? Do I have the time to study and practice the knowledge needed?Do anyone here (or anyway you know) have the courage to (or even can)Â  put a feasible plan for achieving target in next 16 months?
I agree with the other answers. I would add that, win or lose, it is worth doing just for the experience and what you will learn by practicing for it. 16 months is enough practice time to do reasonably well, if you are very diligent in your study and practice! I suggest you develop a curriculum for yourself and make sure you have time most evenings to practice and study, with more time on weekends. Frequency of practice is more important than duration - that is true for music and motor skills and seems to be true of programming, too. Take advantage of the extra time you have on weekends. Don't practice when you are too tired to think clearly. but some long coding sessions should be done to accustom yourself to coding under such conditions. Competitions are long and exhausting! Here's what I suggest: Study algorithms. You will need to study a lot of material so don't rely on your school curriculum to prepare you for the ICPC. Study on your own (this will help with school, too). Study all the classic algorithms taught in any CS curriculum (sorting, graph search, etc) and the various kinds of algorithms (greedy, dynamic programming, probabilistic, etc.) Cormen, aka CLRS, is a standard and very comprehensive (but kinda dense) text. Study data structures. Not as much to do here because a handful of structures suffice for most use cases. Learn their performance tradeoffs and how they are used in algorithms. A poor choice of data structure can ruin an algorithm. Write tons of code. Tons! You need frequent practice. The more you practice, the better you will get at thinking algorithmically, and the better you will recognize what type of problem a given problem is and what would be a good approach for it. Obviously, for contest prep, you should practice the most on problems similar to actual contest problems, such as at https://uva.onlinejudge.org/, where you can submit code for judging. You can also view archived ICPC problems on the ICPC website, including World Championship problems, and the judge's solutions. For general skill acquisition and domain understanding, you should do exercises on the various topics you study. Typical textbook exercises suffice. There are also online programming contests such as at TopCoder, Codeforces, and HackerRank, all of which have archived practice problems as well. I think TopCoder allows you to simulate a competition environment, which is obviously useful. Do some actual competitions at some point just to get accustomed to it. You don't want the ICPC to be your first competition! With frequent, structured, targeted study and practice, you will vastly improve your skills in 16 months and can do decently well in the ICPC. 