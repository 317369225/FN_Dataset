In what situations would someone use Dijkstra without a heap over Dijkstra with a heap?My guess was that the heap version would consistently outperform, but this is not so. How can one make the distinction in contests? EDIT: I see the time complexity for the regular version is O(V^2). However, the time complexity for the heap version is O((V + E) log V). So for a sufficiently large number of edges, would it be better to use the algorithm without a heap?
Concerning  your second question: If you use a Fibonacci heap you have amortized  time O(V log V + E) which is as good as or better than O(V^2) even for a  large number of edges since E is O(V^2). You  also asked how to decide which implementation to choose in contests.  Here the question should not be which one is better but which one is  good enough for the specific requirements of the contest. I can't give  you a general answer but as a rule of thumb here is what I would do: if there are ~V^2 edges, I don't use a heap otherwise, if V>10000, I use a heapBut to be honest, I have little experience and you should not take this too serious. But maybe it starts a discussion from which we all can learn ;) 