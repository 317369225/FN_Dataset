What is the most efficient way to represent a graph with million nodes?
This depends whether the graph has any special properties. For example, if the graph is very dense ( E=\Omicron(V 2 )  ) then an Adjacency Matrix might be good as it allows fast retrieval of the data. However, as you seem to have concern over the potentially 10 12   number of entries (which cannot be improve unless there is other properties. If the graph is sparse, most of the entries will be 0, and hence a waste of space. In that case, an Adjacency List could be considered with the tradeback of slower access to data. Sometimes, you just want to have a list of edges (e.g. Kruskal's Algorithm for Minimum Spanning Tree). In that case, an edge list might be good for your applications. In summary, it depends whether your graph has special properties and what applications you are applying it towards. There isn't really a one-size-fit-all representation. 