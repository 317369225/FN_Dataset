What is a simple but detailed explanation of Textrank?I need to use it at a science fair, but only have understanding of math up to algebra 2. The research paper (Page on umich.edu) is too complex. I need a mathematical and reasonably detailed explanation. The one on Wikipedia is not enough. Is Build your own summary tool! the same tool as TextRank? It's not very accurate.
I hope that my following explanation is helpful, if there is more information I can explain, please let me know via comment or message and I will update the answer. Some Introduction: The "math" that goes into it is simple. A graph is a list of nodes (vertices) and thee connections (edges). TextRank uses the structure of the text and the known parts of speech for words to assign a score to words that are keywords for the text. I don't think it takes much if any math to understand the concepts of the paper, but the terminology may be somewhat dense the first time through. The algorithm gives more value to nodes with lots of connections, and gives more influence in steps to better connected nodes, so it reinforces itself and eventually finds its stable score. The structure d the text is represented in the way the graph is made. The TextRank Algorithm: First, the words are assigned parts of speech, so that only nouns and adjectives (or some other combination for different applications) are considered. Then a graph of words is created. The words are the nodes/vertices (denoted V in the paper [1]). Each word is connected to other words that are close to it in the text. In the graph, this is represented by the connections on the graph (denoted E in the paper for edges [2]). The algorithm is then run on the graph. Each node is given a weight of 1. Then the algorithm goes through the list of nodes and collects the influence of each of its inbound connections. The influence is usually just the value of the connected vertex (initially 1, but it varies) and then summed up to determine the new score for the node. Then these scores are normalized, the highest score becomes 1, and the rest are scaled from 0 to 1 based on that value. Each time through the algorithm gets closer to the actual "value" for each node, and it repeats until the values stop changing. In post-processing, the algorithm takes the top scored words that have been identified as important and outputs them as key/important words. They can also be combined if they are used together often. That explanation should be enough to implement the algorithm (you can do a similar thing where you break it up by words or phrases) without needing any more math from the paper. The Rest: The linked "build your own summary" project self-identifies as naive, which means it might work, but it doesn't try to use any knowledge, such as word type, to do better, so it makes sense that it doesn't seem to work well. The summary tool uses a different graphical algorithm for determining the important sentences (instead of key words) that functions similarly to Textrank, but it is otherwise different in a few key ways. For one, it assigns the strength of the connection by the number of common words in the sentence instead of just being close together in the document. Second, it just collects scores once and does not update repeatedly, so that the scores are not updated with new weights for being connected to higher weight sentences. Third, it collects the highest value sentence for each paragraph, instead of considering the best sentences from the entire document. Finally, because it is naive in nature, it doesn't try to use parts of speech or other language constructs to inform the algorithm in the way that TextRank does. [1] V denotes the collection of all vertices, lowercase v denotes a specific vertex. [2] E denotes all edges/connections, lowercase e denotes a specific edge. It is often given subscripts to indicate the "number" of the vertex that is being connected from and the vertex that is ring connected to. Edit: I updated my answer to reflect information that I have added in the comments. 