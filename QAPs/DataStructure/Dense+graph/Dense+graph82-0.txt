Linear Algebra: What techniques are used to optimize multiplication of very large matrices?
For huge dense matrices, I think you're looking for improvements on the usual n 3   multiplication, such as the Strassen algorithm. For sparse matrices, it's about exploiting the way in which they are sparse. For example an entirely empty row or column can mean you don't have to compute the corresponding row/column of the result as it is empty. The key is also to have an efficient vector representation of rows of one operand and columns of the other that can be intersected quickly to determine where (if at all) they have a common entry -- an efficient dot operation. For special types of matrices like symmetric, or special cases like multiplying by the same matrix's transpose, you can also do better. More specific tips would depend on just what environment you're in and how huge is huge. 