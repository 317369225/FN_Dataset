Why is the C++14 "Concepts" feature important?
My belief is that concepts will make it easier to avoid mistakes while using a template library. It allows you to say exactly what you're expecting from a type you pass to your template invocation, without the user being forced to hit all the possible errors when actually compiling. For example, if your function requires your template type to support the '<' operator, you won't find out until you get to actually call that function. Concepts are there for saner error messages and for better understanding of complicated template code. 