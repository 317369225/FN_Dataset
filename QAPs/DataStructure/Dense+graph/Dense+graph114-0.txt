What are the pros and cons of representing a graph in an adjacency list, an adjacency matrix, and objects/classes?
Jim Gao illustrates the differences of Adjacency list and matrix pretty well. An Adj. list is better for sparse graphs where an adjacency matrix would take up too much space that is only filled with zero (no connections). Using objects/classes for the nodes and edges and defining a more elaborate data structure for the graph they form is well suited for Attributed graphs, where you want to attach information to each node or graph to access and manipulate as you perform operations on your graph. An example of such a data structures is the The Boost Graph Library. It also offers Boost Graph Library: Adjacency List, Boost Graph Library: Adjacency Matrix, Boost Graph Library: Edge List Class with explanation of classes are suited for which graph types. 