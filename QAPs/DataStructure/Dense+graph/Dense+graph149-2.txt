Is there any reason not to use OrientDB?
I'm not up to speed on OrientDB specifically, but just because a better Swiss army knife appears doesn't mean folks are going to stop using their chef's knives to chop their vegetables. All of these databases are evolving, and there's a lot of momentum behind developments in Mongo, Neo4j, Cassandra, Couch..... I think the innovations in hybrids generally are really interesting, but they always involve an extra layer of complexity, there's a lot to be said for simplicity, even if some performance is sacrificed.  Do most consumers care that MP3s are compressed and lossy, or that CDs sound edgy when compared to the best vinyl? Do they care that Bluetooth speakers are by definition inferior in sound quality to wired speakers? Most don't care--they want the convenience and can overlook the lower performance. They don't want to fuss and bother with wires or audiophile vinyl. They want to listen to their favorite music right now, period. The more stripped down a database is and the easier it is to use, the better mainstream developers may like it. As you are seeking best performance, you may have a use case that's more long tail than mainstream. Click-to-deploy Mongo, Cassandra etc.  on AWS, Azure, and GCC put all the power in the developer's hands.  All that ease of use adds to the momentum. We'll be posting on the NoSQL topic at http://www.pwc.com/techforecast later this month and will be pondering the bigger picture for enterprises if you're interested. 