How does sparsity of a matrix affect matrix inversion?I want to know the time complexity involved in computing the inverse of matrix. In general it is O(n^3) where is the matrix size (n rows / n columns). But what if the matrix is sparse, can the time complexity be expressed as a function of non-zero elements in the matrix?
Look at it this way. A sparse matrix is a connectivity graph: a ij ≠0  if there is a connection between nodes i and j. The inverse then asks whether there is any path between i and j: (A −1 ) ij   is nonzero if there is a path from i to j in the original graph. (Why? Because Cayley–Hamilton theorem implies that A −1   is a polynomial in A.) This immediately gives you results like if A is diagonal (no element connected to anything) the inverse is too if A is upper triangular, the inverse is too if the matrix graph is not fully connected, that is, falls apart into two mutually unconnected halves, then the inverse can be permuted to 2-by-2 block form and: if your graph is connected, the inverse is dense.Et cetera. In other words: sparsity as such doesn't tell you much. For many sparse matrices the inverse is completely dense, but you need to know more about the structure to make a precise statement. Updated 8 Oct 2014 • View Upvotes