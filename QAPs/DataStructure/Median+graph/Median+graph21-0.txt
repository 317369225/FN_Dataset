What are the very basic algorithms that every Computer Science student must be aware of?
You should be aware of a few basic techniques that occur over and over again in many algorithms: Brute Force Divide and Conquer Greedy Programming Dynamic Programming There are more, but these are a good set to start with. Introductory algorithms classes usually go over several classical problems and algorithms that demonstrate one or more of these techniques. These include Sorting problems: Algorithms like Mergesort and Quicksort are classic examples of the divide and conquer technique. Insertion sort is a good example of a brute-force technique. ﻿Graph problems: Algorithms like Kruskal's and Prim's to find the minimum spanning tree of a graph and Dijkstra's to find the shortest path in a graph are classic examples of the greedy programming technique. ﻿String problems: Problems like finding the longest common subsequence between two strings demonstrate one of the hallmarks of dynamic programming: overlapping subproblems that must be solved over and over again. Understanding the details of these algorithms is not as important as understanding the techniques they use. They simply serve as well-understood examples of how to use these techniques. The hope is that they illustrate how to and when to use each technique. 