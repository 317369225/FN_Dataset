Which mathematics topics should I learn to improve my algorithms skills and get started with competitive programming?
First of all, being good at mathematics is not the key to be an excellent programmers. In fact, it doesn't even guarantee that you will be good at coding at all. While programming, mathematics is to be used as a tool. This means that if you know what you are supposed to program but can't formulate it, you use mathematics in that case. After mathematics is all about creating and validating models. To be good at algorithm designing, I think that a strong background in discete mathematics goes a long way. For that you can start with Mathematical Circles: Russian Experience. Once you are comfortable with all the topics in this book, I would suggest that you pick up Problem-Solving Strategies :Arthur Engel or Discrete Mathematics: Elementary and Beyond. Both of these books are good but Engel teaches you strategies and is definitely not for the faint-hearted as its focused at the olympiad aspirants. The latter book is a great choice but only if you like to prove things that have been left by the author (often disguised by the phrase "it is easily seen that"). However, I would highly recommend that you thoroughly study Concrete Mathematics: A Foundation for Computer Science even if you study only Mathematical Circles. Once you are done with these, I think that you should be able to solve most of the problems posed on the coding sites. In addition to these sources, I would suggest you have a look at About - Project Euler . It's a great website and should be used if you like to learn by doing. It has a great selection of problems that require computations to be solved but require mathematical insights to be solved in the required time. If you want to master algorithms for the interviews of tech gaints, I think going for so much mathematics would be an overdose because interviews cover many things (in addition to algorithms). So, I think that you should work on algorithms more than the mathematics. Most of the problems on the coding sites can be solved if you know the math at level of mathematical circles but you need to know your algorithms really well. Without them, even math won't be able to save you. My two cents. 