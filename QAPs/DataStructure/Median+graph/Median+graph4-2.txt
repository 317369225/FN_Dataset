How much math does a game designer need to know?
Simon and David are right but they look like they're writing their own engine (math/physics and graphical library) as I'm doing it myself. This is why I'm adding my word although their answer is right. There is also one question that should come to your mind: do I want to struggle with the maths and physics and have full control on my code or would I like to have a good third-party engine (or call it library) to get rid of that for me?? There are a lot of libraries playing with the maths/physics for you. The 3 I heard the most about are he Unreal engine, the Cry engine and the Unity engine. The 2 first ones can be "rent", the latter is free. Of course you will still have to deal with a bit of maths but in no way it can compare to writing your own engine. Regarding the "I want to do it all myself" philosophy then, as Simon already wrote it: you don't need a specific degree but you would need to be able to understand a huge bunch of math' and physics equations, to know when you need such equations(s) or other(s) and to be able to combine and simplify them. That doesn't mean that you have to be able to demonstrate them (that is far harder and would make you more of a mathematician/physician than a game designer). Anyway whatever your choices the web is FULL of resources not all reliable but you'll learn with the time when to trust or not. Anyway if you ever start: Good luck!! 