What are various methods of implementing a stack using linkedlist(s) and what method is the best?
A2A I think, implementing a stack using Singly Linked List is a best and easy approach. Assuming you are implementing a stack of integers. Head of the linked list would be treated as stack top. Push - This operation is classic insert at first operation on linked list. Pop - This operation is classic delete first node operation on linked list. Following is the java implementation of it - class LLNode {       int data;       LLNode next;       public LLNode(int data) {              this.data = data;       }}class Stack {       private LLNode top;      public boolean isEmpty() {             if(top==null) {                    return true;             }             return false;      }       public void push(int data) {            //Create a node             LLNode  node = new LLNode(data);                         // Insert this new node at start             if(top==null) {                    top = node;             } else {                   node.next=top;                   top = node;            }       }       public int pop() {             if(isEmpty()) {                       //You can return some invalid value, throw exception.                        return Integer.MIN_VALUE;             }             int data = top.data;             //Delete fist node             top = top.next;             return data;       }} Please excuse typo/syntax errors in the code. Hope this helps. Please let me know if you have any question, suggestion or know any bug. Updated 40w ago â€¢ Asked to answer by Anonymous