Abstract data types are different from data structures. Using a stack ADT as an example, how do abstract data types differ from data structures?
Not too much. What distinguishes an ADT is that you've set up some procedures that take your data type as a parameter, and have sole access to its internals. Typically the procedures for a type are set up in their own module. The way this differs from just talking about data structures is in a procedural language, any procedure can do something to a data structure. It doesn't matter what the procedure's intended purpose is. ADT's are about imposing some discipline on manipulating data structures. You isolate the code that works on a data structure from your application code, which has other concerns. This makes it easier to think about the data structure, since this approach disentangles it from application logic. 