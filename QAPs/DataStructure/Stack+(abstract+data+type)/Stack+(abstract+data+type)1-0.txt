Abstract data types are different from data structures. Using a stack ADT as an example, how do abstract data types differ from data structures?
To follow your example, at a more concrete level, an ADT is essentially the interface definition (I like to think of it as the API) and semantic specification for the behavior of a sort of "service" - in this example a "stack service" -  while the Linked list that implements the stack is a Data structure. If you implement push() and pop(), and code using them don't mess with (or ideally even see) the details of the linked list that is used to implement your stack, you've implemented your stack service using a style that is basically an ADT.  The "abstraction" part is important; a correctly implemented "ADT API" hides the implementation details of its service from code that's using the API. 