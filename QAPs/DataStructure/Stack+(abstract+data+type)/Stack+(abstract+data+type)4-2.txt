What's the difference between a data structure and an abstract data type?
ADT is to an interface (what it does) what a data structure is to a class (how it does it). ADT is the logical picture of the data and the operations to manipulate the component elements of the data. Data structure is the actual representation of the data during the implementation and the algorithms to manipulate the data elements. So, in short ADT is in the logical level and data structure is in the implementation level. What what do we actually mean by "logical level" and "implementation level"? Let us take an example of a simple built-in data type integer. At the logic level, we application programmers know only about what are the operations an integer data type can perform, ie., addition, subtraction etc., But we are no way aware of how the data type is actually implemented. At the implementation level, it is about how the data type integer is implemented in the machine level, ie., it could either of binary-coded decimal, unsigned binary, sign-and-magnitude binary, One's complement and Two's complement notation. A few examples: ADT: List means we have just defined the interface DS: ArrayList, LinkedList... have specific implementations. Linked list in C/C++ automatically implies making nodes and connecting them with pointers.We also include the implementation of all the defined operations. Hence, its not an abstract idea of things but rather concrete and  practical. Eg; struct node{      int x;            struct node *next;}; Another example... ADT: Map DS: HashMap, TreeMap... I disagree with Omer Zach .I don't think the implementation is called by the same name as the ADT. We may not say "linked list  stack" but we do say "stack using a linked list" where stack is the ADT and  linked list is the 'implementation'. You cannot call the implementation (i.e. say linked list) same as stack because the data structure(linked list)  has a set of operations(DeleteNode() ,InsertNode() )  completely independent of the ADT(Stack) that is going to use them to implement itself(i.e. implementing operations  like push(),pop()...). Implementation of an ADT doesn't make any reference to how a Data Structure is implemented. 