What is the relationship between systems biology and computational biology?
It's easy to get the two confused, as they overlap quite a lot, but they are distinct fields. Computational biology is the study of biological systems using computational methods. This includes more theoretical studies such as using ordinary differential equations (ODEs) to simulate biological systems and gain insight to how they work, to more practical studies like analysing very large data sets generated by multi-variate biological experiments (e.g. genome-wide expression data). Systems biology is the study of biological systems using holistic techniques. I realise this sounds vague, so allow me to explain. Unlike more traditional biochemistry, where the enzymes in a pathway are often analysed in isolation from each other, systems biology looks at biological system as a whole. This approach allows you to capture and analyse the emergent behaviour that results from the interactions between those components. The tradeoff is that systems biology is often very complex, both in theoretical and practical terms; if you can sufficiently describe a system using reductionist techniques, you're probably better off doing that. I'm sure you can see the pattern here; both computational and systems biology aim to solve problems that traditional biology can not solve and naturally attract people who think at the systems-level (computer scientists, mathematicians, physicists, etc). But one need not be the other. To help illustrate this, allow me to give a two counterexamples of where you can do one but not the other. There are plenty of experimental biologists who believe their system cannot be analysed using reductionist techniques, but do not do any computational work. Similarly, there are plenty of computational biologists that are reductionist, such as those who study computational models of single neurons with the intent of trying to understand macroscopic neurological behaviour. 