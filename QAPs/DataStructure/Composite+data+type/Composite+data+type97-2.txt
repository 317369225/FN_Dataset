What are the growth stages of a programmer?Can someone share their journey and what clear stages you can identify over the years? e.g. learning your first programming language, first IT jobs, career decisions, understanding goals of corporate IT, etc?
Disclaimer: this is an answer pertaining more to the stages I've gone through, until now, as a programmer. As a programmer at 30, with some experience behind me working only for startups, I can say that no matter what stage I've been in, I've always felt like the person with the best job in the world. I've also not followed the conventional path. I got into IIT Delhi with Computer Science but I didn't like the course or the environment in the institute. I didn't study enough and I got thrown out at the end of the first year. I didn't really give a damn. I started again and then got into another decent university, by Indian standards, the Vellore Institute of Technology, where again, I didn't give much of a damn about what I was taught. All I knew was that I loved programming. I spent hours on SPOJ and sleepless nights hacking away. Scalability and large data always amused me. I studied distributed systems and before I knew it, I got sucked into the functional programming paradigm. I managed to graduate with good grades and some research under my belt. It is then when I really started to fall in love with the programming world. I landed a fat job at IBM, Bangalore, but I didn't take it. At the same time, I knew it would be foolhardy to just deny the offer, so I kept the offer in waiting and went back home to my parents and hacked away for about a month. I got an offer from a very young startup (that eventually went bust, so I won't mention it here) with some very smart and eccentric people. This was an internship. I didn't blink and eye and took it. Bam. I was thrown into the world with huge amounts of data and I got to work on a programming language I wished I could use more – Erlang. I worked day and night and at the end of it, we almost managed to pull our NLP engine through. But before we could iterate and improve, we went bust and I went home. Before I knew it, I got an offer from a growing, successful startup based in Bangalore. Again, it was an amazing experience. I walked into a team of just about 4 people and was almost immediately given huge responsibilities – in a team that small, the founders don't really have other options. But then again, we were not constrained about time and I was told to take time reviewing choices, researching options, reading through docs, ensuring all pitfalls are known and so forth. Six months down the line, I had architected an internal business intelligence framework, which, although basic in it nature, worked. It just worked, and it was something we started depending on and using extensively. Managers would subscribe to KPI's, get timely emails, rely on the data, and send me emails thanking me about the effectiveness and what could be improved. That felt like having rocket boosters attached to my shoes. I worked my ass off and delivered something iteratively beautiful. I learnt that write it once and get it right doesn't exist, one has to iterate. It is essential that what one writes is iterable and extendable. I was entrusted with more core functionality and improvements and I delivered every single time. My confidence at my very first job was sky high. It was time to move on after a year. I moved to New Delhi after Bangalore's traffic got to me. I freelanced, and worked for one of the best startups in India, again an experience that made me learn more about processes and matured me as a developer. Fast forward to now, I'm sitting in a beautiful office in Brussels, taking a break, in a startup that I co-founded with a bunch of amazing people. This was the first time I got the chance to architect a product from scratch, choose a programming language that I wanted, and here we are. We're doing well. 