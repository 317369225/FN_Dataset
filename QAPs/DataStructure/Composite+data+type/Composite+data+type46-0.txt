What are the advantages of Scala over C++ and Haskell?http://www.theregister.co.uk/201...
Quick Primer: Scala is to Java as C++ is to C. Scala wraps a layer of functional programming over Java as C++ wraps a layer of object-oriented programming over C. Haskell is a pure functional language that compiles to C. Performance-wise, typically C++ > Haskell > Scala. Some advantages of using Scala: it supports both object-oriented and functional programming paradigms (with pretty ML-like syntax), it portably runs on the JVM, you can access all Java libraries, it has some degree of type inference, and its support for overloading and implicit type conversions makes it nice for writing embedded domain-specific libraries. Haskell and Scala are higher-level than C++, making it easier to write many programs more quickly in Haskell or Scala. Haskell has a lot of static restrictions and is purely functional (so the programmer needs to manually keep track of state with monads)â€”it takes much less discipline and hard thinking to program in Scala. Scala is also one of the few academic->mainstream technology transfer success stories: apparently the Swiss government has been pouring money into it because financial programmers have been using it for its safety properties. Scala language creator Martin Odersky now has a company supporting enterprise Scala use: http://typesafe.com/ A disadvantage of Scala is that it compiles to Java, which means 1) pretty long compile times and 2) it is even higher-level than Java, which means you suffer from similar (correct me if I'm wrong) memory overheads. Writing in Haskell and C++ can potentially produce faster code. Unless you are trying to write high-performance code or you are functional programmer who gets off on keeping track of state, Scala is a pretty good language. 