What is an algebraic data type?
Josh Begleiter already gave the formal definition of algebraic data type. I will just to give some concrete example. There are two type of algebraic data type, one is sum type, which is similar to enumerate type.  Like the following haskell type definition is quite like the enum definition in C++ code. data SumType = A | B | C | D deriving (Show, Eq) enum sum_type { a, b, c, d, }; But there is a very important difference here, every branch of definition in Haskell code is a constructor, unlike the C++'s enumerate definition which use integer to represent each enumeration, which sometimes cause very subtle bugs in C++ program. Another one is product type, like tuple and records.  The following record definition in haskell is an example of product type data Person = Person { firstName :: String , lastName :: String , age :: Int } deriving (Show) I think you can thought this definition in this way. If I want to choose one from a sum type, if there are m enumerate value, I will have m choice. Which is the sum of every branch(consider as 1). For the product type, if there are m fields, and the value for the first field has n1 possible value, the second has n2 possible value, and so on, then there will be n1 * n2 * n3 * ... * nm values of possible instance. 