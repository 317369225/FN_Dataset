Why would someone use an SQL query when everything is available on GUI?
False Premise - No GUI can do everything that "raw" SQL can do. Removing the false premise, I will answer "Why would someone use a GUI instead of SQL."   There are three reasons I can think of . #1  Someone does not know how to write SQL and does not want to learn #2  Someone only asks rudimentary questions on small to medium sized data sets. #3 The organization that owns the data set wants to protect the data infrastructure from poorly written SQL. All data questions can be answered "correctly" in multiple ways.  Simple sum and aggregation questions can of course be done with a GUI in a way that is not disruptive.   One can even put extra horse power on small to medium data sets relatively cheaply so ineffective SQL made by a GUI tool will work at a speed acceptable to users.  As long as there are not a lot of users and it is ensured that no one will never need more than simple answers,  #1 and #2 will be just fine from a business objective point of view. Cartoon to code tools are still not mature enough to consistently answer serious questions effectively even when they can get correct results.  When given multiple ways to answer a question they are not able to reliably and consistently pick the best way to answer.  Picking a poor way can lead to all sorts of contention and poor run time.  The most common way to protect the end users who are not trusted to write good SQL is with data abstraction layers.  These layers contain SQL usually behind views and API's that implement complex logic customized for the platform, the model and the consumption tool. With #3 in place, which means someone wrote SQL for the user, than #3 can be ok as well.  It is assumed that time to market is not as important as governance. I can not think of any other reason... 