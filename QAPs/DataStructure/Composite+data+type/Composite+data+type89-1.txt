What is database refactoring?Any practical example to understand it?
I like Colin Foster's answer.  I will add a few practical examples. When tables grow with an application it is a good idea to how they are used. Look at indexes.  Do they still help the explain plan? Would adding or changing them to a reverse index help? Would changing the order of composite indexes help? More less indexes help? Is it time to aggregate some tables? Are there complex strategic questions being asked that can be answered by an aggregate table that can be populated in a batch process? Does it makes sense to move some of the strategic questions to a hot back up or a reporting version of the data base? Model Changes Does it makes sense to change the nature of how the data is stored? Do we now need type 6 time variant dimensions? Do we need a bridge table to support relationships of data more efficiently? Would  a recursive object help this portion of the application? 