Which two programming languages together are powerful and cover the largest field in programming?
Well, Smalltalk and Lisp. Smalltalk as the original object-oriented language. Totally clean (everything is an object; every behaviour is message sending), simple (syntax on a postcard; control structures are messages, too). Still full of ideas which did not permeate to mainstream languages. Each decade one of key ideas from it enters the mainstream (80s - object with overridable methods and inheritance; 90s - GC, 00s - duck typing, 10s - I don't see anything yet). Though this is biased, because I love Smalltalk, from my experience the fact is, if you want to know what OOP is, you must have laid your hands on Smalltalk. In my life, the course of Smalltalk on university gave me so much insight into OOP, that there was nothing new since, with the exception of getting rid of classes ang going to prototype-style inheritance (and that came from Smalltalk's derivative - Self). Everything else was taken from Smalltalk. Other to the pair is Lisp. Again, pure embodiment of another paradigm, functional programming. Those two will actually cover very much. (or did I misundertood and you were not after "idea, style, practices" coverage but more after "business applicability" coverage?) 