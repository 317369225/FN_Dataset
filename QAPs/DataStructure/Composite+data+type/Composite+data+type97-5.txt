What are the growth stages of a programmer?Can someone share their journey and what clear stages you can identify over the years? e.g. learning your first programming language, first IT jobs, career decisions, understanding goals of corporate IT, etc?
As one who has been writing code and designing software systems for the past 30+ years, I might have a thing or two to say about it. I will enumerate my take on this thusly: Flaming Newbie Stage --  you are intrigued by computers and the software on them with the wonder of how it all works. You dive right in and write your first bits of your own code in some chosen language that actually WORKS. You do it more and more and are bitten by the "Sorcerer's Apprentice" bug : Maybe I can do something with this Stage -- as your mastery improves, you begin to wonder if you maybe can make money or a living at it. So you look into getting more education or asking around to see what the possibilities are. When I reached this stage way back when, there weren't that many possibilities. Today, the possibilities are endless. You simply choose a trajectory and go with it. First Paying Job -- Whether you went to school or blazed though via autodidactic means, you start looking for your first job. This will be most challenging as you will probably wind up with many initial rejects. But depending on what school you went to, you may  already have many job offers in hand, as will be the case with MIT grads and the like. And so you start your first job and learn what the "real world" is like. You are introduced to Scrum/Agile techniques, surrounded by others who are "old veterans" with more experience than you, but are usually very friendly. You might be expected to do some "pair programming" initially, which I think it's a great way for a "newbie" to come up to speed with the techniques of "the Masters". You learn a lot and it all begins to change your thinking about software. You get past your First and Second Years -- you are beginning to get the hang of things, and you now have a firm grasp on not only one or two programming languages, but also a few frameworks to boot. May be on your second or third job by now, and are beginning to see significant rises in your pay rates. But your thirst grows to tackle bigger and better complex tasks, and you are always learning something new. By now, you will have several good contacts and acquaintances in the field, and perhaps becoming more and more known in small circles. You may be regularly attending special interests groups and the like. Maybe even doing presentations at some. You achieve "Senior" status -- Usually around your 5th year or so. By now, your CV is starting to stretch beyond 2 or 3 pages with all the experience you've accumulated. You start calling yourself a "Senior Software Engineer" or similar. You are capable of not only visualizing complex business demands in your head, but also the complex software solutions to them as well. Your phone "rings off the hook" within a day of posting your CV on http://Monster.com. You are probably an avid contributor to the Open Source movement and have built up quite a portfolio on http://GitHub.com. You are feeling like "Neo doing his Superman Thing": You pass your 10th Year and your Apotheosis is at hand -- By now you have seen and experienced much, you have survived the occasional downturn in the software industry here and there have managed to "stick around". You have witnessed have been a part of the rapid evolution of the Software Industry. Indeed, you may have been a major contributor to that yourself. You may now have taken on the moniker of "Software Architect" and have done a number of "Greenfield" projects. You are relentless, unstoppable, the Nuclear Bomb of Software Development: You are now past your 30th year. You have become the Star Child. Nothing more needs to be said at this point: You wonder where you go from here, with all of your incredible knowledge and experience and all. But you will think of something. 