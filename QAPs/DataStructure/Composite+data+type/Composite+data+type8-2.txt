Haskell (programming language): What are some practical uses of Kleisli composition (>=>)?I understand from the types how it works, sorta, but I'm having trouble using it in practice—I always seem to fall back on bind (>>=). I think seeing some examples of it used in practice would be helpful.
Kleisli composition provides the morphisms in the Kleisli category of monadic functions associated to some given monad m. That is, it is the natural composition operator for functions of the type a -> m b, for some monad m. Here's one of the simplest examples, which shows the Kleisli category in action for the list monad: children :: Person -> [Person] grandChildren = children <=< children Updated 1 Dec 2014 • View Upvotes