What are the differences in laymen terms between data structures vs. data types?
Data structures are the way your data is organized in the computer's storage. The same data may be organized in many different ways, each with its own advantages and disadvantages. For example, a set of numbers can be stored in a block of consecutive memory cells (an "array"), which makes it a lot of work to find out if a particular number is in the set (you have to scan the whole block), but it makes it easy to add a new number to the set, you just put it at the end. Alternatively one could keep the numbers in the array in sorted order, which would make it a lot easier to find one (in the same way it is easy to find a name in a phone book), but now any new numbers may have to be inserted somewhere in the middle, requiring a lot of shifting around of memory. Many more sophisticated data structures use references or pointers: these are cross-links between the various data that allow them to be manipulated much more easily.   Data types are more abstract. They only specify what operations you can do with the data, but they do not specify how the data should be organized or how these operations should be performed. For example, you might write a program that does something with a set of numbers. But you would not necessarily care about how the numbers are stored in memory (the used data structure), as long as your data type "set of numbers" supports the operations you need, such as "union of two sets", "intersection of two sets". So a data structure can be thought of as a concrete trick for  implementing a data type efficiently. 