What are the growth stages of a programmer?Can someone share their journey and what clear stages you can identify over the years? e.g. learning your first programming language, first IT jobs, career decisions, understanding goals of corporate IT, etc?
I believe there's three phases in a developer's life: The novice hacker "This code sure is ugly and I don't quite understand why it works, but here it is!" A developer in this phase finds creative solutions to problems, they just happen to be copy/pasted from all over the internet. The problem is that the code breaks whenever it needs to be changed or it encounters a new situation. The philosophizing abstracter "This code works for now, but if I move this part into a factory, and create an interface for these methods, it'll also support all these future cases I can think of!" They've read all the articles on how to structure code. There's a lot of patterns out there for object-oriented (or functional!) code. Their code has all sorts of useful interfaces, abstraction layers, factories, extension methods, data structures. Things break down when the project needs to move in an unexpected direction and it turns out that implementing the change requires changing a lot of the codebase because there were a bit too many abstractions that ended up creating hidden dependencies across the code. The wise hacker "Move fast. Break things. Revise and fix. Get shit done." Finally, developers balance the concepts of hacking and abstracting. They write code that simply solves the problem at hand, then they take a step back and look for repetition that can be simplified. They know from experience that things always change unexpectedly and that you can't always foresee what will or will not be useful in the future.The two first stages of a developer can be very inefficient at solving problems for different reasons, but combining them together with experience is what makes a good developer. I think it's beautiful that most of the time developers both start out as and end up as scrappy hackers. 