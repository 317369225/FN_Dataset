What are the growth stages of a programmer?Can someone share their journey and what clear stages you can identify over the years? e.g. learning your first programming language, first IT jobs, career decisions, understanding goals of corporate IT, etc?
This doesn't answer your full question, but here's a graph I made once of how the level of abstraction in a programmer's code changes over his career: Everyone always starts with under-abstracting (e.g. copy pasting), because, you know, creating functions and classes is hard! That usually leads to the first larger program the person ever created, which of course becomes an unmanageable ball of spaghetti. That then encourages the desire to never do that again, and instead abstract everything properly. This phase lasts a lot longer, and for some programmers forever, but can lead to a second really bad experience with another ball of spaghetti (this time made out endless amounts of over-engineered code). This then leads to the realization that if it is possible to abstract too little, and too much, there's gotta be a sweet spot in the middle.. yet finding that spot proves to be rather hard. 