What are some limitations/disadvantages of functional programming?
It has been established that there are problems that take ∅(n)  time to run on language that can mutate state to ∅(nlog(n))  in pure, non lazy functional language [1]. In practice, most algorithms in imperative world can be translated into functional without loss of asymptotic run time [2]. The caveats here are the constant factor can be non-trivial and the functional algorithms tend to be a lot harder to understand for human. Remember that [1] doesn't apply to functional, lazy languages like most modern functional languages. [1] @Page on princeton.edu [2] @Purely Functional Data Structures: Chris Okasaki: 9780521663502: Amazon.com: Books 