What are the growth stages of a programmer?Can someone share their journey and what clear stages you can identify over the years? e.g. learning your first programming language, first IT jobs, career decisions, understanding goals of corporate IT, etc?
I am sharing my stages. Some of these stages might shuffle or change totally for others. Choosing to join IIT CS for graduation Learning first functional programming language as C Learning fundamentals and concepts of core CS Learning first Object Oriented language as Java and idea of re-usability and maintainability of code. After this learning other languages was easy. Joining job as Software Engineer Learning all the support stuff that is required along with writing code like frameworks, version control, build system, ticketing system, wiki, project life-cycle, test cases, how to work in team, breaking requirements into tasks to execute parallel and systematically in team Learning GOF patterns and why good Low level design is important Understanding code behind beautifully written frameworks like Spring framework Learning HA (High availability) and LB (Load Balancing) How to guide and make juniors programmers grow in work maturity From Low Level Design to High Level Design, distributed systems and physical decoupling Learning to monitor code and system health like code test coverage, profiling and bench-marking, alerting system behaviors Learning that any good open source solution has its limits and none is jack of all trades Learning to have/drive healthy/positive discussions over solutions within team and across teams to negotiate/reach to a solution Learning front end optimizations and how most of end user perspective optimization will happen at front-end (almost 80%) Learning to tune systems and code to achieve maximum throughput with minimum latency Building resiliency and failover in distributed systems and avoiding cascading effects on entire system when one service malfunctions 