Which two programming languages together are powerful and cover the largest field in programming?
Most of the answers here emphasis some imperative languages , which is for popular reasons. But for the cover the largest field in programming part, I think some non-popular languages will teach us even more. I would argue that Scheme and Prolog should be a good choice for this question, one in functional paradigm and one in logic paradigm.  I agree with most of Herbert Vojčík answers, since the two language should cover different paradigm. What I don't agree with is as Irné Barnard pointed out in the comments of Herbert Vojčík answer, OO is actually a subset of functional programming paradigm, CLOS is a good example of implementing OO in functional style. In fact, OO and procedure programming paradigm are just special cases of functional programming with mutable state. Since things like dynamic dispatch or inheritance can be easily expressed using higher order functions and mutable variable in a functional languages. Thus I considered OO and procedure as an special subset of functional programming. Scheme (programming language) is just a elegant dialect of Lisp family, which is a functional languages, and will teach you core ideas like higher-order functions etc. As a decent lisp, you will also get the unified representation of code and data, which make meta programming extremely easy in it. It also support mutable state, so the procedure paradigm and OO paradigm can be easily implemented in it. The Racket Language which is a decent implementation of Scheme even have a chapter explain doing OO in racket Classes and Objects . So the other languages should be in a paradigm different with functional or OO, which I think logic programming is a perfect fit. Prolog's declarative style of programming, automatic backtracking search will totally change your view of programming.  It's also the root of distributed oriented programming language like Erlang.  19. A language that doesn't affect the way you think about programming, is not worth knowing. - Alan J. Perlis Both Java, C, C++ are in one or two popular paradigm(OO or procedure), and will not teach you something more. That's why we often hear the statement said that "Most programming languages are quite similar". Most programming languages are quite similar because they are almost from the same paradigm(procedure and OO). There are totally different languages like Prolog, Coq, Haskell etc. Choose some languages in a totally different paradigm will broaden your view of programming even computing. Updated 27 Oct • View Upvotes