How many lines of code can a good programmer write in one hour?
To be fair, really good developer have a negative LOC. They know what to refactor and when. I often reduce code by 50% and make it either faster or easier to extend. (Java) I am not a wizard, I am just highly assisted by tools like PMD and CPD and simply consult them to quickly spot areas of improvement. In some projects, I simply switched one dependency for another and removed a lot of "custom" code to use "provided" one. How many junior developer rewrite Apache Common and Guava ? (Answer : Nearly all!) So, if you sum up LOC I wrote throughout my career, it would be very low. Really low. The best strategy I've found is laying down a devlopement plan using UML and BPMN when relevant then code to get the thing done. Then refactor and repeat the process. At the end, you've fewer lines than if you tried to ace it tge first time! Also, knowing the right stuff can greatly help. Regex are a good example of concision. (Once learned, they are legible) Creating a state machine using an array can also be a great tool to avoid thousands of lines to validate a format that can't be expressed by Regexp. So, LOC is quite useless. TL;DR : good developer should have a low LOC if you don't take into account "temporary" lines of code. 