Is it still reasonable to say mainstream languages are generally trending towards Lisp, or is that no longer true?
If you look at it long-term, I think yes. The defining features of Lisp, if we look at say, the Lisp of 1970 versus everything else out there in 1970, are: 1) garbage collection; 2) first-class [and anonymous] functions; 3) dynamic typing; 4) non-machine data-types like unlimited-size integers; 5) radical runtime modifiability of everything; and 6) an interactive REPL. In the 40 years or so since then, I think a good deal of languages have been moving towards Lisp in many of those respects. Some haven't---C++ mostly continues in the Fortran/C/Pascal tradition---but most of the others in one way or another have been. In particular, there's been a surge lately in dynamically typed languages with runtime-modifiable-everything and REPLs, which I think of as core Lispy features that were previously hard to find anywhere else. 