Functional Programming: What are type lenses?
ATA: While I'm not an expert, here's my understanding. Think of them i.t.o. the getter and setter methods in OOP. Only they are meant to keep the "purity" (immutability) of functional complex types. I.e. it's a way to extract the field values in a structure (i.e. the getter method). The real difference comes on the "setting" part. In normal IP setting a field's value simply alters that value. In Type Lenses a new cloned container instance is made with that field initialized to the new value, cloning the old values to all other fields. This means immutability is maintained. Note however depending on implementation (especially in Haskell) the "cloning" of the other fields doesn't necessarily mean they're all new instances. It may be that some of the behind-the-scenes trickery of something like Haskell is re-using the same actual RAM data for the cloned fields, so while you end up with 2 instances of the container (e.g. struct) it's contents isn't necessarily duplicated physically. As I said, I'm no FP expert so my understanding may be faulty / incomplete. But if not then I've got a gripe on this as I've got a gripe on many "new" things in programming: The naming is confusing. This has been happening to many things in programming: Giving something "simple", well understood and constantly / much used in the past some new name to to make it (IMO) sound like something "cool" and "new". This in particular shows two of the many pitfalls in going with this naming standard stuff itch: (1) The name confuses people into thinking it's something "strange" and "complicated"; (2) If the name isn't very descriptive (as most are) or worse totally confusing (as this one is) it makes for even less understanding and more confusion. IMO, this particular idea shows why such things shouldn't be given names just willy-nilly. E.g. if you wanted some more apt and descriptive name you might have thought of Immutable Setter. But that's a contradiction in terms isn't it? Well it's no worse than the name chosen here, it's got nothing to do with the type (it's the data that is "focused" on). And even less to do with optics, so why "Lenses"? So instead of going with a name that at least describes what's going on though it's a contradiction, they though of "lets just choose some random juxtaposition of words", or at least that's what it seems like. 