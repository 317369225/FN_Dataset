What is the strongest argument for functional programming?Or is this paradigm completely obsolete in front of OOP.
I personally see the following advantages over OOP Better testability: In OOP instances are usually mutated. This results maybe in an unclear state while refactoring things. You need a big setup of tests to ensure the integrative functionality doesn't break. When working functional that isn't as much the case since all data are the result of an immutable function. Higher area of abstraction. Languages like Ruby already used that as well. They offer you the possibility to hand over functions (in case of Ruby it can be blocks, lamdas or procs). This can save code since you reach a higher level of abstraction This mainly comes from immutability but secure concurrency is the killer feature of functionl programming. It is very easy to setup new concurrent processes without th eneed to lock ans data, since they won't be changed at all. What is programming about. the overall goal is to create some output data from some input data. Mathematically we want to know the image of some input by using a function on it. that is exactely what FP does. So it is an easy way of thinking from my perspective. One could switch your subquestion and ask weather OOP becomes obsolte when seeing the power of FP. But I think both has reasons. In some cases I like writing object oriented code. Nevertheless nowadays I prefer FP in most cases. 