What are the growth stages of a programmer?Can someone share their journey and what clear stages you can identify over the years? e.g. learning your first programming language, first IT jobs, career decisions, understanding goals of corporate IT, etc?
I am currently a student of several computational disciplines: computer science, computational maths, and applied statistics. My growth path as a programmer looks like: 1. basic foundations of programming languages (C, C++, Python, Java, SQL, R): control flow, data types, operators, data structures, algorithms 2. advances related to software practice: object-orientation, function composition, effective use of developer libraries, parallel computing, model-based programs 3. psuedo-code prototyping and implementation to programming language currently used I currently want to practice 3. This is mostly because the psuedo-code quickly outlines the problem stem, and reinforces understanding of what is asked of you verbally or otherwise specified. This makes the act of "coding" less syntactic and more in line with the meaning. 