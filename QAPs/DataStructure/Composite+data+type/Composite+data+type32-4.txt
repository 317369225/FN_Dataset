Why are C# and Java not considered as Object Oriented Language compared to the original concept by Alan Kay?Today I just learned that C# and Java don't support Object Oriented Programming (OOP) if judged by the standard of the original concept coined by Alan Kay.Â  Does that mean that all the things we've been learning about OOP and reading in books are a complete non-sense? Could anybody explain to me why?
As I said in a comment, the lack of multiple inheritance is enough to make purists reject Java and C# as being object-oriented, but purists often have trouble getting anyone to care. There are good reasons for this lack, and it's almost entirely made up for by interface implementation, so this isn't a big deal. I also made a pedantic correction to Anonymous' answer to Why are C# and Java are not considered as Object Oriented Language compared to the original concept by Alan Kay? with regard to how C# handles primitives in a conceptually cleaner manner. But that's pedantry on top of pedantry. The short answer is that Java and C# are object-oriented in the ways that actually matter to anyone. So's C++, which actually does support multiple inheritance, but also supports lots of other stuff that's not OO. 