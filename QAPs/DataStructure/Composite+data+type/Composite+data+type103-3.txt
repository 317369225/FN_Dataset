What is the most efficient way to sort 4TB on a single machine with 4GB of RAM?
As an alternate to merging 1000 4GB lists in parallel, we can perform a k-way polyphase merge[1], where k - 1 is the number input files containing the sorted runs. For the 4-way case we would distribute the 1000 sorted 4GB runs into 3 input files using the Fibonacci series: create 220 dummy empty runs and distribute the total 1220 runs as 233, 377 and 610 into the 3 input files. We then load the runs from each input file into its respective 1GB input buffer and perform an in-memory merge onto an 1GB output buffer. Both the read/write buffers can be intelligently managed through a variety of techniques (ex: can use a naive async pre-fetching strategy during the merge process). On each iteration of the algorithm, one of the input file will run out of runs and will be considered as the output file for the next iteration.  In general given the number of runs and the number of input files, we need to find the smallest number greater than the number of runs that could be expressed as a sum of k - 1 consecutive Fibonacci numbers (we pad dummy runs as required) and distribute runs to the k input files using those numbers (or) another way would be to find the smallest (k-1)-order fibonacci number that is greater than the number of runs .. [1]http://en.wikipedia.org/wiki/Pol... Updated 22 Jan 2014 • View Upvotes