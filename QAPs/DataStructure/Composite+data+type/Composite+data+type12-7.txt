Why is there so much hype about functional programming?I believe every OO programmer has definetly started coding using a functional programming language. For example you start with C and then move to C++ or Java... Why is there so much hype about functional programming nowadays. I mean if everyone has used one at some point and then decided that OO is the way to go?
The languages you're listing aren't functional languages, they're procedural languages. Functional languages let you write code that describes things (ideally) purely in terms of a mapping of the set of inputs to the output. That's different from procedural program, where a "function" may take the same variable as input 10 times and and may give the same result each time or may give a different result every time. That means that pure functional programming languages may cache values as an implementation detail. Evaluation of a set of results can be done lazily, so that if you need 8 items, it evaluates 8 items (instead of trying to evaluate all the items in the list then using only 8). Work can be broken up among multiple threads without worrying about whether there's an order dependency, because there's not. Immutable objects can be accessed by multiple threads at once without locking, because there aren't race conditions. Updated 8 Jul â€¢ View Upvotes