What are the disadvantages of using Node.js?
Node.js is a single-threaded event-based system. As long as you are using any nonblocking I/O calls frequently, requests can be serviced in a timely fashion. However, if you start hogging the CPU even for a few milliseconds for a given request, all other requests cannot be serviced. Even if you have a single URL that's computationally expensive (think about your back office site), your entire service degrades. Node.js doesn't give a good workaround for such situations and you might have to break that URL into its own service, causing quite an administrative headache; in cases like this you wish it would just spawn a new thread for such a request. While on the surface it sounds quite difficult to have node.js spend quite a lot of CPU cycles before calling any nonblocking I/O, such situations can arise, for example, when parsing or validating a decent amount of data naively, converting between formats naively (audio, video, but even large XML to JSON conversion), rendering really big and deep templates, and of course, actually doing math. 