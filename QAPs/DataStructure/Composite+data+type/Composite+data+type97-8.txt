What are the growth stages of a programmer?Can someone share their journey and what clear stages you can identify over the years? e.g. learning your first programming language, first IT jobs, career decisions, understanding goals of corporate IT, etc?
Stage One; Discovering programming During this stage my programming was inspired by BASIC hello-world program on C64. I spent many years in this stage learning my way trough programming languages like BASIC (GWBasic, QBasic 4.5-7, Visual Basic), Pascal, C, C++ and Assembler. Progression was steady while remaining kid-like hobbyist, making tiny sprite games in C64 to making some RPG games in PC, while participating in Demoscene and making intros/demos. Understanding of inner workings of systems like C64, Amiga and PC was important in order to know how to most efficiently draw a pixel on screen using Assembly code. Distinct feature of this stage was "finding best language" and brag about using it. Which is why I ended up mixing C/Asm. Stage Two; Programming real stuff At some point there was programmer position posted in local newspaper, looking for someone who can handle VB, C/C++ and SQL, which I applied for and got hired. I spent about 15 years doing all sorts of database applications from small to big, biggest being system with dozen different applications and used in all continents of this planet. Also including some embedded systems programming. I was introduced to more programming languages. Distinct feature of this stage was "talking about buzzwords to dumben down clients so they think I am some genius". Stage Three; The Professional (where I think I am) Getting rid of my Ego in programming. Learning how to (really) teach others about programming (not just boosting my Ego by having superior knowledge.) Jumping into any task/language/system without judgement. Appreciating that every project has had very good reasons for the choices made along the line and none of those reasons were bad at the time. Distinct feature of this stage is "being able to explain complexities to people who dont even know what programming is" and "how peaceful it is to understand problematic code and accept it as it is (and perhaps fix it)". What I think of being the next stage? Imagining something that I did not experience is difficult for me. Just like programming a program with tools I dont know how to use... first I go try out new tools or new language to learn about them, then I try using them to finish something. Then I am able to tell. So most probably I have reached Stage Four before I can think what it is. Important point; My stages do not go along with "programming skill". I am yet to consider myself as a "good programmer". 