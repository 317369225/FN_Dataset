What is the k-Nearest Neighbour algorithm? What type of problems can be solved by this algorithm? What type of math is required?
K nearest neighbor has many uses in data mining and machine learning. One particular use is in anomaly detection. Let's say that you have a submarine. And on this submarine, you have a computer that is recording data from the submarines sensors every minute. The three pieces of data it records are 1. Depth (meters from sea level) 2. Power Drawn (Watts) 3. Fuel Consumption (Liters/minute) You want to be able to monitor your submarine and immediately recognize if there is some sort of anomaly in the data you are recording that signals an anomaly in the submarine. So, first you go through your data visually, deciding which days of your previously recorded data is good behavior of the submarine. You decide what sets of data show when your submarine is acting normally. This is your training data and forms a knowledge base. So now you have rows upon rows where each row has 3 columns (depth, power drawn, fuel consumption) during each minute where you have decided the submarine was acting normally. You can sort of visualize that I could plot each of the rows as a single point on a 3d graph, where the x axis is depth, the y axis is power drawn and the z axis is fuel consumption. Before I did this, I would have to normalize the data. I would have to do this because some of the data is going to have inherently higher values. If I don't normalize it, the columns that have inherently higher values will have a bigger impact on my algorithm. What I mean is this. The values for depth of my submarine can range from 0 all the way to 7000 meters. On the other hand, the values for fuel consumption in liters per minute may only range from 0 to 10 liters per minute. This doesn't mean that my fuel consumption matters less than my depth. Both of these should affect my analysis equally. You can think of this as similar to normalizing a vector like 3i + 2j + 5k to a vector of length 1. When normalized, the new vector's value is 3/sqrt(38) * i + 2/sqrt(38) * j + 5/sqrt(38) * k. After normalizing your data, you can plot each row of your data as a single point on a 3d graph where each axis corresponds to one of depth, power draw and fuel consumption. Now you can use a clustering algorithm to form a number of clusters around the points on that 3 - dimensional graph. Because your submarine's depth, fuel consumption and power draw will show patterns, the points in the graph that all correspond to rows in your data, will all be clustered in groups next to each other. This group of clusters (or spherical objects) are locations where the data is normal since you handpicked these points as nominal or normal data. Now comes the k nearest neighbor part. Let's say that once you have built this knowledge base for the algorithm, you want to use it to analyze new data that your computer is getting from the submarine's three sensors every minute. Unlike your knowledge base where every point was good behavior, this new data could be good or bad. If it is bad you want your computer to find it and tell you so that you can fix your submarine. So... After normalizing this data, you plot each new point (each point is defined by depth (x) , power draw (y) and fuel consumption (z) )on the already existing 3d graph. If the new point is inside one of the clusters, then it is good behavior and your algorithm does not raise a flag. But... If the new point is not inside one of the clusters, you calculate the distance from the new point to the edge of the nearest cluster. The longer the distance, the more anomalous the point. This is how k nearest neighbor is used practically. This example is easy to imagine because I used 3 pieces of data and it is possible for us humans to visualize graphing in 3 dimensions. K nearest neighbor can be used in anomaly detections on real world systems where you may have 4,5,6 even dozens or hundreds of columns (hundreds of dimensions) in order to find patterns and anomalies in the data. If you are monitoring an airplane, you can have colums (dimensions) that correspond to descent speed, pitch, throttle, yaw, roll, wind speed, flaps, rudder deflection, altitude, etc. K nearest neighbor can be used on airplanes to warn pilots and air traffic if something is going wrong on an airplane in ways that the human brain cannot compute or understand. It can be used in many system or biological health monitoring to notify technicians if anything is going wrong. 