How can we write a simple machine learning code in C++?
This is an ill-posed question. Machine learning is very broad. What is it that you exactly want to do? Classification? Regression? Clustering? What algorithm? Application? Anyway, with the amount of information present, here's a possible answer: Use k-nearest neighbour algorithm (k-nearest neighbors algorithm), which can be used for both classification and regression, though it does not perform very well in its naive form. I will give an overview of the classification scheme; regression is similar. So, assuming you are given 4 matrices: - xTrain (M1 x N) - yTrain (M1 x 1) - xTest (M2 x N) - yTest (M2 x 1) which you read from some input file, you need to learn a model from the training set and then predict on the test set. So there's actually no real learning in kNN. Thus, you simply pick test points one at a time, and predict the labels as follows: - Identify training points "close" to the given test point. The most common metric used to measure distance is the Euclidean distance. You can call points that are within some distance 'r' from the test point as "close" and the rest as "far", or you can do something more fancy, like weigh the points as a decreasing function of the Euclidean distance. - Add the labels of points marked as "close", or take a weighted sum, depending on what technique you used in the previous step. - Infer the label from the sum: Assuming the class labels of points are +1 and -1, if the sum in the previous step is positive, then classify the point as positive, otherwise as negative. Compute accuracy: For all the test points, compute what percent of points were correctly classified, by matching the label assigned by your algorithm and the true labels given in yTest. 