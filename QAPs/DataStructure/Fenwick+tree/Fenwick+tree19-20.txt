What is the most complex line of C code you have created or encountered?
I came up with this a long time ago. The challenge is to define a function that returns a reference to itself or another function of the same type without circumventing the type system. The line of interest here is the typedef. To understand just how tricky this is try to do it yourself without looking at this code. #include <stdio.h> #include <stdlib.h> #include <unistd.h> typedef struct fn { struct fn (*f) (void); } fn_t; fn_t a (void); fn_t b (void); fn_t c (void); fn_t a (void) { fn_t f = {b}; (void) printf ("a()\n"); return f; } fn_t b (void) { fn_t f = {c}; (void) printf ("b()\n"); return f; } fn_t c (void) { fn_t f = {a}; (void) printf ("c()\n"); return f; } int main (void) { fn_t state = {a}; for (;; (void) sleep (1)) state = state.f(); return EXIT_SUCCESS; } 