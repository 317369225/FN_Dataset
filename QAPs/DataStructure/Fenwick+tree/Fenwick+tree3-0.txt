How can I visualize 3-dimensional Binary-Indexed Tree [Fenwick Tree]?
x1 >?= 0; x2 <?= X; If I remember correctly this is deprecated syntax. Avoid using it. C++ is already overly complex as it is.       --x1; x1 >?= 0; x2 <?= X;         --y1; y1 >?= 0; y2 <?= Y;         --z1; z1 >?= 0; z2 <?= Z; First step is cleaning inputs, putting them in appropriate ranges and including the lower bound (thus those --x1;, --y1; --z1; ). Why subtraction? Because we shall subtract those area from our solution, and if we leave them as they are we shall exclude lower bound (x1, y1, y1), thus obtaining sum over <x1, x2] x <y1, y2] x <z1, z2]       return  query( x2, y2, z2 )            - query( x1, y2, z2 ) - query( x2,   y1, z2 ) - query( x2, y2, z1 )            + query( x1, y1, z2 ) + query( x1,   y2, z1 ) + query( x2, y1, z1 )            - query( x1, y1, z1 ); Yes this is generalized inclusion-exclusion. In this case you are using addition on the members in range [x1,x2] x [y1,y2] x [z1,z2]. By the way if you are looking for maximum number in that range, you wouldn't be able to use Fenwick tree since maximum operation is not invertible, but you would use segment tree for the same asymptotic complexity. 