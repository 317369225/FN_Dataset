As we start planning the next edition of Introduction to Algorithms (CLRS), what should we add and what should we remove?Please bear in mind that the 4th edition cannot be larger than the 3rd edition, and so if you suggest a topic to add, please also suggest a topic to remove. I cannot promise that we'll be able to implement all suggestions.
I'm late to this party but wanted to push back on one thing that has been commonly recommended for removal: the Fast Fourier Transform (FFT). In addition to having very wide application, the FFT is (in my relatively algorithmically naive eyes) the seminal example of exploiting a numerical problem's mathematical structure (the periodicity of the complex exponential) to improve its big-O complexity. In particular, I see it as more transparent than Strassen's celebrated algorithm for matrix multiplication, bigger in its big-O payoff, and much more commonly used as well. The more general and abstract point of view in CLRS, focusing on polynomials over a field unlike most numerical texts that jump straight into radix-aware implementation details, is appreciated. Even more importantly, there is a tendency for non-quantitative computer scientists to see quantitative algorithmic work as merely wringing out a few more percent in speed in some dusty Fortran code, and conversely for quantitative scientists to see computer science as good for nothing but websites and user interfaces. Having core numerical algorithms like the FFT in CLRS helps to disabuse practitioners of both notions. 