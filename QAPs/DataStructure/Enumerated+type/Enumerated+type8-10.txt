Software Engineering: What are good ways to avoid bugs while programming?
Encoding your data properly. String typing is the best way of introducing bugs. Programs operate on data at a semantic level, on structured objects. Raw strings encoding this information need to be converted to structure. Runtime is too late for that. 1. Strings as code, e.g. in SQL queries written by String.format(). The proper way to solve this would be to embed an interpreter (for an interactive system), or, design a DSL for the task. With a DSL, you catch errors at compile time. 2. Strings as data For convenience, and/or due to language limitations,  multi-parameter return values that should be encoded with rich types --- Tuples, Maybe, Either --- are usually passed as a string, built by smushing all the components together separated by a unique sequence like "+++". Then the caller is forced to accept an arbitrary string, which invalidates whatever little type safety the language offers to begin with. Another atrocity would be using strings and string comparisons to encode things that should properly be stored in product types or enums. The good news: (1) can be done in Blub [Beating the Averages] with a Fluent interface, and (2) can be done using objects, though it can quickly get very verbose. As an added bonus, this makes programming Blub more enjoyable! (You should really be doing proper data abstraction using a functional language with algebraic types...) Updated 18 Nov • View Upvotes