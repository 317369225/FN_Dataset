What is an enumerated type?
A bunch of names given to some constants. In time you forget about the internal values and think in terms as those names. For example, the Colour enumerated type would have names as Red, Green, Blue ... and values like 0, 1, 2, ... - no relation to the RGB representation for a suitable device! When you want those representations - let's say to combine colors - you may use a function which knows the enumerated type as its input parameter and return the implementation specific value. Specific libraries will work mostly and intuitively with those names, although it is possible to get the internal value (as for saving or ad-hoc serialization.) Other examples: units of measurements, screen resolutions, ... Sometimes enumeration values can be combined as the edges of a rectangle selected for some effects (shadows.) Those enumerations are specials (flags) and can be combined - kind of adding or orring. Example: AddShadowOn(Edge.Right + Edge.Bottom); or Edge All = Edge.Top + Edge.Bottom + Edge.Left + Edge.Right; (Note: All here is a variable of type Edge, but could be part of the definition, and then we can write Edge.All but cannot assign to it the above expression!) Flags would have internal values as 1, 2, 4, 8 and the above AddShadow function would get the value 3, while All would be 15. (I have tried to keep this as much as possible independent from a specific language!) 