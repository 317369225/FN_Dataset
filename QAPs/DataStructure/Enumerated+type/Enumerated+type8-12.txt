Software Engineering: What are good ways to avoid bugs while programming?
There is only one way, and that is to: Fully understand the consequences of every line of code that you write. Case in point, most programmers learn something when they fix a bug. Great learning process, but expensive because it costs time. But the best programmers are also great debuggers. Trial and error is an integral part of programming efficiently. The following principle applies: Make mistakes. Just don't repeat them. As the top answer here alludes, modularity and simplicity are great, but only to the extent that it helps one understand the program more easily, be it yourself, or a teammate. You can study every book on simplicity and modularity, but at the end of the day, if you don't understand the code you are writing you are screwed. There are plenty of other tools and strategies that can assist you in making your code more obvious, and easier to understand and digest. Working in pairs (extreme programming) also helps, because when ideas are shared and understood together, they are naturally simplified and made more obvious. The more eyes the better when finding errors also. But ultimately there are a few reasons why bugs will never go away. All programmers work in a language and on a platform. We use libraries and we are at the mercy of various specifications written by other people. And at the end of the day, the code you write is only a minuscule part of what will make your program or app or page run. The consequence is: Bugs just happen. When IE goes from 9 to 10, things break. When iOS goes from 6 to 7 things break. And there are already things broken, everywhere. So we could either learn everything about everything, or just deal with bugs as they emerge. And at this point, the latter saves more time. But understanding is still paramount. In fact, this is not programming specific at all. We cannot create what we do not understand. I would go as far as to say that this is one of the physical laws of intelligence. From Richard Feynman's blackboard at the time of his death: "What I cannot create I do not understand." The one below that is quite good also. "Know how to solve every problem that has been solved." And for that we have Stackexchange. Updated 30 Jul 2014 â€¢ View Upvotes