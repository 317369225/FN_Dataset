Software Engineering: What are good ways to avoid bugs while programming?
TDD + Good Design.  You must do both.  Good Design is keeping your classes and modules super small so that you are adhering strictly to SRP.   You do that in the blue phase of TDD in increments...making the design better but you the programmer must know how to make the design better, TDD doesn't tell you how.  TDD will force you to be leaner no doubt but it won't tell you how to design. Also, don't just run to use a framework like a DI framework.  You can inject stuff naturally through interfaces, and if your tests and production code are small and modular as stated above, you won't need a DI framework period, because your mocks will be stupid simple to begin with that adding a DI framework would only complicate things in fact. For you .NET programmers, don't run to Ninject or some framework.  Start with test driven and keep your code clean, modular and adhere strictly to SRP first.  Then you'll see the light and then you will realize those frameworks are just adding bloat. 