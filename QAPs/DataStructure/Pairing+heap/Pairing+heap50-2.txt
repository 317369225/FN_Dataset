What is the best way to sort an unsorted linked list?
singly or doubly linked? what's in the list? If items are relatively lightweight (say 4 bytes integers) it may be a good idea to not change the "shape" (pointers) of the list, but instead move the data between nodes of the list -- for example the quicksort algorithm always operates on a continuous fragment of the structure, so it is relatively easy to implement it. If list contains small integers you can always use counting sort which you can implement either using list's pointers to form buckets, or using the trick above: simply count and rewrite all items inside nodes. In practice I would copy it to an array and sort the array -- less random accesses and more sensible library support for that:) 