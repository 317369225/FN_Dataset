What is C++ abstract machine?
An excellent answer is already written by Sergey Zubkov. Still I would try to put my 2 cents. An abstract machine is a model or design which permit step by step execution. Modern programming languages are not designed for a specific target (like few ancient languages) butÂ  a range of targets. So language specifications are designed with a minimal hypothetical machine in mind that permits random access of contiguous blocks of memory (as opposed to stack based machine used for languages like postscript), basic arithmetic and logical operations, branching capabilities etc. This model is called abstract because it omits many details of real (hardware) machines. This minimal abstract design enables compiler writers to write compiler for a variety of targets. This abstract machine was single-threaded for older C/C++ specifications but starting with C++11 (C++11/14/17), this abstract machine allows atomic operation enabling multi-threading environment. These abstract machines provide an intermediate language stage for compilation enabling use of same front end for different targets and fills the gap between the programming syntax and low level details such as instructions/registers of real machine. 