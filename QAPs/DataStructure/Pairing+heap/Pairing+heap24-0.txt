What is the best way to sort a terabyte of array of data, when you have limited RAM (500k), and each array element has a couple of items of data, at about 1-10k each?
Sort algorithm Step 1. Sort 50 (*) elements at a time (i.e. sort elements 1-50, then 51-100, and so on). I will refer to each of these sorted segments as blocks. Step 2. Do a k-way merge of the first 50 blocks into one big block. If there are more blocks beyond the first 50, repeat this for blocks 51-100, 101-150, and so on; otherwise, we are done. Step 3. Repeat step 2. k-way merge algorithm Step 1. Pick the minimum element from each sorted block and add a pair containing the element and an index identifying which block it came from to a min heap. Step 2. Pop the heap. The element must be in its final sorted order, so we can write it to disk. Use the index to pick a block and push the next element in that block to the heap. This way, we maintain the invariant that the next popped element is the global minimum that we haven't yet checked. Step 3. Repeat step 2 until the heap is empty. * It would probably be safer to do 40 elements/blocks at a time, so we allow a little extra memory for minor things like variables that take up a bit of extra space. Updated 44w ago â€¢ View Upvotes