Why is it impossible to have a comparison sort better than O(nlogn) time?
We could potentially get "lucky" that the comparisons you ask for are actually a0 < a1, a1 < a2, etc. So leading to a best of n - 1 comparisons to prove a particular array must be ordered in a way. But the argument is more subtle, we construct an oracle who will answer the comparison queries in such a way that is worsens your life. The oracle doesn't have preconceived notion of which object is bigger, or lower. She knows about law of trichotomy, law of transitivity, and constructs answers that require you to do at least lg(n!) comparisons between the objects. (lg to indicate log to base 2) How does the oracle achieve this? Whenever two numbers are compared, consider the number possible permutations that can come as solution for each answer(How many for LESSER, and how many for GREATER). And respond with the answer that makes sure the number of permutations left to investigate is larger. We don't need oracle ever returning "EQUAL" for this mechanism to work. What is law of transitivity prevents her from answering with a choice, and answer is forced? This doesn't cause a problem, because the number of valid permutations at this stage will not even drop by 1. Hence asking that question was bad from the algorithm's point of view. Since lesser + greater  = M. Where M is the number of permutations available before that comparison. And say lesser > greater, then lesser > M / 2. So we realize after each comparison, oracle can make sure the number of permutation becomes half or more. To make sure, that only one permutation is left, one has to do k comparisons, such that [math] n! / 2^k \le 1 [/math] Which means [math] k \ge  lg(n!)  [/math]. We have not answered the question do there exist sorting algorithms that can indeed achieve this bound. Some do come very close, We know algorithms to sort 5 numbers in 7 comparisons for example. [math]5! = 120[/math]. and [math]2^7 = 128[/math]. But if you consider 13 numbers, we would think we can sort in 33 comparisons because: 13! = 6,22,70,20,800 < 8,58,99,34,592 = 2^33.  Unfortunately we can't. There is a proof that it requires at least 34 comparisons to sort. So a real strong bound on number of comparisons is not known. But we at least know [math]O(lg(n!)) = O(n lg(n))[/math] as the order. This is an asymptotically tight bound. But our hunt for exact lower bound continues. http://en.wikipedia.org/wiki/Com... 