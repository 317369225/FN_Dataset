What is the best way to sort an unsorted linked list?
In my knowledge, the simplest way to sort a linked list (SLL, SCLL, DLL, DCLL) is bubble sort. It compare the first two elements. If the first element is greater than the second, it swaps it. If not, it compares the first with the third. So on and so forth. You could just google it to know better. Let me warn you though, its time complexity is very high (takes more time ) but is easy to implement in any code (not just linked list). You also have other options like insertion sort, heap sort, merge sort, bucket sort, selection sort. I personally prefer merge sort and heap sort(depending on the number of elements). The algorithm for bubblesort: procedure bubbleSort( A : list of sortable items )   n = length(A)   repeat           swapped = false      for i = 1 to  n-1 inclusive do       /* if this pair is out of order */       if A[i-1] > A[i] then         /* swap them and remember something changed */         swap( A[i-1], A[i] )         swapped = true        end if     end for    until not swappedend procedureHope this helps :)) 