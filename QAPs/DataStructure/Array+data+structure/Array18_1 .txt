Is it faster to iterate through an array or a linked list?Theoretically speaking both would take time. But, I guess you are looking for a practical explanation/answers, so here goes: Print numbers in an array. 12 for (i = 0; i < n; i++)  cout << arr[i] << " "; The above code benefits a lot from the sequential storage of arrays elements, whenever there is a cache miss for arr[i], some elements arr[i+1], arr[i+2],..so on will be fetched in the cache too. This leads to fewer cache misses, than there would be in a non-sequential memory access. Print numbers in a linked list. 12345 node* temp = head; while (temp != NULL) {  cout << temp->value << " ";  temp = temp->next; } Whether this takes advantage of caching or not depends on the relative addresses of the nodes in the linked list. So, it is very much possible that nodes are not stored sequentially, hence there will be more cache misses than in the case of array. 