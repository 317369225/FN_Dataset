Given an array of N integers, how can you find M elements to remove so that the array will end up in sorted order?Assumption : Final sorted order is increasing order Step 1 : Find the longest increasing sequence in the given set of elements. This can be done in O(n^2) time. Suppose the number of elements are not present in the longest increasing sequence are 'k' . Now k <= m otherwise we could not get a sorted order by removing m elements because at least those elements that are not in the sequence needs to be removed . Step 2 : Remove any of the (m-k) elements from the longest increasing sequence to get a total of m elements removed. Now what we have is a sorted order of (n-m) elements. The complexity of algorithm is O(n^2) as step 1 takes O(n^2) time and step 2 takes O(m-k) time. If the final sorted order is needed as decreasing order, find the longest decreasing sequence in Step 1 instead of increasing sequence. 