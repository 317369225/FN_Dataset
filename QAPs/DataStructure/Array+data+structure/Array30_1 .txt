How do arrays relate to pointers?Arrays are not pointers (they were in the B programming language, one of C's great innovations back in the early 1970s was to make them different, however the scars of that breaking change are still showing) A pointer to an element of an array in C (and C++) has special properties that other pointers don't have: four arithmetic operations are defined on it: pointer + integer, integer + pointer, pointer - integer, and pointer - pointer (if both are in the same array) In C++, a pointer to an element of an array is a random-access iterator. There is an implicit conversion from arrays to pointers, similar to the conversion from functions to function pointers and from integers to doubles or booleans: it kicks in when the array is used in context where array type is not expected, but a pointer type is allowed. The result of that conversion is a new, nameless, pointer to the first element of the array. And perhaps confusingly, when a function is declared to take a parameter of array type by value, it is treated as a synonym for the corresponding pointer type (but if a function takes a reference to array, there are no tricks, it's an array) 