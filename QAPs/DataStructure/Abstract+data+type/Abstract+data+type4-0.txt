Is a Java class an abstract data type?
Yes. The way I was taught about abstract data types was in a pure procedural language with structs. You defined each type as a struct, and then wrote a series of procedures that would take one or more instances of it as parameter(s). The idea was those procedures, and only those procedures, had privileged access to the internals of an instance. No other procedure was supposed to read or write values from/to it. In the languages we used, this was a "gentleman's agreement" in the design of procedures. The language did not restrict what procedures could access which instances. The programmer(s) were supposed to exercise discipline. This was a design scheme to increase maintainability. The programming model used by Java uses this approach, and enforces these constraints by providing procedures (methods) privileged access to the internals of instances (so long as they are declared protected or private), and by passing the instance into each procedure implicitly (providing the reference to "this"). 