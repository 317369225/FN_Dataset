Do Application Programming Interfaces (APIs) fit into Abstract Data Type (ADT) ?
ADTs fit into APIs, APIs don't fit into ADTs. ADTs represent the model for data structures (or a class of data structures) where the data structure is represented by a set of operations that can be performed by the user on the data structure while also providing precise definition of the after-effects of the said operations on the data structures. APIs are a form of specification of software that exposes the various functionalities offered by that software. APIs differ from ADTs in at least three aspects: 1] ADTs are mathematical models whereas APIs are "real world" objects. 2] APIs are somewhat more general than the ADTs; in the sense, while ADTs are primarily defined at the data structure level, APIs may be defined at data structure or module or an entire software application level. 3] While ADTs provide strict constraints about the after-effects of the operations, APIs may simply state such constraints via documentation without guaranteeing anything about the underlying implementation. Even though APIs and ADTs do differ, ADTs can be used to design APIs for data structures, which may allow for reasonably good abstractions. 