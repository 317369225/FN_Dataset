How do you explain what an abstract data type is in Java to someone who likes Harry Potter?
You can consider an abstract data type in Java to be similar to a category that is declared, but not explicitly used. If we consider a program to be a spell book, an abstract data type could be thought of as a chapter or section in that book. One example would be to examine a "Curse" abstract class: public abstract class Curse {      abstract void cast(); } As you can see, you can't quite cast the curse named "Curse"; otherwise, you would be waving your wand around like a madman (but really to no greater effect). However, you can think of it like a guarantee in that spell book that it really is intended to be cast (as opposed to drunk, like a potion would be). All it tells you is that anything that counts as a Curse must also have a method of casting it. You have no knowledge (at this point) of how to cast it, or what casting it really does. How, then would you actually use an abstract class? Consider then, the Killing Curse "Avada Kedavra": public class Avada_Kedavra extends Curse {      void cast()      {           // insert killer code      } } Now we know that "Avada Kedavra" is a Curse, as labeled after the "extends" word. Whatever exists inside that "cast" method describes what the curse does; in this case, "Avada Kedavra" is a spell that is cast to kill. 