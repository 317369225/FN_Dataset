In C++, How do I sort the string variables stored in an array in a structure (abstract data type)?
There's actually a really nice solution to this problem, and to sorting in general. And that is using a comparison function. So what is a sorting algorithm? When we think about sorting I think we all have the tendency to think of a list of integers which need to be arranged in increasing order. But there's a more generic way to think about it. Sorting means arranging a set of objects according to a specific condition. The objects and the condition could be anything though. Now, if we want to sort using a default comparison we could use something like this, which would give us increasing order, and it would just work out of the box for built in types like int, string, etc. std::sort (myvector.begin(), myvector.end());           But how does this actually work? Well, what a sorting algorithm needs to do (be it mergesort, quicksort or whatever), given 2 objects, it needs to figure out what order they need to be in. So in the example above, it would use the built in < operator of the type of objects in myvector to decide that. So what if we wanted to sort a custom object type by some arbitrary condition that is not built in? For instance, say we had a struct with a string in it and we want to sort based on the number of 'a's in the string. So our struct would be this struct myObject { std::string s; } All we would need to do now is implement a comparison function to tell std::sort how to do this for us, given our struct. bool myCompareOp(myObject obj1, myObject obj2) {  int count1 = GetACount(obj1); int count2 = GetACount(obj2);return count1 < count2;} That's it really. Now we just call sort. std::sort (myvector.begin(), myvector.end(), myCompareOp); Easy right? As for the exact example you mentioned, you'd just make myCompareOp compare the actual strings instead of the count. You can read more about sorting and comparison operators here sort - C++ Reference http://www.cplusplus.com/forum/g... http://www.cplusplus.com/article... 