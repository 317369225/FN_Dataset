How can we verify that a binary tree is a binary search tree in linear time and constant space?
If you're given a tree, and you know that the trees rooted at the left and right children of the root are BSTs, how would you verify that the overall tree is a BST?  Once you've figured that out, and what sort of base cases you need to consider, you'll have your algorithm. The general principle at work here is that is BSTs are recursively defined data structures, so when you're dealing with a problem about one, it's almost always best to try to think of a recursive algorithm.  That doesn't always work, but it's never a bad thing to start with. 