How can we convert a binary heap to a binary search tree efficiently?
Assuming you already have a binary heap, and it's a max-heap (largest element at the root node). Take the root element and delete it. This creates a hole at the last array index. Place the largest element there. Keep doing this till you have an empty heap: [math]O(n\log{n})[/math] Now, you have a sorted array, which is a BST. The middle element of this array is the root node of the BST. Edit: Constraints were added after answer was posted, so am keeping the answer here for posterity. Updated 105w ago • View Upvotes • Asked to answer by Anonymous