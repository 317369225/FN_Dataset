Many languages support the concept of abstract data types. However, languages seem to have various levels of implementation of this concept. Why do you think these different levels or categories exist?
It isn't as though all languages were created from the same base knowledge. New languages build on past concepts, adding new ideas influenced by the language designer's sense of aesthetics. Old ideas that didn't work well are removed or at least deprecated by the inclusion of new structures (how often do you see goto-laden spaghetti code written these days? -- I hope you don't). That's how data types became objects and how object models have changed as new languages have been developed. There is no deep computer-science-based reason for this. It is merely the peripatetic way human knowledges grows through trial and error. 