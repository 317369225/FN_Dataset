What's the best way to proceed if you have 30 days to become a better competitive programmer from being a beginner?
thanks for A2A , and if you have qualified for codejam twice then i should be asking this question to you actually, because then you have more experience in competitions then i do. I use java as my main language too. but maybe some of the following may help: 1. try to improve input in java, i found one method with bufferedreader and stringbuilder , which havent failed me yet :P , i have definitely seen faster IOs , but i am not able to make them yet. 2. Learn about collections and arrays in java, there are many functions which you might not need to code if you know collections properly as they already have them. see which of them are  ordered and which are not. 3.there is also a calendar in java , not much used in competitions but still useful 4. Very important is I should say Strings in java, i have seen many coders( me ) making blunder using it. Read about it , strings are special in java and can cause performance issues too if not used properly. ------- Topics above are to be learned gradually with practice. In your 30 days , i might suggest you the following 3 plans , // try to accomplish one of them // if you know the first one then only go to the next one , other wise ignore  the later ones. PLAN 1 : explore arrays,stacks, queues,  linked list . Implement them in java.(yep too easy , because i want you to have fun too in those 30 days) But the point is even i am not very good with these topics , there is always something i get stuck at. So i just improve your implementations and try to think how to solve problems using these Data structures. PLAN 2: If you are comfortable with previous topics, try sorting and  searching(yes its very wide topic ) , but there are some basic techniques which you should know , try to research about them and try to implement them. PLAN 3: If you are good with that one too. Try exploring trees and graphs in general and try to implement basic algorithms. and try to understand the ideas behind the algos , they are very useful and apply to many problems. It is gonna take time cover graphs and trees .I dont have much knowledge about them so wont be able to direct you much. /*  String algos can also be considered but i think , you should take time to read them later  :P , you will need them very often too */ Good luck 