What is the best data structure for a 2D real-time game for drawing and collisions?
If your main concern is being able to delete (or move) game objects without having to find them in the tree first, you might employ an "intrusive doubly linked list", i.e. inherit your game objects from a doubly linked list node. Such nodes can be removed from whatever list they are in (e.g. one list per quad tree cell) without knowing which list it is. Alternatively, simply store a back-pointer to the cell they're in, that way you can find the cell without iterating the tree. Alternatively, consider a simpler structure than a quad-tree. If your game world is not too big and/or game objects won't cluster too much, then a simple grid is faster and easier to work with. You can tweak the grid resolution for best speed/memory usage trade-off. If you keep cells that don't contain any objects null, then memory usage should be reasonable, even with large grids. 