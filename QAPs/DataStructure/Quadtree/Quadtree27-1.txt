How would I go about programming these features?
My first suggestion is; you should learn Javascript (not related to your problems.) Solution 1.1 (Your database for events): You would need to create your own database. My recommendation is using MySQL, it's easy for a beginner to work on MySQL Workbench and it's free. Than you need to index your events based on both name and location (coordinates). Since you know Ruby, you can use Apache's Lucene and Solr for indexing and searching  based on event name, location name etc. Using Solr From Ruby  And for location based searching (coordinate), let's say search between 1 km. etc., you need two things. First you need a coordinate for the given town/city by your users, which you can get from Google Maps API. And second a function to calculate distance between your event's coordinate and searched coordinate. Here is the one I use written in PHP. function distance($lat1, $lng1, $lat2, $lng2, $miles = false){    $pi80 = M_PI / 180;    $lat1 *= $pi80;    $lng1 *= $pi80;    $lat2 *= $pi80;    $lng2 *= $pi80;        $r    = 6372.797; // mean radius of Earth in km    $dlat = $lat2 - $lat1;    $dlng = $lng2 - $lng1;    $a    = sin($dlat / 2) * sin($dlat / 2) + cos($lat1) * cos($lat2) * sin($dlng / 2) * sin($dlng / 2);    $c    = 2 * atan2(sqrt($a), sqrt(1 - $a));    $km   = $r * $c;    return $km * 1000;} It returns meters. You can alter it for your needs. Solution 1.2: If you don't need to store events in your database you can always use API's, like the Foursquare's mentioned in another answer. Which would give you both name based and location based searching. Solution 2 : Your answers are already given in others. But my recommendation is the same that you should use CSS. Solution PS: I have no knowledge about ShutterStock's policy. 