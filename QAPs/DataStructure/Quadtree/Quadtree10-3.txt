What is the best data structure for a 2D real-time game for drawing and collisions?
Well if you are using a quadtree you shouldn't have to search the entire thing. If object Z moved to some location (x,y) you should be able to filter down to the quadrant that contains those coordinates and thus only have to check collision between Z and objects within that quadrant. The leaf nodes can then contain lists of which objects are in those areas. So your quadtree remains the same but the lists of objects occupying the smallest quadrants change based on movement etc. You can also let parent nodes contain lists of all objects in child quadrants but you may end up having to update parent, grandparent etc of a child depending on the move an object made. Not sure if I answered your question and my answer may not be suited to your needs depending on how complex your game is. This however is the simplest, quickest solution I could think of. You can also check this out Video Game Physics Tutorial - Part II: Collision Detection for Solid Objects. Nothing too advanced but he explains collision detection pretty well and links to all sorts of resources. 