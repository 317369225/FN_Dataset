Can we say "C++ is super set of C"?
You can say that C++ is superset of C. It will be most of the time correct. However correct answer is C and C++ are two different languages. Consider this code: char *s = malloc(100); This is correct C code, but in C++ this code is invalid. This is because malloc() return "void *". In C you can cast void * to any other pointer type. In C++ you can not. You should cast: char *s = (char *) malloc(100); Another example this can be compiled with C, but can not work at all in C++: struct bla{   int size;   char something[];}; Another example is NULL value. in C++ NULL value is just "0". This makes lots of problems there, this is why in C++11 a "nullptr" were introduced. in C, NULL is "(void *) 0". Because of this you can do something like this: int   a = NULL; // error/warning is reported in C, no error in C++char *s = NULL; // works in both C and C++,                // but it have different meaning.if (s == NULL){ // same, works in both C and C++}if (a == NULL){ // error/warning is reported in C, no error in C++ } Final word - once I have code in C++ and I needed to rewrite it in Java. Code was very long, but it does not have any too complicated things. I removed "#include", fixed "public / private". Added "package xxx;" on the top. In less 10 minutes transition was done, but nobody ever say Java is subset of C++. 