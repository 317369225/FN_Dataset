How is sizeof() an operator but not a function? Can you give source code for it?
sizeof is an operator (and not a function as opposed to popular belief) that is defined in the internal implementation of C++ itself. sizeof works with expressions and type names. For example: sizeof variable is a valid statement, usage of parentheses isn't necessary with expressions. sizeof(int) is a valid statement, but that doesn't mean its a function call, just because there happen to be parentheses. [ Parentheses are required as a part of the syntax for type names because if we don't use parentheses with type names then it might lead to ambiguous statements. Example: sizeof int * - 1Â  might mean sizeof(int) * (-1) or sizeof(int *) - 1 , which can have different values altogether. whereas for a statement, C++ grammar interprets sizeof variable * - 1 as (sizeof variable) * (-1) Ideone.com Hence, type names require parentheses in the syntax. ] All sizeof uses in your code are replaced by constants at compile time by your compiler. 