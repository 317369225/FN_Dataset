How does a computer compute numbers greater than their registers can hold?
It does it the way it works with anything that can't fit into the registers: it uses memory. The number is stored as a data structure in memory. At any point, registers only contain either a pointer to this data structure or part of the number that's needed for an operation. It's easy to visualize how this could work for addition. The method you're familiar with for adding two large numbers goes digit-by-digit. You slice the number up into chunks and only work on two chunks at a time with an additional number for keeping track of carrying. Here's an example borrowed from Algorithmist which has a deeper explanation of this method: .                 1         1         0  1 2 3 4     1 2 3 4     1 2 3 4     1 2 3 4     1 2 3 4+ 4 5 6 8   + 4 5 6 8   + 4 5 6 8   + 4 5 6 8   + 4 5 6 8---------   ---------   ---------   ---------   ---------                    2         0 2       8 0 2     5 8 0 2 The computer can do the same thing but instead of using base-10 digits, it can break the number into chunks that fit into registers. (A lot more efficient!) The number could be stored as an array of these chunks in memory. Multiplication, especially efficient multiplication, is a bit trickier, but the same principle applies. 