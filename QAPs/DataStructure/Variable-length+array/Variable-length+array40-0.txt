What are the differences between C and C++? Which one should I learn first?
It would not be appropriate to examine all of the feature differences between C and C++ in a Quora post, but it might be useful to talk about the bigger picture. At the core of it, C (usually) translates pretty clearly to underlying machine code. It is a very context-free language. You can look at a for-loop, and definitely know what is going to happen. The cost of this is that there aren't many abstractions to the language. You have top-level functions, structs, and unions. You can pun certain types with typedef. Otherwise, at least conceptually, it is a simple language. C++ on the other hand was created to be more expressive and more abstract than C. It started out by adding classes to C, and later on, much more. It is now a large, towering language that supports many different sorts of abstractions, from classes to templates (for metaprogramming) to abstractly defined operators in the language. In C++, you need context to understand what code does. No longer can you look at a + b and know that addition is going to be addition of integers or floats. It could be overloaded to do virtually any binary operation. C++ seems to have generally been favored over C for very large software projects precisely because one is able to manage abstractions better. However, it is still plagued by things such as lack of a module system and a tight coupling with things inherited from C, such as raw pointers. 