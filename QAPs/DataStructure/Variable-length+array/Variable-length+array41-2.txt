I really, really want to learn to code. However, upon taking classes and practicing (in C), I realized that I hate the whole process of programming (debugging, constant unclear/ambiguous errors, confusing logic). What can I do to get over this?
I'm not sure you actually hate "the whole process of coding" because you only bring up part of the process; you didn't mention the creative side. Most everyone gave alternate language recommendations but the point of all of them is "use a higher level language." In former days, we didn't typically start with such low level languages as C.   Dennis Levy mentioned BASIC, which used to be the go to beginner's programming language ("goto" pun intended).  BASIC even meant "Beginner's All-purpose Symbolic Instruction Code." As you can see by the many different recommendations, we don't really have a single "beginner's" language any more.  Kind of too bad in a sense.  BASIC was not a great language at all but a very simple starting point.  It was the first one I learned.  C was the fifth language I learned. C initially interested me a lot, then I got bogged down in frustration because it was the first language where you really couldn't get by without using pointers and managing your own memory.  The problem was something would fail because I'd missed some arcane little symbol (like a &) and the code had compiled correctly anyway.  I should note I had to learn C on my own because none of the schools in my area taught C. What I did was to switch to Pascal for a little while (2 months maybe?) to get the basics of a block structured language down without these difficulties.  Pascal is a cousin of C, with Algol being a common ancestor.  Pascal, like BASIC, was more of a "beginner's" language intended for education.  So string handling was natural and not nearly as odd as it seemed in C.   Anyway, once I learned the basics in a simpler language, I was able to approach C from the perspective of "differences from Pascal" vs. an entirely new way of doing things, and that made it easier.  If you wanted to try that, FreePascal or Lazarus (GUI FreePascal) is a good way.  FreePascal/Lazarus has good debuggers, too. Now, my goal was to actually learn C because I thought it was "big" (and it was, ultimately I worked in C/C++ for around 11 years).  If your goal is not necessarily C, but generally learning how to program regardless of the language, I agree particularly with the Python recommendation, except there's no compilation step so your errors get reported at runtime, and that can be pretty annoying in its own right.  Still, Python has a REPL (read-eval-print loop, or "interpreter") where you can try things outside of a program and I think that's an invaluable learning aid. 