Why don't C/C++ compilers automatically reduce the padding bytes in structs by reordering their members?
C++ is meant to be capable of handling system level tasks. At the system level, memory ordering is very important as hardware specification expects the very bytes and bits to be in a very exact ordering. Implicit reordering would violate this and hence not in the specification for the language. If you are doing something sophisticated enough where you care about the memory size of your structs due to padding then you are probably sophisticated enough to know to reorder your structs properly. 