Why is sizeof() implemented as an operator in C?
Mostly because the C standard says so. So why is sizeof an operator rather than a regular function? Mostly it is because the result is a constant expression. Secondly because it can't have external linkage (if it did then the result cant be constant expr) . For example, strlen is a standard C function, and sometimes it is evaluated at compile time (such as len of a literal during optimization) but it is subject to having its implementation changed at runtime. sizeof can't. Plus a function cant operate on types, only variables. 