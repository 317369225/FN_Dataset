How can I prove to my friend who says that pointers on C++ is a useless topic that he is wrong?
Your friend is speaking out of ignorance, but it is actually advised to use C++ abstractions instead of C pointers. In C++ you can use values for many or all of these tasks. Need a function abstraction? Use std::function. It's a value that's a function. std::string? It's a value, that's a string. You can see similar approaches all over C++. This makes analyzing the code vastly easier for both humans and compilers. I personally, always avoid pointers which are sometimes a pain in the ass. Use 'Smart pointers' instead of 'regular pointers' with C++. Misuse of pointers is a major source of bugs. Smart pointers prevent most situations of memory leaks by making the memory deallocation automatic. More generally, they make object destruction automatic: the object controlled by a smart pointer is automatically destroyed (finalized and then deallocated) when the last (or only) owner of the object is destroyed, for example because the owner is a local variable, and execution leaves the variable's scope. Smart pointers also eliminate dangling pointers by postponing destruction until the object is no longer in use. Updated 53w ago â€¢ View Upvotes