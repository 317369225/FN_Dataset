Why does everyone use C with C++?
C++ was created by B. Stroustrup as "C-with-classes", evolving by 2015 to a multiparadigmal language (objects, templates, lambdas,...), keeping most of the syntax and the main feature of C - being close to hardware. Nowadays most (but not all) C programs can be compiled by a C++ compiler, so it is kind of common to mention C++ compiler in context of basic C programming. There are some things that look the same but give slightly different results, most notably sizeof('a') is 1 in C++ and 4 in C. A good list of C/C++ incompatibilities between C99 and C++98 can be found in Incompatibilities Between ISO C and ISO C++ C11 and C++11 are quite different standards, created with different goals. While both standards are aiming at extending the standard library and providing new features, they are not related in any way - primarily because of C++`s multiparadigmality. Also because of that C++ standards group has to deal with much more different complications and irregularities arising while discussing new features, compared to a relatively stable state of a C standard. 