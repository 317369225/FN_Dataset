How do you allocate memory dynamically without using malloc or new?
This question could also ask, how are malloc and new implemented? Generally speaking, memory allocators use one of two system-level features: Managing the system heap via the break point and creating anonymous memory mappings. Modern implementations use both, depending on the size of the allocation. Here we use sbrk() to increase the break point by size bytes: void *p = sbrk (size);if (p == (void *) -1) {        perror("sbrk");        return -1;}/* 'p' points to 'size' bytes of newly-expanded heap */ And here we use mmap() to create a new anonymous memory mapping of size bytes. Note size must be a multiple of the system page size. For this reason, anonymous mappings are preferable for larger allocations. void *p = mmap (0,                size,                PROT_READ | PROT_WRITE,                MAP_PRIVATE | MAP_ANONYMOUS,                -1,                0);if (p == MAP_FAILED) {        perror("mmap");        return -1;}/* 'p' points to an anonymous mapping of 'size' bytes */ 