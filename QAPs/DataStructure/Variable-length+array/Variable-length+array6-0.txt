What is the time complexity of sizeof() in C programming language?
For almost all applicable types, sizeof resolution can be, and generally is, done at compile time, so runtime complexity is O(1) and compile-time complexity is also O(1) - after all, the compiler has to keep track of the types. The sole exception is variable-length arrays, introduced in C99: size_t fsize3(int n){  char b[n+3];  return sizeof b;} For these, sizeof resolution obviously has to be done at run-time, but because the runtime already knows the array size before sizeof is performed, runtime complexity is still O(1). UPDATE: In the code example you updated your question with, v[] is not a variable-length array, and in any case, its size is already known at compile time. 