Why is malloc used in this C code? What is the use of it anyway?
Malloc is used to dynamically allocate memory for your program. Dynamically means at run-time. E.g. 1 int foo(){    int x[10];} In the above code we are allocating the memory for the array at compile time. The space for x is reserved on the stack. However, the above procedure requires us to know that array size in advance, which may not be the case all the time. Once the foo() function has finished execution, the memory used by x will be freed. i.e. the array will not be preserved. You can not return the address of this array or assign the address of this array to any global variable because it's memory will be reclaimed by the system once the foo() execution is over. E.g. 2 int main(){    int *x;    int size;    scanf("%d",&size);    x = malloc(size*(sizeof(int));} In the above code we are allocating the memory for the array x at run time. We are fetching the size of array, which is stored in size variable, from the user. This way we can allocate memory of our choice size at any point in program execution. Also, the memory will not be freed until you call free(x) or the program exits in which case the system does the work of memory reclamation. This allows you to use the array even after the foo() has finished execution provided you have saved the address of this array in some integer pointer variable. Understanding the entire working of malloc will take time since it is a lengthy concept. However I hope the above explanation gives you a kick start to proceed ahead yourself. Thanks. 