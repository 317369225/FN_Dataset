What are the use cases of C's alloca() function?
alloca() does just the same thing as auto vars, except size is determined at run time. Like auto vars it is destroyed when the function returns. Space allocated with alloca() can be used by functions that you call, but it is destroyed when the function that called it returns. Compare malloc(), etc. which require that call free(). This usually means that you have to use gotos to ensure that functions always exit via clean up code. If your structure has function pointers you can not use alloca() as constructor method its destroyed on return. However, you can call it from a macro and then use the structure. You don't need a destructor as goes away when return just like auto vars. Advantages of Alloca malloc version requires goto int fn(int x){char *y=NULL;y=malloc(x);	/* do some stuff */goto fn_return;/* do some more */fn_return:	if(y) {		free(y);		y=NULL;	}	return x;} alloca version does not require goto int fn(int x){char *y;y=alloca(x);	/* do some stuff */return x;/* do some more */	return x;} 