Is learning C++ still worthwhile?
C++ is very, very powerful, just like a running chainsaw or Hydrofluoric acid are powerful. You can do some super-amazing things in C++, but there are also dozens of very subte and deep pitfalls that you can fall into, and to avoid them you have to be a near-genius who has taken several postgraduate courses in language and compiler design.   Really.  I've spent 30+ years working on the insides of compilers and C++ still has many features that puzzle me.  Either I'm getting a little bit dense or the language is waaaay too deep for even an above-average geek.    There are super-complex and pitfall-laden  rules for deducing types, auto,  variables, special member functions, override functions, rvalue references, move and forward, initializers parsed as functions, deleted functions, lvalue references, custom smart pointer deleters, initializers,  weak pointers, make functions, pimpls,  perfect forwarding which isn't,  un-universal references,  cnostrained templates,  reference collapsing,  lambda capture modes, and how they usually fail for smart pointers,  default launch policy,  ensuring threads are unjoinable in all paths,  atomic versus volatile, and more. See the wonderful book:  Amazon.com: Effective Modern C++: 42 Specific Ways to Improve Your Use of C++11 and C++14 (9781491903995): Scott Meyers: Books , , 300+ pages, which just barely skims the surface of the  features and hidden bombs in this language.   Side-splittingly funny in many spots, if you have a sardonic sense of humor.  Blood has and will be shed by the bucketfull on every page. 