What is the intuition behind randomized algorithms and randomization in general?
In many situations the intuition behind randomized Algorithm is that you move randomness from input to the algorithm. The simplest example is quicksort: as you know, it runs in O(n^2) at worst case, but in O(nlgn) on average. "On average" means here "if the input is random", which it rarely is. But what if I add random_shuffle(input) as the first instruction to my quick_sort? It now operates on a random data, even though the original input was not random. If you think for a while about it, then you might notice, that such random_shuffle does not differ much from say, picking the pivot at random. 