What are some other useful algorithmic techniques like the rolling hash?
There will be a bit of overlap in this list, but here it goes: Divide and conquer Dynamic programming/memoization Square root decomposition Mo's algorithm Greedy analysis Preprocessing Sorting Sliding window Tortoise and hare Solving and combining subproblems of size 2^x Isolating criteria into different dimensions and processing each individually Binary search Sieving (for prime numbers) Hashing Recursion Pruning Backtracking Branch and bound Trading time for space, and vice versa Starting with brute force and optimizing bottlenecks Combining data structures (e.g., using two heaps simultaneously, two stacks simultaneously, etc.) Rewriting a problem as a combination of two subproblems Mapping elements to a new set on which the problem is easily solved (e.g., reducing the domain or range) Cycle leader algorithm Solving a problem backwards (from answer to input instead of input to answer) Solving a problem from both directions, working towards the middle Relaxing constraints, solving optimally, and then reconciling Lazy evaluation Amortization Randomization Taking advantage of the fact that a constant factor of work won't affect the asymptotic complexity (e.g., building a heap of size 2k to find elements k positions out of sorted order) Solving for the complement of a problem in order to more easily solve the original problem Partitioning a range Reformulating a problem as a graph problem and using a well-known graph algorithm Brainstorming different ways of stating the same problem and using that information to solve the problem in a slightly different way than the obvious approach Pigeonhole principal Reducing to another problem Linear programming Using a hyperplane Approximation Modifying data in-place Performing an operation and its inverse over two different ranges (e.g., using reversals to swap halves of an array, subtracting prefix sums to find the sum of a range, etc.) Using modulus for problems involving divisibility, overflow, etc... Starting with a guess and iteratively improving that guess I'll add more ideas as I think of them... Updated 19 Sep â€¢ View Upvotes