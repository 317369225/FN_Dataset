Why aren't graph databases more popular?Graphs seem like a really natural way to express and query data in many domains.
Let's be honest: there is "fine print" with every db model. The RDBMS model has taken flak for difficult and/or expensive horizontal scaling plus the modern database' equivalent to the bogeyman: the JOIN. Document & key-value stores make it super easy for young, SQL-hating OO devs to save rows (oops, "documents") but are not nearly as space efficient as traditional RDBMS and can be a pain to perform even basic analysis on (No joins, no aggregates, seriously? Allow me to introduce you to my blind chauffeur...) Graph databases easily solve certain problems that have always been wonky with RDBMS, such as route optimization and social graphs. Put another way, and bear with me on this imperfect example, the only way to find someone's Kevin Bacon number in a RDBMS is through recursion or via a pre-determined depth of self joins. Graph dbs also manage tree/hierarchical style data with ease as opposed to the "pick your poison" approach of RDBMS (naive trees, nested paths, etc). I agree with others who have attributed the challenges of graph db adoption to familiarly. It's going to take the vast majority of global SQL jocks out there some time to wrap their heads around nodes and edges as opposed to primary & foreign keys. Personally graph databases interest me MUCH more than document/key-value stores. If we're heading into a post-SQL world let's at least get it right and go all the way. Graph dbs are a true paradigm shift, whereas document/key-value stores are one of those "two steps forward, two steps back" scenarios. In my view anyway. 