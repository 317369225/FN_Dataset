Why aren't graph databases more popular?Graphs seem like a really natural way to express and query data in many domains.
I would say there are a couple of reasons: * mindshare - graph databases are just entering the common toolbelt of the normla developer and making it into the mainstream. Also, the success stories and domain examples are just emerging, but they are certainly forthcoming, see e.g. neo4j-contrib/graphgist for a user-generated collection. * tools and DevoOs support - as graph databases are relatively new in data model and maturity, things like JDBC and drivers are not at the level of RDBMSes (yet), but that is changing also, see for instance the amount of Github repos with Neo4j, https://github.com/search?q=neo4... * perceived drawbacks - while everybody knows that there is no single solution to all Big Data problems, graph databases are sometimes perceived as "not scalable". That is wrong, the question needs to be more nuanced in two dimensions: How big is the data (above all how much writes are going to happen, as pure size can be easily solved with scaling up - there are users having 80% of the Facebook graphÂ  in one Neo4j instance), and how complex are the traversals (where Graph Databases wildly outperform any other database technology). * in certain areas there is FUD around licensing - in the Neo4j case easily solved by contacting Neo Technology have the shared copyright on all code and authorative answer on OSS vs commercial use cases. Just my 2c 