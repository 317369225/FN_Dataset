How do I detect a cycle in a directed graph?I got its code in C++ at GeeksforGeeks. But couldn't understand it properly. Someone please help. I am a newbie to graphs. Below is the link to code where they are checking for back edge. Detect Cycle in a Directed Graph - GeeksforGeeks.Hope someone explains it better.
A depth first traversal (DFS) of the tree can be used to detect a cycle in a directed graph. When DFS is applied over a directed and connected graph, it will yield a tree. If the tree contains a back edge, we can say that the graph has a cycle present. More explanation on back edge : Assume node 'v' in an ancestor of node 'u' in a tree. An edge (u,v) is said to be a back edge. Basically, a back edge is an edge which is from a node to itself(self loop) or to an ancestor. In this case, the three back edges(marked by 'x') denote the presence of three cycles in the given graph. More : Detect Cycle in a Directed Graph - GeeksforGeeks 