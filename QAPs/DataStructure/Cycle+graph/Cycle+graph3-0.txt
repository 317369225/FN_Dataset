What happens when there is negative cycle in the graph?consider the above graph with give algorithm , will the given dijkstra algorithm works fine?
On high level the way Dijkstra works is as follows Initialize all vertices with infinite distance. 1. Start at source. 2. Release all the outgoing edges from the current vertex (i.e. update weight of connected vertex if new distance is less than current weight) 3. Take the node with least weight. 4. Repeat step 2 & 3 till all the vertices are visited and no vertex have new updated distance. So if there is any negative cycle in graph you would never stop updating distance in vertices. This will cause a infinite loop. That's the reason why Dijkstra doesn't work if there are any negative edges in graph. Note: There is one exception to the negative edge rule. Dijkstra works perfectly fine if negative edge is connected to Source vertex. Edit: It is true that Dijkstra doesn't go in infinite loop because we never add a vertex in min heap with basic assumption that new vertex will always have more weight than the previous one. But when there are negative edge weight this assumption is voilated. Here I am including an example where Dijkstra algorithm above will give an incorrect result. Vertices will be removed in following order But Shortest path from A to C is A-> D -> B -> C which is -200. This is not given because we didn't add already removed vertex in min heap. But what if we do add that. Then the problem of infinite loop will occur in example you have given. Hence we say negative edge weight is only allowed with source because that will always be processed first and will not cause any problems of reduction of weight in case such as above. So lets take source as D. Here there is no path from D to A hence A is NA. Source for example: Negative weights using Dijkstra's Algorithm 