Given a set of strings (400 or so) what is the best way to generate a regular expression to match a substring of them all. Is there an app for this?
If you already know all the strings that you're trying to block, it probably makes more sense to just use a hash (or object in js) to store them. The time it takes to look up the key is constant and fast. So you would do something like:     var blocked = {'ISP1':1, 'ISP2':1, 'ISP3':1};     var isBlocked = function(isp) { return blocked[isp] }; A regular expression would be helpful if you were looking for some fuzziness, ie: you know parts of the ISPs, but not all of them (or it's impractical to store all of them). But to actually answer your question: first you're assuming that there is a matching substring that will be found in all 400+ strings that won't provide a false positive. I'm not sure what your data looks like, but I assume this isn't realistic. What you would probably be better off doing is creating a set of expressions to match against. Let's use some fake test data:     var ISPs = [         '111.111.111.111',         '111.111.112.112',         '111.111.113.113',         '111.111.114.114'     ]; Given that set of data (never mind how contrived it is) you would hopefully be able to produce an expression like:     var ISPs = /111\.111\.11(1|2|3|4)\.11(1|2|3|4)/; Or so you would think. Turns out that the expression above is full of false positives like `111.111.111.112`, `111.111.111.113` or `111.111.112.111` and so on. This is what makes this approach problematic. You would actually have to produce an expression like:     var ISPs = /111\.111\.11(1\.111|2\.112|3\.113|4\.114)/; Maybe provide some sample data if you're still convinced that a regex is the right fit. 