In Python how do I replace a string in text without replacing substrings?
Not sure what the use case is here, but Giacomo Sorbi's answer will only work for cases where 'is' is not the initial or final word in the string.  It also won't preserve case if 'Is' is the first word in a sentence.  Doing this with a regex should be very straightforward: import restring_list = ['this is a string','is this a string?','tell me what a string is.  Is this one?']#lowercase with word boundarylowercase = re.compile(r'\bis\b')#uppercase with word boundaryuppercase = re.compile(r'\bIs\b')converted_replace = map(lambda x: x.replace(' is ', ' je '), string_list)# run it through twice to catch both upper and lower caseconverted_regex = map(lambda x: lowercase.sub('je', x), string_list)converted_regex = map(lambda x: uppercase.sub('Je', x), converted_regex)print('Using replace: ', list(converted_replace))print('Using regex: ', list(converted_regex)) Output: Using replace:  ['this je a string', 'is this a string?', 'tell me what a string is.  Is this one?'] Using regex:  ['this je a string', 'je this a string?', 'tell me what a string je.  Je this one?'] Learning more about regexes will save you a ton of time with these types of problems and is totally worth any short term effort.  Good luck! 