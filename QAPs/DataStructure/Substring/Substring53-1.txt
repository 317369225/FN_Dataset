Given a string, what is its shortest substring, s.t. the concatenation of one or more copies of its results in the original string?
Lets build the algorithm intuition. First, We need to be clear about what the failure table contains, Given a string S and a prefix P of S with length i, F[i] is the longest prefix of P which is also a suffix of P. Lets define a grammar for generators, G = g | GG | GGG Given a string S, Either S can be broken down to 3 equal strings, Or 2 equal string, Or S is a generator. How do we connect this to the failure function? By the definition of F[i] = l If the string S has length n and n > 2 * l Which means that S = GYG, We can prove that no matter what the value of Y is, S cannot be generated by any substring of S. If n = 2 * l then S = GG, we can calculate the generator of G recursively. If n < 2 * l then we can rewrite S as XYZ and we can show that X = Y = Z So we can rewrite S = GGG and calculate the generator of G recursively. Lets consider the case of "ABABCABAB" F = [0 0 0 1 2 0 1 2 3 4] We have F[9] = 4, which falls under the first condition 9 > 2*4 So the algorithms fails and the minimal generator for the string is itself. 