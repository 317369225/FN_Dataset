What is the significance of fusion trees?
They are mostly of theoretical benefit in the sense that they show that if you have a relatively small keyspace then you can beat the "obvious" bound in terms of pairwise comparisons for storage and retrieval operations by performing several comparisons simultaneously through the sketch. They let you compute fast predecessor/successor results on sets of bounded integers without exploding space consumption. They are, however, rather non-trivial to implement in practice and mostly show up in theoretical treatments, where they often shave a (1/log log N) factor off of the asymptotics of an algorithm where an intermediate result can meet the requirements to be stuck in a fusion tree instead of a more obvious structure. e.g. Examining Computational Geometry, Van Emde Boas Trees and Hashing from the Perspective of the Fusion Tree runs through several such use cases. 