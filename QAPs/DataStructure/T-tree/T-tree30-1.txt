Let (u,v) be a minimum weight edge in a graph G. How do I show the (u,v) belongs to some minimum spanning tree of G?
I will prove this via contradiction.      Steps - Let a graph be G, and let it have V vertices and E edges. Now suppose you are able to manage a Minimum Spanning Tree T, such that the edge(u,v) is not included in T.  (edge(u,v) is the least weighted edge as per question). Now, the MST has V-1 edges and has no cycles. Now add the edge (u,v) to your MST. Now you will notice that one cycle forms in T due to the addition of edge(u,v). The cycle includes edge(u,v) and other edges which are part of T. In this cycle, select an edge  whose weight is highest , it certainly will not be edge(u,v) because edge(u,v) weighs the least. Hence you will select an edge from your earlier Minimum Spanning Tree T. Let this edge be E1. Now, remove E1 from T and add edge(u,v) . Let this tree be called T_min. What you will notice now is that when we removed one edge from the cycle , connectivity of the new tree is still maintained. Also, as there are still V-1 edges so, there are no cycles in T_min. Hence T_min is a spanning tree. We still need to prove T_min as minimum spanning tree in order to prove. Weight  ( T_min )  =  Weight( T )  - (E1 - edge(u,v)). (E1 - edge(u,v)) is a positive entity as the question has already specified edge(u,v) to be minimum. Thus Weight (T_min) < Weight (T) , hence T can not be a minimum spanning tree. T_min is the minimum spanning tree which has edge(u,v). Thus, there exists a minimum spanning tree wi least weighing edge. 