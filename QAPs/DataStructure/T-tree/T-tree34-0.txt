How does git determine the type of an object, given only its hash as file name and the object file in .git/objects folder?
It determines the type of the object by reading that file's contents. Suppose you entered the following command: $ git cat-file -t e80ad49ace82167de62e498622d70377d913c79etree$ First, Git looks for the file of that object. In this case, this file should be located at .git/objects/e8/0ad49ace82167de62e498622d70377d913c79e. Git's objects are compressed using zlib, so first it uncompresses this file. This uncompressed object is made up of two parts - the header and the actual content. The header contains the type of object (eg: tree), followed by a space, the size of the content in bytes, and a null character. The actual content follows afterwards. So, to answer your question, Git determines the type of object by finding the object, decompressing it and reading the first word in the header. Further information about the contents of an object can be found here: Git - Git Objects 