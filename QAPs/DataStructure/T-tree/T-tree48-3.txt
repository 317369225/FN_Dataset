What is constructor?
A constructor is a bit of code that allows you to create objects from a class. You call the constructor by using the keyword new, followed by the name of the class, followed by any necessary parameters. For example, if you have a Dog class, you can create new objects of this type by saying new Dog(). The syntax for a constructor is: access NameOfClass(parameters) {         initialization code    }where access is one of public, protected, "package" (default), or private; NameOfClass must be identical to the name of the class in which the constructor is defined; and the initialization code is ordinary Java declarations and statements.The term "constructor" is misleading since, as soon as you enter the constructor, the new object has actually been created for you. The job of the constructor is to ensure that the new object is in a valid state, usually by giving initial values to the instance variables of the object. So a "constructor" should really be called an "initializer." Every class has at least one constructor. There are two cases: If you do not write a constructor for a class, Java generates one for you. This generated constructor is called a default constructor. It's not visible in your code, but it's there just the same. If you could see it, it would look like this (for the class Dog):      public Dog() { } Notice that this default constructor takes no arguments and has a body that does nothing. If you do write a constructor for your class, Java does not generate a default constructor. This could be a problem if you have pre-existing code that uses the default constructor. 