How exactly is machine learning used in recommendation engines?
I'm sure a whole book could be written on exactly how all the various recommender approaches work. Here I will sketch an answer. The technique you named first are classifier / regression techniques -- supervised learning. Recommenders bear more similarity to unsupervised techniques like clustering, and yes, information retrieval. The "classic" recommender approach is based on a notion of user-user or item-item similarity, and a neighborhood of similar items. Things attached to similar users, or items similar to what you're attached to, are good recommendations. It's a simple idea, almost feels like something short of machine learning. However this is not the only way to do it, and I think the fashion these days is latent factor models. You explain user-item interactions in terms of a few latent features. This model is like a special case of a Bayesian network or hidden Markov model. This is often accomplished with a low-rank matrix factorization algorithm like the SVD or ALS, and in that regard has a lot of similarity to other techniques based on a similar model, like PCA. In these ways I think it gets closer to other recognizable machine learning concepts. 