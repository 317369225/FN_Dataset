Does PHP have any hash map implementation where search for an element takes O(1) time?
Tangentially Related PHP doesn't have an explicit hash map data structure, it instead has a single key->value data type that's called "array". So, arrays in PHP can function as either key->value stores or indexed stores, or both simultaneously. If you want to find an element in the array you can use array_search, which returns the key of that element (or index if you're using the array in an indexed fashion). array_search runs in O(n) time, though, so this is probably not what you're looking for. Answer No, there is no built-in function (that I am aware of) that can find a value in an associative array in O(1) time. You'd have to implement it yourself. You could maybe do this with two parallel arrays: $hash = array(); $values = array(); Then insertions become unset $values[$hash[$key]]; $hash[$key] = $value; $values[$value] = $key; deletions become unset $values[$hash[$key]]; unset $hash[$key]; and O(1) search for value becomes array_keys_exist($values[$value], $hash); Of course, keep in mind that any data structure you write like this will be much slower in the constant-factor sense than the native implementations like array_search. 