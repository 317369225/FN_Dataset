Parallel Computing: What is the difference between SIMD and MIMD?
So first of all, I can't think of an extant MIMD machine.  But maybe it depends on your definition. Some might say multi-threading / multi-core is MIMD.  And by strict interpretation I suppose it is.  But this goes against the spirit of SIMD / MIMD.  Because to me, x86 SIMD (SSE / AVX / etc.) and nVidia GPU are all SIMD. That is, these machines have the capability to execute the Same Instruction (or really, same operation) on Multiple pieces of Data.  An x86 SIMD instruction might be: ADDPS [memory], xmm1 This means, treat xmm1 (128 bit register) as 4 32-bit "lanes".  Treat the memory at [memory] similarly.  Then add the corresponding lanes and store them in xmm1.  Likewise, although it's less easy to see, under the covers nVidia GPU is SIMD.  An nVidia (or Intel or AMD for that matter) GPU consists of seas of "warps" (organized into blocks / grids).  But each warp is basically a 32-wide SIMD unit.  nVidia calls the lanes of a warp 'threads', but that's a misleading term because the whole warp marches down together with each thread at the same instruction pointer.  The implementation of divergence ('masking') is different, but it's still SIMD. So back to MIMD... A MIMD instruction, were one to exist, in my mind would let you program what each lane would do.  A mythical one might be: MYTHICALPS [memory], xmm1, ADD, MULT, SUBTRACT, RSQRT So now we have a (hastily designed) instruction that has operands to say what each lane does.  I am unaware of any (mass produced at least) instruction set that lets you do this. So one might ask "looks great; why don't we have MIMD instruction sets like this"?  And to me the reason is because there are not enough workloads that can satisfy all the needs of SIMD but then still would significantly benefit from a means to have each lane do its own thing.  Encryption is probably an exception.  In that sense MIMD is kind of an orphan; it isn't capable enough to encroach on much of multi-threaded turf, and it's too complicated to justify its existence over SIMD. 