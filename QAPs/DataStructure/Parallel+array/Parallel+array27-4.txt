What is the use of restrict keyword in C99?
I'll try to simplify the use and behaviour of restrict. Correct me if i'm wrong in the process of oversimplifying. situation 1: where two different pointer variable(PV) , point to a common variable(CV). without restrict: both PV points to same memory block any arith operation on PV will have an effect on the behaviour and output from other PV. In a function parameter list if an operation is done on one PV and updates the common memory bock. Down the line if second PV is used it'll not have the original(passed value from function call) but the updated one. With restrict: both PV have separate memory block even though they point to a common variable. any update/modification to CV via the first PV has no impact down the line when the second PV refers to the same CV as aliasing and optimisation of memory blocks are handled via restrict keyword. situation 2: out[3] , in1[3], in2[3] where out overlaps with inp1 and inp2 memory: 0001  |0002   |0003  |0004   |0005  |0006  | dataVal: 10       | 20       | 30     | 40      | 50      |60      | inpVar : in1[0] | in1[1]  |in1[2] |in2[0] |in2[1] |in2[2] | outVar :            |out[0] |out[1] |out[2]|   if there's a function to read the array and do an arithmetic operation on in1 and in2 and update the result in out then   out[] = in1[] + in2[] without restrict  : out[] = {50, 100, 160  } \\ 10+ 40 -- 50                                         \\ 50+50--100                                          \\100+60--160 with restrict keyword: As there is aliasing for the memory block by two different variables 0002 => in1[1] and out[0] 0003 => in1[2] and out[1] 0004 => in2[0] and out[2] compiler optimises the out[] as it has a qualifier restrict and allocates different memory block with same copy of data memory : 0007|0008   |0009  | dataVal: 20      | 30      | 40      | out[]    |out[0] |out[1] |out[2]| after the math operation out[] = {50, 70,  90} In a case of multiple aliasing there will only be One Read operation than the 'n' number of reads by their aliases. To your last question on how in C++. I seriously don't no, why it is no more a keyword but the compilers i use have restrict keyword in them. MS VC++ compiler has __restrict IBM AIX compiler also has __restrict__ till date in my work place i've never used this keyword. 