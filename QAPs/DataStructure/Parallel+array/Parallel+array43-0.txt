In C++, is bitset faster than an array of bools?
It depends. Bitsets (stored in memory as a continuous sequence of bytes) are only faster if bit operations can be performed in parallel on many bits at a time. For example, if you implement your own bitset in C using an array of ints (four bytes each) and perform operations on all bits simultaneously, the resulting code could be up to 32 times faster. On the other hand, if individual bits are needed, multiple operations would be needed to properly isolate a single bit at a certain index. In this case, the resulting code would be a couple times slower than a regular Boolean array. Thus, it is probably usually better to use a Boolean array unless memory use is also critical. Techniques that use Boolean arrays e.g. keeping track of visited indices, adjacency matrices, etc. usually require single index access. Even in competitive programming, problems where such a technique is useful are relatively rare. 