What are the new features that will be in Java 8?
Following is a summarized list of all the features. Follow the link at the bottom for a more comprehensive description. --/-- 126 Lambda Expressions and Virtual Extension Methods Add lambda expressions (closures) and supporting features, including method references, enhanced type inference, and virtual extension methods, to the Java programming language and platform. Owner: Brian Goetz Author: Joseph D. Darcy Discussion: lambda dash dev at openjdk dot java dot net Milestone target: M6 138 Autoconf-Based Build System Introduce autoconf (./configure-style) build setup, refactor the Makefiles to remove recursion, and leverage JEP 139: Enhance javac to Improve Build Speed. Author: Magnus Ihse Bursie Discussion: jdk8 dash dev at openjdk dot java dot net Milestone target: M6 160 Lambda-Form Representation for Method Handles Improve the implementation of method handles by replacing assembly language paths with an optimizable intermediate representation and then refactoring the implementation so that more work is done in portable Java code than is hardwired into the JVM. Author: John Rose Discussion: mlvm dash dev at openjdk dot java dot net Milestone target: M6 161 Compact Profiles Define a few subset Profiles of the Java SE Platform Specification so that applications that do not require the entire Platform can be deployed and run on small devices. Owner: Bob Vandette Author: Bob Vandette, Mark Reinhold Discussion: jdk8 dash dev at openjdk dot java dot net Milestone target: M6 162 Prepare for Modularization In light of the deferral of Project Jigsaw to a later release, undertake changes in JDK 8 that will smooth the eventual transition to modules, provide new tools to help developers prepare for the modular platform, and deprecate certain APIs that are a significant impediment to modularization. Author: Alan Bateman Discussion: jigsaw dash dev at openjdk dot java dot net Milestone target: M6 vm/-- 142 Reduce Cache Contention on Specified Fields Define a way to specify that one or more fields in an object are likely to be highly contended across processor cores so that the VM can arrange for them not to share cache lines with other fields, or other objects, that are likely to be independently accessed. Owner: Tony Printezis Author: Jesper Wilhelmsson, Tony Printezis Discussion: hotspot dash dev at openjdk dot java dot net Milestone target: M6 vm/comp 165 Compiler Control Improve control of the JVM compilers by encapsulating control into a set of options. Allow different option sets to be applied depending on which method is being compiled. Add the possibility of changing the option sets during run time. Author: Nils Eliasson Discussion: hotspot dash compiler dash dev at openjdk dot java dot net Milestone target: M6 vm/gc 122 Remove the Permanent Generation Remove the permanent generation from the Hotspot JVM and thus the need to tune the size of the permanent generation. Author: Jon Masamitsu Discussion: hotspot dash dev at openjdk dot java dot net Milestone target: M5 156 G1 GC: Reduce need for full GCs Enhance G1 so that it does not rely on full GCs to perform class unloading or any other critical operations. Author: Jesper Wilhelmsson Discussion: hotspot dash gc dash dev at openjdk dot java dot net Milestone target: M6 vm/rt 136 Enhanced Verification Errors Provide additional contextual information about bytecode-verification errors to ease diagnosis of bytecode or stackmap deficiencies in the field. Author: Keith McGuigan Discussion: hotspot dash runtime dash dev at openjdk dot java dot net Milestone target: M5 143 Improve Contended Locking Evaluate HotSpot’s support for contended locking and implement profitable solutions, based upon advance work already done by Oracle Labs. Author: Dan Daugherty Discussion: hotspot dash runtime dash dev at openjdk dot java dot net Milestone target: M6 147 Reduce Class Metadata Footprint Reduce HotSpot’s class metadata memory footprint in order to improve performance on small devices. Author: Jiangli Zhou Discussion: hotspot dash runtime dash dev at openjdk dot java dot net Milestone target: M6 148 Small VM Support the creation of a small VM that is no larger than 3MB. Author: Joe Provino Discussion: hotspot dash dev at openjdk dot java dot net Milestone target: M6 171 Fence Intrinsics Add three memory-ordering intrinsics to the sun.misc.Unsafe class. Author: Doug Lea Discussion: hotspot dash dev at openjdk dot java dot net Milestone target: M6 core/-- 153 Launch JavaFX Applications Enhance the java command-line launcher to launch JavaFX applications. Author: Kumar Srinivasan Discussion: core dash libs dash dev at openjdk dot java dot net Milestone target: M5 core/lang 101 Generalized Target-Type Inference Smoothly expand the scope of method type-inference to support (i) inference in method context and (ii) inference in chained calls. Author: Maurizio Cimadamore Discussion: lambda dash dev at openjdk dot java dot net Milestone target: M6 104 Annotations on Java Types Extend the set of annotatable locations in the syntax of the Java programming language to include names which indicate the use of a type as well (per Java SE 5.0) the declaration of a type. Author: Michael Ernst, Alex Buckley Discussion: type dash annotations dash dev at openjdk dot java dot net Milestone target: M6 105 DocTree API Extend the Compiler Tree API to provide structured access to the content of javadoc comments. Author: Jonathan Gibbons Discussion: compiler dash dev at openjdk dot java dot net Milestone target: M5 106 Add Javadoc to javax.tools Extend the javax.tools API to provide access to javadoc. Author: Jonathan Gibbons Discussion: compiler dash dev at openjdk dot java dot net Milestone target: M5 117 Remove the Annotation-Processing Tool (apt) Remove the apt tool, associated API, and documentation from the JDK. Author: Joseph D. Darcy Discussion: compiler dash dev at openjdk dot java dot net Milestone target: M1 118 Access to Parameter Names at Runtime Provide a mechanism to easily and reliably retrieve the parameter names of methods and constructors at runtime via core reflection. Author: Joseph D. Darcy Discussion: compiler dash dev at openjdk dot java dot net Milestone target: M6 120 Repeating Annotations Change the Java programming language to allow multiple application of annotations with the same type to a single program element. Author: Joseph D. Darcy Discussion: compiler dash dev at openjdk dot java dot net Milestone target: M6 139 Enhance javac to Improve Build Speed Reduce the time required to build the JDK and enable incremental builds by modifying the Java compiler to run on all available cores in a single persistent process, track package and class dependences between builds, automatically generate header files for native methods, and clean up class and header files that are no longer needed. Author: Magnus Ihse Bursie Discussion: compiler dash dev at openjdk dot java dot net Milestone target: M6 172 DocLint Provide a means to detect errors in Javadoc comments early in the development cycle and in a way that is easily linked back to the source code. Author: Jonathan Gibbons Discussion: javadoc dash dev at openjdk dot java dot net Milestone target: M6 core/libs 103 Parallel Array Sorting Add additional utility methods to java.util.Arrays that use the JSR 166 Fork/Join parallelism common pool to provide sorting of arrays in parallel. Owner: Chris Hegarty Author: David Holmes, Chris Hegarty Discussion: core dash libs dash dev at openjdk dot java dot net Milestone target: M6 107 Bulk Data Operations for Collections Add functionality to the Java Collections Framework for bulk operations upon data. This is commonly referenced as “filter/map/reduce for Java”. The bulk data operations include both serial (on the calling thread) and parallel (using many threads) versions of the operations. Operations upon data are generally expressed as lambda functions. Author: Mike Duigou Discussion: lambda dash dev at openjdk dot java dot net Milestone target: M6 108 Collections Enhancements from Third-Party Libraries Evolve the Java Collections Framework (JCF) API by adopting common and popular functionality from 3rd party libraries. Reduces developer reliance of current 3rd party collections libraries. Author: Mike Duigou Discussion: core dash libs dash dev at openjdk dot java dot net Milestone target: M6 109 Enhance Core Libraries with Lambda This project proposes to enhance the Java core library APIs using the new Lambda language feature to improve the usability and convenience of the library. Owner: Stuart W. Marks Author: Stuart W. Marks, Mike Duigou Discussion: core dash libs dash dev at openjdk dot java dot net Milestone target: M6 112 Charset Implementation Improvements Improve the maintainability and performance of the standard and extended charset implementations. Author: Xueming Shen Discussion: core dash libs dash dev at openjdk dot java dot net Milestone target: M4 119 javax.lang.model Implementation Backed by Core Reflection Provide an implementation of the javax.lang.model.* API backed by core reflection rather than by javac. In other words, provide an alternate API to access and process the reflective information about loaded classes provided by core reflection. Author: Joseph D. Darcy Discussion: compiler dash dev at openjdk dot java dot net Milestone target: M6 135 Base64 Encoding and Decoding Define a standard API for Base64 encoding and decoding. Author: Alan Bateman Discussion: core dash libs dash dev at openjdk dot java dot net Milestone target: M6 149 Reduce Core-Library Memory Usage Reduce the dynamic memory used by core-library classes without adversely impacting performance. Owner: Roger Riggs Author: Roger Riggs, Hinkmond Wong, David Holmes Discussion: core dash libs dash dev at openjdk dot java dot net Milestone target: M6 150 JSR 310: Date and Time API Define a new date, time, and calendar API for the Java SE platform. Owner: Xueming Shen Author: Stephen Colebourne Discussion: core dash libs dash dev at openjdk dot java dot net Milestone target: M6 155 Concurrency Updates (jsr166e) Scalable updatable variables, cache-oriented enhancements to theConcurrentHashMap API, ForkJoinPool improvements, and, possibly, additional Lock and Future classes and better support for software transactional memory (STM) frameworks. Author: Doug Lea Discussion: core dash libs dash dev at openjdk dot java dot net Milestone target: M6 170 JDBC 4.2 Minor enhancements to JDBC to improve usability and portability Author: Lance Andersen Discussion: jdbc dash spec dash discuss at openjdk dot java dot net Milestone target: M6 core/i18n 127 Improve Locale Data Packaging and Adopt Unicode CLDR Data Create a tool to convert LDML (Locale Data Markup Language) files into a format usable directly by the runtime library, define a way to package the results into modules, and then use these to incorporate the de-facto standard locale data published by the Unicode Consortium’s CLDR project into the JDK. Author: Naoto Sato Discussion: i18n dash dev at openjdk dot java dot net Milestone target: M5 128 BCP 47 Locale Matching Define APIs so that applications that use BCP 47 language tags (see RFC 5646) can match them to a user’s language preferences in a way that conforms to RFC 4647. Owner: Yuka Kamiya Author: Naoto Sato Discussion: i18n dash dev at openjdk dot java dot net Milestone target: M5 133 Unicode 6.2 Extend existing platform APIs to support version 6.2 of the Unicode Standard. Author: Yuka Kamiya Discussion: i18n dash dev at openjdk dot java dot net Milestone target: M5 core/net 110 New HTTP Client We would like to define and implement a new HTTP client API to replace the legacy HttpURLConnection and which leverages the new features of NIO (non-blocking & asynchronous I/O). Author: Michael McMahon Discussion: net dash dev at openjdk dot java dot net Milestone target: M6 core/sec 113 MS-SFU Kerberos 5 Extensions Add the MS-SFU extensions to the JDK’s Kerberos 5 implementation. Author: Weijun Wang Discussion: security dash dev at openjdk dot java dot net Milestone target: M5 114 TLS Server Name Indication (SNI) Extension Add support for the TLS Server Name Indication (SNI) Extension to allow more flexible secure virtual hosting and virtual-machine infrastructure based on SSL/TLS protocols. Author: Xuelei Fan Discussion: security dash dev at openjdk dot java dot net Milestone target: M5 115 AEAD CipherSuites Support the AEAD/GCM cipher suites defined by SP-800-380D, RFC 5116, RFC 5246, RFC 5288, RFC 5289 and RFC 5430. Owner: Bradford Wetmore Author: Xuelei Fan Discussion: security dash dev at openjdk dot java dot net Milestone target: M6 121 Stronger Algorithms for Password-Based Encryption Provide stronger Password-Based-Encryption (PBE) algorithm implementations in the SunJCE provider. Owner: Vincent Ryan Author: Valerie Peng Discussion: security dash dev at openjdk dot java dot net Milestone target: M5 123 Configurable Secure Random-Number Generation Enhance the API for secure random-number generation so that it can be configured to operate within specified quality and responsiveness constraints. Author: Bradford Wetmore Discussion: security dash dev at openjdk dot java dot net Milestone target: M6 124 Enhance the Certificate Revocation-Checking API Improve the certificate revocation-checking API to support best-effort checking, single-certificate checking, and mechanism-specific options and parameters. Author: Sean Mullan Discussion: security dash dev at openjdk dot java dot net Milestone target: M3 129 NSA Suite B Cryptographic Algorithms Provide implementations of the cryptographic algorithms required by NSA Suite B. Author: Valerie Peng Discussion: security dash dev at openjdk dot java dot net Milestone target: M4 130 SHA-224 Message Digests Implement the SHA-224 message-digest algorithm and related algorithms. Author: Valerie Peng Discussion: security dash dev at openjdk dot java dot net Milestone target: M3 131 PKCS#11 Crypto Provider for 64-bit Windows Include the SunPKCS11 provider in the JDK for 64-bit Windows. Author: Valerie Peng Discussion: security dash dev at openjdk dot java dot net Milestone target: M3 140 Limited doPrivileged Enable code to assert a subset of its privileges without otherwise preventing the full access-control stack walk to check for other permissions. Author: Sean Mullan Discussion: security dash dev at openjdk dot java dot net Milestone target: M6 166 Overhaul JKS-JCEKS-PKCS12 Keystores Migrate from the current default keystore format to the standard PKCS#12 format. Enhance the keystore APIs to support logical views spanning several keystores. Introduce limited support for permission-based access to keystores. Author: Vincent Ryan Discussion: security dash dev at openjdk dot java dot net Milestone target: M6 Source: JDK 8 Features 