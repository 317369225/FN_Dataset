Is it possible to run multiple if conditions using a for loop?
Definitely.   The idea of treating code as data is central to Higher-order programming. Let's say you have a list of N conditions you want to test, and a corresponding action to take if a given condition is true.  EG if condition1 is true, do action1, and so forth for each of the condition-action pairs.  One way to do it would be to set up an array of code references / pointers to functions which return true if the condition is satisfied, and false if it does not,  and a parallel array of action functions that do the thing you want done.   We can then use a for loop to iterate through the arrays, running the pairs of tests and actions Thus you might wind up with something that looks like: condition = ( c0, c1, c2, ..., cn )action = ( a0, a1, a2, ..., an )foo = 69for i = 0 to n   if condition[i]->(foo) == true then action[i]->(foo)next i That's not pure functional programming, and there are better ways to structure the function lists, but it would be a valid - if somewhat unorthodox - approach for some problems.   It would work very well if the action functions were asynchronous and non-blocking.  The advantage of this approach is that we can load our list of condition/action pairs from an external source (a config file or a database) at run time, rather than hard-coding them in our program.   This lets us dynamically alter the behavior of our program at will without having to change a single line of code. If this is what you had in mind, I'd suggest you read more about Functional programming and Metaprogramming Updated 41w ago • View Upvotes