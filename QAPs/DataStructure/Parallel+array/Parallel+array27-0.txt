What is the use of restrict keyword in C99?
Restrict tells the compiler "I promise that this variable (pointer) is not an alias for the other restrict variable(s) of the same type in this function's parameter list, feel free to optimize based on that guarantee". It would be useful in some situations in C++, but they are far less commonplace than in C, at least in practice, and the complexity of supporting this keyword - and figuring out its applicability for references of different types, cv qualifiers, template functions with symmetrical types, derived types, etc. is a rather expensive amount of effort for the standards committee, especially because its real world benefits in production C99 code are not terribly obvious. A compiler specific pragma might accomplish the same thing on a case-by-case basis, without changing program functionality or introducing a spurious keyword into the language. In short, "restrict" is exactly the sort of one-off features that C99's committee added without really thinking about how they fit into the language as a whole, for a single-use optimization, that the C++ committee has deliberately avoided. True, C++ is far more complex than C, but C++ complexity is thought out and, for the most part, holistic in its approach, where C's added complexity in recent decades has frequently been bolted-on. 