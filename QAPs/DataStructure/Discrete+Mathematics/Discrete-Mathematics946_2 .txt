How can I define bijection between (0,1) and (0,1]?When I first read this question, I thought there would be an easy answer. And there probably is. But heck if I can come up with one. But I can come up with a not-so-easy answer. Here's my thinking: First, both the domain (0,1) and the range (0,1] are of the same order of infinity, called aleph-1. So I know that there is a bijection from (0,1) to (0,1]. (Actually there are an infinite number of bijections, but never mind). If we just define f(x) = x, that is certainly one-to-one, and it is 'almost' onto. Only the number 1 in the range has no value that maps to it. How do we get a number in the domain to map to 1? Suppose I said, let: Define f(x) = x except when x = 1/2 Define f(x) = 2x when x = 1/2 Now this two-line function does map 1/2 to 1, so we have 1 covered. Sadly, 1/2 in the range is no longer covered; no value of x that maps to 1/2 in the range. So how about this: Define f(x) = x except when x = 1/2 or x = 1/4 Define f(x) = 2x when x = 1/2 or when x = 1/4 This covers both 1/2 and 1/4 in the range but not 1/8. It seems like we can keep covering values in the range only to lose another value. And yet, we can use this idea to get our answer: Define f(x) = x except when x = (1/2)^n, for any positive int n >= 1 Define f(x) = 2x when x = (1/2)^n, for any positive int n >= 1 This two-line function is now a bijection from (0,1) to (0,1]. See how easy that was? 1.2k Views  View Upvotes  Answer requested by Angelina Atamaniuk