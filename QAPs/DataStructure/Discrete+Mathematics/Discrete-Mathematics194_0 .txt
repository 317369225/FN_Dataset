In how many ways can a person visit 3 cities, each city exactly 4 times, such that he/she starts and ends with a different city?It means that on visiting total 12 times, the very first city that he/she visits should not be same as the last city that he/she visits. Also, it is obvious that he/she cannot visit the same city consecutively.804. (or 268 times 3) I got to that number at first by doing a depth first search through possible travel plans using a computer. Then I thought the number of cities may be small enough for the task to be non-tedious when done manually. Each possible travel plan can be represented with a 12 letter word using the letters a,b,c. So one way could be "abacabacbcbc". So we are trying to find all such strings which have 4 of each letter and no double letters and first and last letters are different. Let us assume that we start in city 'a' (later we will multiply the answer by 3 to get possibility of starting anywhere). Now we can partition any string into four gaps separated by 'a'. The above string look like "a*a*a*a*****" with the gaps filled by "b", "c", "b" and "cbcbc" respectively. Each gap is filled with an alternating series of b's and c's. The gaps together will have a total of 8 letters. There are five ways to partition 8 into 4 positive integers which are: 8=1+1+1+5=1+1+2+4=1+1+3+3=1+2+2+3=2+2+2+2 8=1+1+1+5=1+1+2+4=1+1+3+3=1+2+2+3=2+2+2+2 Now the 1+1+1+5 partition has 4 possible arrangements depending on where the gap of size 5 comes. The 5-gap can be filled in 2 ways: bcbcb or cbcbc. Then the other 3 gaps can be filled in 3 ways. This gives us 23=6 23=6 total ways of filling the gaps. Therefore there is a total of 24 ways the (1, 1, 1, 5) partition of gaps can be filled. In a similar fashion one can find that the (1, 1, 2, 4) partition has 12 ways of arranging the gaps and each arrangement has 8 ways of filling those gaps with b, c. Once we get done with the other 3 ways to partitions as well, we get a total of 268 strings starting with 'a'. (Ah, answers from man and machine match! something must be right :D) Appendices: def deli(sofar, a, b, c): if len(sofar) == 12: return int(sofar[0] != sofar[-1]) count = 0 if sofar[-1] != 'a' and a < 4: count += deli(sofar+'a', a+1,b,c) if sofar[-1] != 'b' and b < 4: count += deli(sofar+'b', a,b+1,c) if sofar[-1] != 'c' and c < 4: count += deli(sofar+'c', a,b,c+1) return count  >>> deli("a", 1, 0, 0) 268 Partition: Arrangements x Gap fills = Total 1 1 1 5: 4 x 6 = 24 1 1 2 4: 12 x 8 = 96 1 1 3 3: 6 x 6 = 36 1 2 2 3: 12 x 8 = 96 2 2 2 2: 1 x 16 = 16 -------------------------------------------- Grand Total 268 206 Views  View Upvotes