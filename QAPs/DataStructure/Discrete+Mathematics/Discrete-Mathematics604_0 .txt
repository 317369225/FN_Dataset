How can I determine which binary strings belong to a specific phrase-structure grammar?Struggling with this...Say you have G = (V, T, S, P) as the phrase-structure grammar with V = {0, 1, A, B, S}, T={0, 1} and set of productions P consisting of S -> 0A, S -> 1A, A -> 0B, B -> 1A, B -> 1 What belongs to this? 10101, 11001, 0000, or 001011 ?S is the Start State of any CFG. In your case, you append a 0 or 1 as the starting alphabet, and then the CFG recurses first to state A, then alternates between A <-> B, until one may finally choose to terminate at B (or continue recursing). So, the string inherits the following structure: S  S |=w=a i (A)=a i 0(B)=(a i 01(A))∨(a i 01)=a i 010(B)=(a i 0101(A))∨(a i 0101)  w=ai(A)=ai0(B)=(ai01(A))∨(ai01)=ai010(B)=(ai0101(A))∨(ai0101) ..... , where, a i ∈{0,1}  ai∈{0,1} Therefore, 10101  10101 ∈G  ∈G You're lucky because this Grammar is non-ambiguous, as the only recursing state and terminating state is always at the end, given a sequence generated by the Production Rules. In the event that A had more than 1 Production rule, you'd have to deal with a lot more branches at every level of the Directed Recursion Graph, and possibly a node with more than 1 parent (the definition of non-ambiguous). 145 Views · Answer requested by Chris Purrone