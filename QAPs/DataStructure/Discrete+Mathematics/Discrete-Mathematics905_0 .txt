What are the uses of Discrete Mathematics?I used to think this in my first year of uni. Now that I'm graduating, I can see no end to the applications of good ol' discrete maths. I'm going to split discrete maths into several subtopics, and offer some practical applications for each: Sets Functions Series and summations Number theory Relations Proofs Logic Counting (enumeration) and probability Graph theory SetsSet theory has a rather wide range of uses. Firstly, it's how most mathematicians partition numbers (e.g. natural numbers, integers, rational numbers, real numbers, complex numbers). Secondly, we rely on sets to specify the domain, codomain, and range (or image) of a function. These two applications of sets are still within the realm of mathematics, so I'll now give a few applications in computer science. The most obvious application is the associative data structure called set. Compilers make use of set theory to ensure that exactly one identifier exists in each level of scope. Another area where set theory is really important is in databases. As I have very little experience with database development, I'll leave learning about set theory in databases as an exercise. FunctionsAs the applications of functions exist throughout all science, I'm not going into much detail here. My study of functions in discrete mathematics was a clinical study of such objects, and ultimately provided a very formal definition for both functions and inverse functions. Series and summationsAgain, series and summations are used all over the place, so I'm not inclined to spend too long here. Again, the discrete perspective is very clinical and formal Number theoryOutside of pure mathematics, number theory has at least one major application in computer science. Modular arithmetic plays a very large part in cryptography. RelationsAlthough I can see a few applications, I'm not sure how to concisely word it. I'll defer this one to the comments until I can think of something short. ProofsDiscrete maths is riddled with proofs. In fact, maths is riddled with proofs. Scrap that. All of science is built upon proof. My lecturer split proof into four main categories: mathematical proof, scientific proof, statistical inference, and legal proof. Mathematicians, computer scientists, and physicists all rely on mathematical proof for different reasons. My uni teaches students how to properly structure and write mathematical proofs in discrete maths so that other humans (whom are the intended audience for a proof) can easily follow the proof. When I was in high school, most of my proofs consisted of a bunch of variables, and you'd be hard pressed to understand what is going on. Now, my proofs are very clear, and are hopefully rather concise too. LogicAlmost all electronics and computer science exclusively depend upon logic. Discrete maths studies the formalities of logic. Counting and probability Beyond simple counting, the advent of enumeration really arose when computers were popularised. The idea of counting is concerned with things like "how many different poker hands are there in a game of Texas Hold 'Em with four players?", or "I have a row of n bath tiles, and two types of tile that will fit: how many different ways can I arrange them?". Probability is a natural extension of counting, since once you can count a whole sample space, you're able to compute events in said sample space quite easily. Graph theory There are likely to be many applications of graph theory that I can't even conceive, but one of the most apparent applications is route planning. Think about your GPS: each intersection (or possible destination) could be considered a vertex, and each road linking the vertices an edge. An alternative graph application is pathfinding used by AI in games. ----------------- This clearly isn't an exhaustive list of the applications of discrete maths, but hopefully it provides some insight into why it is relevant, and why it's advisable for computer scientists to take interest in the topic. 149 Views  View Upvotes