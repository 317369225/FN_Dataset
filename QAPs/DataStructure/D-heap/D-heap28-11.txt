What are some time-saving tips that every Linux user should know?
man command --> Make this as habit and learn how to use man whatis command  --> usually a single line description of command which command --> gives info whether the command is shell built-in, alias or actual path of command find path | grep pattern --> easier to remember syntax locate filename --> fastest search of files which are updated in database (i.e files lets say older than hour) locate -b '\filename' --> Exact filename ps, pgrep, top --> managing processes Note: alias command syntax is for tcsh (Will differ for other shells, notably bash) alias ls 'ls --color' --> Visually enhance the result alias grep 'grep --color' --> highlights the matched pattern \command --> override alias, ex: \ls alias a alias a         b1           'cd ../' a         b2           'cd ../../' a         b3           'cd ../../../' a         b4           'cd ../../../../' a         b5           'cd ../../../../../' a         vi           'gvim \!* >& /dev/null' --> Discard gibberish error message like ((gvim:7009): GLib-GObject-WARNING **: Attempt to add property GnomeProgram::sm-connect after class was initialized) chmod +x script.sh --> quickly add execute permission chmod -w -R dir --> avoids accidental deletion of important directories (-R option makes sure sub-directories are also protected) tail -q power.log timing.log > result.log → save last 10 lines of both files without filename to result.log (option -q stands for quiet) head -n -2 report.log → display all but last 2 lines of report.log (GNU/Linux specific of using negative number) man grep | grep -i 'EXIT STATUS' -A 5 → will print matched line and 5 lines after containing the words 'exit status' independent of case (man pages of commands like expr do not have EXIT STATUS as heading like grep does) grep-m 5 -i error report.log → will print maximum of 5 lines containing the word error grep -P '\d' report.log → will print all lines having atleast one number (-P options lets you use Perl regex) find | grep '.log$' | xargs rm → remove all files ending with '.log' from current directory and sub-directories sort -bn numbers.txt -o numbers.txt→ sort numbers.txt numerically and overwrite the file with sorted output bash -c 'comm -23 <(sort file1.txt) <(sort file2.txt)' →process substitution feature is not yet available in tcsh shell, so use bash -c instead sed 's/cat/dog/' -i filename --> search and replace text and save the result to same filename! (much better than having to write a script) sed'/cat/ s/animal/mammal/g' story.txt → replace animal with mammal in all lines containing cat ls -ltr | tail -1 | awk '{print $NF}' → get the most recently created or modified file name ls -l | grep '^-' | awk '{ tot += $5 ;} END { print tot }' | numfmt--to=iec-i --suffix=B → calculate the combined size of regular files in current directory and print in human readable format du -sb * | sort -n | numfmt --to=iec-i --suffix=B --> sort all files/dirs and display in human readable format (make it sort -nr if you want to see largest file/folder at top) du -sm * | sort -n --> sort all files/dirs according to MBs, output is not in human readable format, numbers are in MBs df -h → display usage statistics of all available file systems Some more useful commands --> xargs, touch, cal, date, bc, who, sort, uniq, cmp, diff, comm, pr, cut, paste, tr Learn atleast one scripting language (shell, perl, python, etc) - I prefer Perl Learn text editor Vim/Emacs/Sublime (I prefer GVim) More on Linux Linux and Commands intro Linux Introduction Linux Commands Intro Linux Commands: Handling Files and Folders Linux Commands: Working with Files and Folders Linux Commands: Text ProcessingIntro to shell and basic understanding Shell Linux: Shell Scripting If you would rather read a pdf like document without any distraction and visually appealing format, use this link http://learnbyexample.net/Linux_... Updated 1 Apr • View Upvotes