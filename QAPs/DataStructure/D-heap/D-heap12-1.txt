What are the must know things in Linux/Unix for a Java/J2EE developer?
Things that cross my mind at the moment: - never run anything as root. If you need to run at port 80, learn to setup a nginx proxy or iptables redirect rule, and keep your Java server at e.g. 8080 internal ip - check and increase the open file limits, in case the default is like 1024. Google for /etc/security.conf increase open file limit - don't set Xmx to more than the physical memory. If you start swapping, you're dead. Keep at least 1GB for the OS and the JVM extra memory needs (permgen classes for example) - learn the current init system of your unix OS so you can use it to boot and restart your app. - use a proper logging system in java, and then plug the current logging rotation system from your OS to keep the logs clean and avoid an out of disk space in some months, when you'll least expect it - check oracle's documentation on the java command line arguments. -d64 for 64 bit and -server, plus the typical Xmx and Xms. Use the G1C1 garbage collector. - if you need a stack dump of your running app, run kill -3 <pid of java> and the app will dump the stack trace of each thread, plus a minimum info of memory, into the stdout (check your logs). This is great to discover dead loops - if you need to dump the memory to find memory leaks, use jmap to dump, and jhat or other app (eclipse project has one) to browse that heap dump - check the java argument to dump the heap in case of out of memory - you can temporarily run your server in debug mode, setting the right arguments, with a minimal performance hit, and then remotely connect eclipse into it. Necessary to debug those kind of bugs that only happen on live network circumstances 