What are some time-saving tips that every Linux user should know?
Here are the some of tricks, I am just mentioning the commands you can find details about the commands in man pages :) Transferring files without ftp or scp:  nc -l -p 1234 | uncompress -c | tar xvfp -   And on the sending server run:  tar cfp - /some/dir | compress -c | nc -w 3 [destination] 1234 Password-less ssh: ssh-keygen -t dsa -C your.email@ddress # Enter a passphrase for your key. This puts the secret key in ~/.ssh/id_dsa and the public key in ~/.ssh/id_dsa.pub. Now see whether you have an ssh-agent running at present: echo $SSH_AGENT_PID #Most window managers will run it automatically if it's installed. If not, start one up: eval $(ssh-agent)  #Now, tell the agent about your key:  ssh-add  #and enter your passphrase. You'll need to do this each time you log in; if #you're using X, try adding SSH_ASKPASS=ssh-askpass ssh-add #to your .xsession file. (You may need to install ssh-askpass.) ssh-copy-id -i ~/.ssh/id_dsa.pub user@server #It is a more graceful way of doing what copying the public key to #server:~/.ssh/authorized_keys file does. #Now for each server you log into, create the directory ~/.ssh and copy the file #~/.ssh/id_dsa.pub into it as ~/.ssh/authorized_keys . If you started the ssh-#agent by hand, kill it with ssh-agent -k  #when you log out. Eliminate suid binaries: find / -perm +6000 -type f -exec ls -ld {} \; > setuid.txt & #This will create a file called setuid.txt that contains the details of all of the #matching files present on your system. To remove the s bits of any tools #that you don't use, type:                     chmod a-s program Backup your bootsector:    dd if=/dev/hda of=bootsector.img bs=512 count=1   dd if=bootsector.img of=/dev/hda Where did that drive mount?: dmesg | grep SCSI    #This will filter out recognised drive specs from the dmesg output. You'll probably turn up some text like: SCSI device sda: 125952 512-byte hdwr sectors (64 MB) Unmount busy drives: lsof +D /mnt/windows Access your programs remotely: X11Forwarding yes ssh -X 192.168.0.2 gimp Grabbing a screenshot without X: chvt 7; sleep 2; import -display :0.0 -window root sshot1.png; chvt 1; Finding the biggest files: ls -lSrh Quick file sharing trick (Share one or more files): If you want to share a file or folder from your current directory in your local network then you can quickly create a web server for this purpose. All you require is python installed on your system. Once Python is installed, this is what you have to do : $ python -m SimpleHTTPServer          The above command will start a basic HTTP web server on port 8000 of your system. You can verify it by typing following in your web browser : http://localhost:8000/ So, other users on your network can easily download required files from your web server. Last but not the least, Watching Star Wars on Linux terminal:                 $ telnet towel.blinkenlights.nl 