Data Structures: What is a list of data structures that a competitive programmer must know?
Of course the answer depends on the level of Competitive programmer you want to become. But let's say you want to become red: Basic data structures: all the data structures that are availble in C++ STL: stack, queue, deque (double-ended queue), set, map, priority_queue. For me, I usually never have to think about these data structures, they become so familiar that I usually don't have to think about them much, and can focus on thinking about the algorithm. Disjoint set, Segment tree (aka. interval tree in some countries), Fenwick tree (aka. Binary indexed tree). These data structures are quite frequently seen on Codeforces, ACM contests... String data structures: trie, a string suffix structures, e.g. Suffix Automaton or Suffix tree (for most problem you can usually use either of them).There are many more data structures that are used in contests (balanced binary search trees, Aho Corasick...) but you can discover them later when you face some problems using these data structures. 