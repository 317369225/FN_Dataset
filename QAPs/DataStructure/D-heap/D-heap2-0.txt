Sorting Algorithms: Can anyone give me the easiest code for heap sort?
This is the best code i've ever used .No need of heapify and bla bla bla functions to create P.s I dont know about Python .there might be a good implementation in it . And in c++ there are inbuilt Heap functions that take a simple function calls to get your things done But this is a Naive C code   int i,c,root,temp; for (i = 1; i < no; i++) { c = i; do { root = (c - 1) / 2; if (heap[root] < heap[c]) /* to create MAX heap array */ { temp = heap[root]; heap[root] = heap[c]; heap[c] = temp; } c = root; } while (c != 0); }   for (j = no - 1; j >= 0; j--) { temp = heap[0]; heap[0] = heap[j /* swap max element with rightmost leaf element */ heap[j] = temp; root = 0; do { c = 2 * root + 1; /* left node of root element */ if ((heap[c] < heap[c + 1]) && c < j-1) c++; if (heap[root]<heap[c] && c<j) /* again rearrange to max heap array */ { temp = heap[root]; heap[root] = heap[c]; heap[c] = temp; } root = c; } while (c < j); }   Good Luck :) Happy coding Updated 1h ago • View Upvotes • Asked to answer by Raman Rajarathinam