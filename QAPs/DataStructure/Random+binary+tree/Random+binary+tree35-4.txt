What data structure should I use to complete this task?
What you are looking for is a Binary Search tree data structure. A basic binary search tree provides insert, find and delete operations, each with a complexity of O(logN). However, in worst case it might go to O(N) and so you should prefer a Red black tree or an AVL tree that guarantees a performance of O(logN) in the worst case. If you are using C++, then you have a ready made map and set STL classes, which will do your work. Another data structure you can use is a hash table (C++ unordered_map), which does the above tasks in a constant average time, however in worst case it may perform badly (O(N)). For most "not so heavy" tasks, a red black tree performs well because logN is a fairly small number (consider taking log of earth's population). 