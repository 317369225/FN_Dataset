How do I create my own hashing function for use in a look-up table?
I don't see the benefit, since hash generation are well mastered algorithms and there is little to gain in terms of differentiation by using one's own function. But if the benefit is for learning, or avoiding using someone else's code, then it could be valid. It shouldn't be difficult to find on the internet several source codes for hash functions that can either be inspected or converted to your target language. A good hash function will distribute generated codes more or less homogeneously within a range. So even if you input is concentrated mostly on letters and/or another subrange of characters, the output will be spread evenly across the result range. It is important to avoid too many collisions in the output codes (ie, an uneven distribution) because the hash is a key; if there are too many collisions, the part of the algorithm that stores/retrieves values will usually become less efficient. One way to avoid collisions is to do some bit swapping / bit operations in your input; or multiply the input bytes by some very large prime numbers. 