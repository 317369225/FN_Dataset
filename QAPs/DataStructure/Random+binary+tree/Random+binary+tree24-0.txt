To what level or how much programming do i need to know to become a data scientist?
The problem with answering this question is that there's a large variation in what sorts of responsibilities are assigned to a data scientist.  In some roles, a data scientist is just a software developer who knows some statistics.  In others, it's a statistician who knows how to do some programming. That said, the general advice is that you need to know how to work with large data sets.  Rather than trying to figure out what the minimum is, let me go through a list of what I would consider the ideal.  The more of these you can check off, the happier you're going to be on the job market: R, SAS, or some other statistical package.  You don't want to waste your time building your own versions of standard statistical models.  SAS is infinitely better at handling large data sets than R, but R's graphics capabilities and extensibility is amazing.  MATLAB gets lumped in here sometimes as well. Python or some other scripting language.  There's a lot that's painful to do in the statistical programming languages, but is handled very nicely by Python.  The faster languages tend to have longer development cycles, so Python is a great tool for messing around.  Ruby and Perl are comparable, but Python is definitely the standard. C++, Java or some other relatively high-performance language.  Python won't always cut it speedwise, and that's when you break out the big guns.  Java is much more common than C++ from what I've seen, but the two languages are similar enough that you should be able to pick the other one up once you have one of them down. SQL and relational databases.  These don't fit every data set, but when they do, they fit nicely. NoSQL databases.  These are the alternatives to SQL.  This is a much less standardized group of software packages, so it's hard to give specific advice.  Hive is popular and fits in well with other distributed computing tools, so that might be the best one to start with. Hadoop/MapReduce.  If you don't know your way around this, you don't know big data. Standard data structures.  Anything you'd find in an "Introduction to Data Structures with Language X" book goes here.  The standard list is pretty much linked lists, queues, stacks, binary trees, heaps, hash tables and graph data structures.  Anything you know above that is a bonus. Standard algorithms.  This is a little hard to separate from the list of data structures, but I'd say most of what's in the basic chapters of CLRS is fair game.  In particular, the basic graph search algorithms are essential. The standard machine learning algorithms.  Linear regression, SVMs, nearest neighbor, neural nets, Adaboost, decision trees, logistic regression, LDA.  Techniques for feature selection are always hot. The basics of applied statistics.  Know how to design some sampling scheme that aren't just simple random sampling.  Be able to analyze some basic experiments.  Bonus points if you know how to analyze panel data with generalized linear models.Obviously no one can be an expert at all of this right out of school, but as I said above, the more of these things you can talk intelligently about, the better your job search will be. 