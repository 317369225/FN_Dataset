How do I implement a BFS and DFS on a binary tree in Java?Your code is a depth first search, since it will evaluate the entire left half of the tree before starting on the right half. Here is a possible implementation of Breadth First Search:  1 2 3 4 5 6 7 8 910 public static void bfs(TreeNode root){  Queue<TreeNode> queue = new LinkedList<TreeNode>();  queue.add(root);  while (!queue.isEmpty()) {  TreeNode node = queue.poll();  System.out.println(node.val);  if (node.left != null) queue.add(node.left);  if (node.right != null) queue.add(node.right);  } } 