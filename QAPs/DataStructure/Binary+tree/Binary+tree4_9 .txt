What is the best method for checking if a binary tree is a binary search tree?Call for max value in left subtree and min in right subtree and check if root values lies in between both,do recursively for all nodes int isBST(struct node* node) {  if (node == NULL)  return(true);   /* false if the max of the left is > than us */  if (node->left!=NULL && maxValue(node->left) > node->data)  return(false);   /* false if the min of the right is <= than us */  if (node->right!=NULL && minValue(node->right) < node->data)  return(false);   /* false if, recursively, the left or right is not a BST */  if (!isBST(node->left) || !isBST(node->right))  return(false);   /* passing all that, it's a BST */  return(true); } 