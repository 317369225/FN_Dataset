How would you use alpha-beta pruning for calculating the minmax values in a game tree? Frequently asked inAlso what do you do in case of a tie? can you show the alpha/beta value as an example in a node or two? what is the quickest general algorithm? the root node is the max level.
Because you are trying to evaluate nodes in the graph, what you search is what you get, so there is not much you can do it improve performance. If you have heuristics (hopefully admissible and consistent) , you can use Iterative deepening depth-first search to search the space in a given time limit, which is guaranteed to give you the best you can get for a fixed depth. The key idea behind alpha beta pruning is simple: if you know you have a better option already at another branch, don't waste time evaluating branches that will not improve your score. Here are a few steps (sorry if it's hard to follow without pictures): 1- Go down the tree on the left side, evaluate the leftmost leaf, adjust the beta value above it to <8, evaluate the second leaf, adjust the beta value on the node above to =-14. Adjust the alpha value on the maximizer level to >-14.  The beta value for the minimizer above that is <-14. 2- Evaluate the third+fourth node from the left.  The min node above them now has beta =-13. Which would set the max level alpha above it to =-13, and the min level above <-13.  Note that so far we are not pruning anything. 3-Now as soon as you evaluate the fifth and sixth node =15 (ties don't matter), you set the beta for the min node above to =15, which means that the max node above that is >15. Finally the minimizer above that node would know that moving right is worse than it's current option of moving left (-13). Therefore you definitely know that you do not need to evaluate the next two nodes (valued 6 and 4), because the minimizer never goes there. So by pruning, instead of evaluating all 8 nodes, you did 6 so far. You can work out the rest of the problem the same way. Here is a good introduction to alpha-beta pruning (Page on mit.edu). 