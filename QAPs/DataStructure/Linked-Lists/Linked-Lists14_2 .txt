How do I implement linked list in C/C++ using array (don't use any pointer)?functions are addFirst() // add a node in first addLast() // add nodes in last addSorted() //add node in a sorted position print() // print the listAs to those who have said "it's not dynamic", of course, you can. Even though we weren't writing papers on stone, we (those that predate computers) did learn how to do ALL advanced data structures including binary trees, B-trees, linked lists, etc. using arrays sadly in Pascal. But there are advantages to using arrays over allocated memory, the first being no need for more than one pointer. On a 64-bit system a pointer is 8-bytes. If I am storing data that has at most 10 data points an hour every our of the year I don't need more than 87,610 nodes in my data structure, so there is not need to have the dynamic allocation. If most of the years I get at least 80,000 values that's 640K in pointers alone; if the data points are 4 bytes I'm using more memory to store pointers than the data itself. I suppose to those that learned on systems with 4GB that doesn't seem like a lot but 50 programs using 640K to store references to data suddenly is 32MB and maybe that doesn't even seem like a lot of memory, but it is. The point is not ALL data is dynamic, often an upper bound is known and when doing so, using an array is smaller and faster (pointer math as opposed to indirect processing). Knowing how to use arrays and when to arrays is very important to skill for those that want to be truly versatile programmers. 6.8k Views  View Upvotes