Why do we use a circular linked list when we can achieve the same implementation just by starting from the head again when we reach the NULL node?Some problems are inherently circular in nature(for example Josephus problem, timesharing or round-robin problem, problems about circular board like Monopoly, multiplayer turn based games etc). Although you can solve these problems with normal list, but using circular linked list mitigates risk, and make more efficient solution as it is easier to visualize the data structure. Another advantage is you can traverse the whole list if you have pointer to any node. (Traversing completes once you are back to the same node) You can implement queue very efficiently with circular lists by maintaining only the rear node. From node is always rear->next. (Doubly) Circular linked list are a good base structure to implement some advanced data structure for example Fibonacci heap. 178 Views  Answer requested by 1 person