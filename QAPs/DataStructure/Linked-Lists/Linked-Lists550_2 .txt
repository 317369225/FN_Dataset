What would be the algorithm to find the middle element of the linked list without using an integer variable? Do not assume that the number of nodes is given.[code]#include<stdio.h> #include<stdlib.h>  /*Linklistnode*/ structnode { intdata; structnode*next; };  /*Functiontogetthecountsofnodeinalinkedlist*/ intgetCount(structnode*head);  /*functiontogettheintersectionpointoftwolinked listshead1andhead2wherehead1hasdmorenodesthan head2*/ int_getIntesectionNode(intd,structnode*head1,structnode*head2);  /*functiontogettheintersectionpointoftwolinked listshead1andhead2*/ intgetIntesectionNode(structnode*head1,structnode*head2) { intc1=getCount(head1); intc2=getCount(head2); intd;  if(c1>c2) { d=c1-c2; return_getIntesectionNode(d,head1,head2); } else { d=c2-c1; return_getIntesectionNode(d,head2,head1); } }  /*functiontogettheintersectionpointoftwolinked listshead1andhead2wherehead1hasdmorenodesthan head2*/ int_getIntesectionNode(intd,structnode*head1,structnode*head2) { inti; structnode*current1=head1; structnode*current2=head2;  for(i=0;i<d;i++) { if(current1==NULL) {return-1;} current1=current1->next; }  while(current1!=NULL&&current2!=NULL) { if(current1==current2) returncurrent1->data; current1=current1->next; current2=current2->next; }  return-1; }  /*Takesheadpointerofthelinkedlistand returnsthecountofnodesinthelist*/ intgetCount(structnode*head) { structnode*current=head; intcount=0;  while(current!=NULL) { count++; current=current->next; }  returncount; }  /*IGNORETHEBELOWLINESOFCODE.THESELINES AREJUSTTOQUICKLYTESTTHEABOVEFUNCTION*/ intmain() { /* Createtwolinkedlists  1st3->6->9->15->30 2nd10->15->30  15istheintersectionpoint */  structnode*newNode; structnode*head1= (structnode*)malloc(sizeof(structnode)); head1->data=10;  structnode*head2= (structnode*)malloc(sizeof(structnode)); head2->data=3;  newNode=(structnode*)malloc(sizeof(structnode)); newNode->data=6; head2->next=newNode;  newNode=(structnode*)malloc(sizeof(structnode)); newNode->data=9; head2->next->next=newNode;  newNode=(structnode*)malloc(sizeof(structnode)); newNode->data=15; head1->next=newNode; head2->next->next->next=newNode;  newNode=(structnode*)malloc(sizeof(structnode)); newNode->data=30; head1->next->next=newNode;  head1->next->next->next=NULL;  printf("\nThenodeofintersectionis%d\n", getIntesectionNode(head1,head2));  getchar(); }[/code] [code]#include<stdio.h>#include<stdlib.h>/*Linklistnode*/structnode{intdata;structnode*next;};/*Functiontogetthecountsofnodeinalinkedlist*/intgetCount(structnode*head);/*functiontogettheintersectionpointoftwolinkedlistshead1andhead2wherehead1hasdmorenodesthanhead2*/int_getIntesectionNode(intd,structnode*head1,structnode*head2);/*functiontogettheintersectionpointoftwolinkedlistshead1andhead2*/intgetIntesectionNode(structnode*head1,structnode*head2){intc1=getCount(head1);intc2=getCount(head2);intd;if(c1>c2){d=c1-c2;return_getIntesectionNode(d,head1,head2);}else{d=c2-c1;return_getIntesectionNode(d,head2,head1);}}/*functiontogettheintersectionpointoftwolinkedlistshead1andhead2wherehead1hasdmorenodesthanhead2*/int_getIntesectionNode(intd,structnode*head1,structnode*head2){inti;structnode*current1=head1;structnode*current2=head2;for(i=0;i<d;i++){if(current1==NULL){return-1;}current1=current1->next;}while(current1!=NULL&&current2!=NULL){if(current1==current2)returncurrent1->data;current1=current1->next;current2=current2->next;}return-1;}/*Takesheadpointerofthelinkedlistandreturnsthecountofnodesinthelist*/intgetCount(structnode*head){structnode*current=head;intcount=0;while(current!=NULL){count++;current=current->next;}returncount;}/*IGNORETHEBELOWLINESOFCODE.THESELINESAREJUSTTOQUICKLYTESTTHEABOVEFUNCTION*/intmain(){/*Createtwolinkedlists1st3->6->9->15->302nd10->15->3015istheintersectionpoint*/structnode*newNode;structnode*head1=(structnode*)malloc(sizeof(structnode));head1->data=10;structnode*head2=(structnode*)malloc(sizeof(structnode));head2->data=3;newNode=(structnode*)malloc(sizeof(structnode));newNode->data=6;head2->next=newNode;newNode=(structnode*)malloc(sizeof(structnode));newNode->data=9;head2->next->next=newNode;newNode=(structnode*)malloc(sizeof(structnode));newNode->data=15;head1->next=newNode;head2->next->next->next=newNode;newNode=(structnode*)malloc(sizeof(structnode));newNode->data=30;head1->next->next=newNode;head1->next->next->next=NULL;printf("\nThenodeofintersectionis%d\n",getIntesectionNode(head1,head2));getchar();}[/code] 541 Views