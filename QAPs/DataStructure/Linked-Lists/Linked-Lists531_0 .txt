What is the difference between Binary Tree and Linked Lists?A graph is a data structure with nodes and edges. A tree is an undirected, connected graph with no cycles. A tree is rooted when one of its nodes - it could be anyone, we don’t care which - is branded as the “root” and all other nodes as descendants. Every node in a rooted tree besides the root has a “parent” node. Nodes may have “children”. Nodes with no children are called “leaves”. A binary tree is a rooted tree which is such that all nodes have at most 2 children. Now, a linked list is a sequential data structure. That means that all of its nodes/elements are placed in a single straight line and order can be applied to them. We have the 1st, 2nd, 3rd and so on elements, depending on the side of the list we start counting from. A binary tree in general is not sequential and we assign visitation order to the nodes, depending on our circumstances. For example, in a binary search tree, the value of each node’s key has to be greater than or equal to all keys stored in the left subtree and less than or equal to all keys stored at the right subtree of that node (binary-search-tree property). In a heap, the value of a node is at most (or at least) the value of its parent (heap property). Lastly, don’t forget that all linked lists are binary trees, but not all binary trees are linked lists (not even close actually). What you have to remember though is that lists link items sequentially but trees don’t always do so. Have a great day 401 Views · View Upvotes