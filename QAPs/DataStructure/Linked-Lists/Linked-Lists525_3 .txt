How do I insert a node in a linked list in C++?Explain very very simply.This is a simple linked list that inserts nodes at the head. It uses unique_ptr so that a default destructor works. using namespace std; template<class T> LL { struct Node { T v; unique_ptr next; Node (T & a) : v(a), next(nullptr) {} } Node * tail; unique_ptr<Node> head; public : LL() : tail(nullptr), head(nullptr) {} void insertTail(T & v) { if (tail == nullptr) { head.reset(new Node(v)); tail = head.get(); } else { tail->next.reset(new Node(v)); tall = tail.next.get(); } } void insertHead(T & v) { unique_ptr<Node> nh(v); nh.next = move(head); head = move(nh); } void remove(ssize_t idx) { Node * h = head.get(); for (int i = 0; i < idx - 1; ++i) { if (h == nullptr) return; h = h->next.get(); } if (h == nullptr) { return; } else { if (h->next) h->next = move(h->next->next); } } bool at(T & a, size_t idx) { Node * h = head.get(); for (int i = 0; i < idx; ++i) { if (h == nullptr) return false; h = h->next.get(); } if (h == nullptr) { return false; } else { a = h->v; return true; } } } 422 Views  View Upvotes