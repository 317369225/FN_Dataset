How do I implement linked list in C/C++ using array (don't use any pointer)?functions are addFirst() // add a node in first addLast() // add nodes in last addSorted() //add node in a sorted position print() // print the listAssuming that you have "typedef'd" some data type known as Node and there is a global array of these nodes with a global "size" variable and that MAX_SIZE >> size (ie you don't have to worry about overflow) here are some routines that could do the job. void addFirst(Node n) { for (int i = size++; i > 0; --i) { globalArray[i] = globalArray[i-1]; } globalArray[0] = n; } void addLast(Node n) { globalArray[size++] = n; } void addSorted(Node n) { // works only if array is sorted int i=0, j; while(compareNodes(n, a[i]) > 0 && i < size) ++i; for (j = size++; j > i; --j) { globalArray[j] = globalArray[j-1]; } globalArray[i] = n; } void print() { for (int i=0; i< size; ++i) printNode(globalArray[i]); } I will leave it to you to write the compareNodes() and printNode() routines as well as deciding how addSorted() should deal with an unsorted list (because you previously ran addFirst() or addLast() ). 1.1k Views