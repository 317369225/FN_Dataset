What is the best algorithm to reverse the circular linked list?Thanks for A2A. Suppose you have root as a head of link list. node *temp=root; node *p=root; node *q,*r; if(p!=NULL) q=p->next; if(q!=NULL) r=q->next; do{  q->next=p;   p=q;  q=r;  r=r->next;  }while(p!=temp); Idea is we have there pointer p,q,r p is pointing to root,q is p->next, r is q->next. Now p------>q------>r; After executing q->next=p; p<---------q r; say case 1 After exexuting p=q; q=r; r=r->next;  p=q; q=r; r=r->next; prev_p<--------p q--------->r; again q->next=p; prev_p<------p<---------q r; Again we have similar case like 1. As this is circular link list repeat this until r does not reach the first element root; 1.6k Views  Answer requested by 1 person