usefulness of a link list with a cycle one particular example that i personally like and would like to share : cyclic link list can be useful when deal with non-strict functional language . one can represent cyclic list with recursive function or recursive datum structure and the latter can be more efficient performance-wise . a couple example in haskell : -lrb- 1 -rrb- the $ repeat $ function produce a infinite list consist of $ x $ s only : -lsb- x , x , x , ... -rsb- . -lrb- 2 -rrb- the $ iterate $ function return a infinite list of repeat application of $ f $ to $ x $ : -lsb- x , f x , f -lrb- f x -rrb- , ... -rsb- . the performance gain can vary <em> significantly </em> for the above example . example be take from the book `` think functionally with haskell '' -lrb- 2015 -rrb- by richard bird -lrb- p. 212 - 213 -rrb- . 