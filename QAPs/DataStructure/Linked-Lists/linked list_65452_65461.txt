number of balanced binary tree -lrb- the art of computer programming -rrb- the way i tend to interpret these parameter be to think of they as stand-in for some type of basic structure in you enumeration problem . this might sound a bit too abstract , so let s look at a -lrb- simpler -rrb- concrete example . let s consider the task of enumerate link list . the question i m interested in be , give a list of unit type -lrb- those whose only element be the unit $ \ circ $ -rrb- , how many list over unit be there such that they length be $ n $ ? now , this question be choose for a very simple purpose : it s easy to see what the answer be . if each element of you list can only be a single element $ \ circ $ , then obviously there s exactly one list of size $ n $ . now , one way to solve this be to look at the inductive definition of a list . $ $ \ textrm -lcb- list -rcb- _ -lcb- \ circ -rcb- = \ circ : : \ textrm -lcb- list -rcb- _ -lcb- \ circ -rcb- ~ \ textrm -lcb- or -rcb- ~ -lsb- -rsb- $ $ this say that a list over $ \ circ $ be either a $ \ circ $ prepended to another list , or it be a empty list . flatten out the fancy operator into tuple form , and turn the word $ \ rm or $ into a $ + $ , we have $ $ \ textrm -lcb- list -rcb- _ -lcb- \ circ -rcb- = -lrb- \ circ \* \ textrm -lcb- list -rcb- _ -lcb- \ circ -rcb- -rrb- + -lsb- -rsb- $ $ since a empty list -lsb- -rsb- can be think of as a tuple with zero $ \ circ $ s inside , let s rewrite it as $ \ circ ^ 0 = 1 $ . this then give a equation $ $ l = \ circ \* l + 1 $ $ suppose that we re work over the complex field , then this be equivalent to -lrb- assume that $ \ circ \ ne 1 $ -rrb- $ $ l = \ frac -lcb- 1 -rcb- -lcb- 1 - \ circ -rcb- = \ circ ^ 0 + \ circ ^ 1 + \ circ ^ 2 + \ circ ^ 3 + \ dot $ $ now , notice that the formal power series of $ l $ with respect to $ \ circ $ exactly specify all of the possible list over the unit $ \ circ $ . that s kind of cool , but be it just a coincidence ? to find out , we turn we attention to a related problem , that of count list over the boolean $ -lrb- \ bot , \ top -rrb- $ . once again , we start with the inductive definition $ $ \ textrm -lcb- list -rcb- _ -lcb- 2 -rcb- = -lrb- \ bot ~ \ textrm -lcb- or -rcb- ~ \ top -rrb- : : \ textrm -lcb- list -rcb- _ -lcb- 2 -rcb- ~ \ textrm -lcb- or -rcb- ~ -lsb- -rsb- $ $ do the same transformation as before , we find that $ $ l_2 -lrb- \ bot , \ top -rrb- = \ frac -lcb- 1 -rcb- -lcb- 1 - -lrb- \ bot + \ top -rrb- -rcb- = 1 + \ bot + \ top + \ bot ^ 2 + \ bot \ top + \ top \ bot + \ top ^ 2 + \ bot ^ 3 + \ bot ^ 2 \ top + \ dot $ $ interesting , it seem like for certain enumeration problem , the inductive definition we use to specify\/construct a type can be translate into this functional over the complex number . what s more , this functional s formal power series seem to generate a series of construction that be isomorphic to the object from you inductive specification . this be more or less the idea behind these generate function : they series representation `` generate '' the combinatorial structure that you be study . now , let s come back to the counting problem . so what if we know that $ \ frac -lcb- 1 -rcb- -lcb- 1 - \ top - \ bot -rcb- $ represent we combinatorial class ? how do this help we with the enumeration problem ? well , the counting problem ask for the number of list that contain a certain number . this tell we that even if $ \ top $ and $ \ bot $ be distinct , they still each contribute the same number of element -lrb- namely , 1 -rrb- to the list . we can specify this `` blindness '' with the equality $ z = \ bot = \ top $ , so that $ $ l_2 -lrb- z -rrb- = l_2 -lrb- z , z -rrb- = \ frac -lcb- 1 -rcb- -lcb- 1 - 2z -rcb- = 1 + z + z + z ^ 2 + z ^ 2 + z ^ 2 + z ^ 2 + z ^ 3 + z ^ 3 + \ dot $ $ simplify , this series yield $ $ l_2 -lrb- z -rrb- = 1 + 2z + 4z ^ 2 + 8z ^ 3 + \ dot + 2 ^ k z ^ k + \ dot $ $ since each of the list under $ z ^ 3 $ be list of length 3 , this series then tell we that there be $ 2 ^ 3 $ distinct boolean list of length 3 . herein lie the power of these generate function . by `` erase '' property that you don t care about -lrb- like the distinctness of true and false in a counting problem -rrb- , you end up with this formal series whose coefficient give the total count of a subclass of interest . therefore , the question du jour of these `` analytic '' enumeration problem be not how one interpret give $ z $ a specific value , but rather how one can show that the function be analytic\/differentiable around the origin and what its coefficient be . this gloss over a lot of the detail , but the intuition should hopefully remain . for you particular problem , we can follow the same recipe to eventually derive knuth s tower of balanced tree construction . now , a height-balanced tree be a binary tree such that the height of each child of a tree be always within one unit of any other child of a tree . this give a simple case-analysis to consider . a balanced tree of height $ h $ be a root node together with child such that they be : this then yield a inductive specification $ $ bbt_h = -lrb- bbt _ -lcb- h-1 -rcb- , \ circ , bbt _ -lcb- h-1 -rcb- -rrb- ~ \ textrm -lcb- or -rcb- ~ -lrb- bbt _ -lcb- h-2 -rcb- , \ circ , bbt _ -lcb- h-1 -rcb- -rrb- ~ \ textrm -lcb- or -rcb- ~ -lrb- bbt _ -lcb- h-1 -rcb- , \ circ , bbt _ -lcb- h-2 -rcb- -rrb- $ $ where the tuple $ -lrb- l , \ circ , r -rrb- $ denote the balanced tree root at $ \ circ $ with the left branch to $ l $ and the right branch to $ r $ . transfer to the complex field , this give $ $ b_h = \ circ b _ -lcb- h-1 -rcb- ^ 2 + \ circ b _ -lcb- h_2 -rcb- b _ -lcb- h-1 -rcb- + \ circ b _ -lcb- h-1 -rcb- b _ -lcb- h-2 -rcb- $ $ take advantage of the newly find freedom of commutativity , and reassociating , we have $ $ b_h -lrb- \ circ -rrb- = \ circ b _ -lcb- h-1 -rcb- -lrb- b _ -lcb- h-1 -rcb- + 2 b _ -lcb- h-2 -rcb- -rrb- $ $ since this be a two-step recurrence , we need to specify they initial condition . $ b_0 $ be the class of balanced tree with zero node , so we have $ b_0 -lrb- \ circ -rrb- = \ circ ^ 0 = 1 $ . $ b_1 $ be the class of balanced tree with one node , so we have $ b_1 -lrb- \ circ -rrb- = \ circ ^ 1 $ . finally , substitute $ z = \ circ $ give knuth s generate function . of course , we ve skip over one bit : we haven t show that there s some neighborhood around the origin such that $ b_k -lrb- z -rrb- $ s formal series actually converge . fortunately for we , these form of inductive construction be all generally admissible , so we need not worry about they here . finally , the last step be to characterize the coefficient of $ z ^ k $ . to be fair , the full problem be to find the coefficient of $ \ sum_h b_h -lrb- z -rrb- $ , but it suffice to just find the coefficient for some $ b_h -lrb- z -rrb- $ , since we can then sum over the rest independently . there s two general strategy we can pursue : here , i imagine that knuth s approach be probably the second approach . in particular , give two function $ a -lrb- z -rrb- = a_0 + a_1 z + a_2 z ^ 2 + \ dot $ and $ b -lrb- z -rrb- = b_0 + \ dot $ , we have $ $ a -lrb- z -rrb- \* b -lrb- z -rrb- = \ sum_n \ sum _ -lcb- k \ le n -rcb- a_k b _ -lcb- n-k -rcb- z ^ n $ $ and in particular $ $ za -lrb- z -rrb- = a_0z + a_1z ^ 2 + \ dot $ $ let $ -lsb- z ^ n -rsb- f -lrb- z -rrb- = f_n $ be the coefficient of $ z ^ n $ in $ f -lrb- z -rrb- $ , then we have \ begin -lcb- align \* -rcb- -lsb- z ^ -lcb- n +1 -rcb- -rsb- b_h -lrb- z -rrb- & = -lsb- z ^ n -rsb- -lrb- b _ -lcb- h-1 -rcb- -lrb- z -rrb- ^ 2 + 2b _ -lcb- h_1 -rcb- -lrb- z -rrb- b _ -lcb- h-2 -rcb- -lrb- z -rrb- -rrb- \ \ & = \ sum _ -lcb- k \ le n -rcb- -lrb- -lsb- z ^ k -rsb- b _ -lcb- h-1 -rcb- -lrb- z -rrb- + -lsb- z ^ k -rsb- b _ -lcb- h-2 -rcb- -lrb- z -rrb- -rrb- \ time -lsb- z ^ -lcb- n-k -rcb- -rsb- b _ -lcb- h-1 -rcb- -lrb- z -rrb- \ end -lcb- align \* -rcb- this then give a rather mundane dynamic programming algorithm to compute these coefficient . you can also probably appeal to some analytic technique to solve for asymptotic property , but that s for another time . 