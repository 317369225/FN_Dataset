What does node=node->next exactly do in a linked list?Firstly the structure should be like this (I have also renamed variables for better comprehension) struct node {  int data;  struct node *next; }; Then, Root node can be created like this node rootNode; rootNode.data = 1; rootNode.next = NULL; Now let us add one more node to the list (which currently contains only one node i.e. rootNode) node newNode; newNode.data = 2; newNode.next = NULL; //assign its address to rootNode's next rootNode.next = &newNode; Sane can be followed for added more nodes to the list (whose starting node is rootNode and which currently has two nodes List can be traversed as under node *currentNode = &rootNode; while(currentNode != NULL) {  printf("NodeData = %d"*currentNode->data);   // move to next node (which is newNode we added above)  currentNode = currentNode->next; } Following will be the output NodeData = 1 NodeData = 2 Now for your questions what does node=node->next exactly do while traversing the linked listAns: In your case node is a pointer. Say a pointer a holding address of node which is at location '100' And say a node->next is holding a address of node which is at location '102' So, node is holding address '100' While node->next is holding address '102' So node=node->next will make node hold address '102' Isn't next element pointer to pointer in node variable Ans: Next holds a pointer to a Node variable. It is a pointer to a whole Node structure and not just a variable next in a structure. 304 Views  View Upvotes  Answer requested by Kapil Sharma