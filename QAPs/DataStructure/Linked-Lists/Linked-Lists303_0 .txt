How do you print a linked list backwards using recursion with classes?Since this is a common homework problem, I will describe the shape of the solution but leave you to actually implement it. Here's the basic algorithm: * Base Case (current node is nil): Do nothing and return to caller. * Inductive step: A. Given the current node, store the "next" node. B. Recursively call this algorithm for the "next" node. C. Print the value in the current node. By printing the value after executing the recursive step, each node will only print after all its following nodes have printed. Most "reorder using recursion" algorithms work by changing the order in which you print or make recursive calls. Reversing the order of something using recursion is pretty useful on small problems. For another example, the algorithm for printing the digits of a decimal number is usually done by progressive division by 10, stripping off the lowest digit each time; however, you want to print the digits from highest-to-lowest, so you wait until after the recursive step to print the current digit. A word of gentle warning: in practice, there is a limit to how many recursive steps you can make. Deep recursion uses a lot of memory on the stack, and in many common languages, stacks are small. If you try to reverse a linked list with more than a few thousand elements, there is a high chance of stack overflow. An iterative algorithm will be more robust to large datasets. Of course, in practice, maybe you should not use a linked list at all. For many common tasks, their performance is terrible. See Number crunching: Why you should never, ever, EVER use linked-list in your code again for example. 677 Views  View Upvotes  Answer requested by Romeo Bismarck