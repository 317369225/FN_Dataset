priority queue with unique element and sublinear time merge ? keep you element in link list of bucket . bucket will have size $ o -lrb- \ lg ^ 2 n -rrb- $ when store in a list with $ n $ total element . bucket be store as balanced search tree with $ o -lrb- \ lg n -rrb- $ insert -lrb- and , since each bucket have size $ o -lrb- \ lg ^ 2 n -rrb- $ , this be actually $ o -lrb- \ lg \ lg n -rrb- $ -rrb- , $ o -lrb- 1 -rrb- $ extractmin , $ o -lrb- n + m -rrb- $ merge , $ o -lrb- \ lg n -rrb- $ split , and no duplicate . the like list should be sort by the size of the bucket , though not they key value . to maintain the bucket invariant , we need to occasionally combine or split bucket . to pay for this , we assign each priority queue a potential . this let we use the physicist s amortization . each bucket will be assign a potential of $ 0 $ if it have size within $ 1 $ of $ \ lg ^ 2 n $ and a potential of $ c \ lg ^ 2 n $ if it be size $ \ lg ^ 2 n\/d $ or $ d \ lg ^ 2 n $ -lrb- for constant $ c $ and $ d $ to be determine later -rrb- , vary bitonicly and linearly in the size of the bucket . the tricky method be merge . assume we be merge two list of size $ n $ and $ a $ , for $ a > 1 $ . we split into two case depend on whether $ a < \ lg ^ 2 n $ . if $ a < \ lg ^ 2 n $ , then we join the list by merge they like in merge sort , so that the bucket stay sort by size . since the bucket have size $ o -lrb- \ lg ^ 2 n -rrb- $ , the link list have length $ o -lrb- n \/ \ lg ^ 2 n -rrb- $ and $ o -lrb- a \/ \ lg ^ 2 a -rrb- $ , so merge they take time $ o -lrb- a \/ \ lg ^ 2 a -rrb- $ which be $ o -lrb- a -rrb- $ , and so be sublinear . it also may increase the potential . each bucket get at most $ o -lrb- \ lg ^ 2 -lrb- 1 + a -rrb- n - \ lg ^ 2 n -rrb- = o -lrb- \ lg ^ 2 -lrb- 1 + a -rrb- + \ lg n \ lg -lrb- 1 + a -rrb- -rrb- $ closer to criticality . this be $ o -lrb- \ lg n \ lg \ lg n -rrb- $ , and there be $ o -lrb- a \/ \ lg ^ 2 a -rrb- $ bucket , so the increase in potential be at most $ o -lrb- a \ lg n \ lg \ lg n \/ \ lg ^ 2 a -rrb- $ , which be $ o -lrb- a -rrb- $ and thus sublinear . finally , we traverse the head and tail of the list , splitting and join supercritical bucket until no supercritical bucket be leave . this be `` free '' , pay for by the potential we release . -lrb- to place they properly , we need to maintain a finger to the point in the list where bucket be exactly the right size . this be $ o -lrb- 1 -rrb- $ extra work on each operation . -rrb- if $ a > \ lg ^ 2 n $ , we destroy the smaller priority queue and insert its item one-by-one into the larger queue . as long as insert be $ o -lrb- \ lg ^ 2 n -rrb- $ amortized , this be sublinear . insert add a element to the smallest bucket . this increase its potential by at most $ o -lrb- 1 -rrb- $ and increase the potential of the rest of the bucket by at most $ o -lrb- \ lg ^ 2 -lrb- n +1 -rrb- - \ lg ^ 2 n -rrb- = o -lrb- \ lg n\/n -rrb- $ . since there be $ o -lrb- n \/ \ lg ^ 2 n -rrb- $ bucket , the total increase in potential be $ o -lrb- 1 \/ \ lg n -rrb- $ . if the smallest bucket be large , some splitting may be require , but this be amortize free -lrb- pay for by the potential we get back -rrb- . the total amortized cost of insert be thus the cost to insert it into a bucket , which be $ o -lrb- \ lg \ lg n -rrb- $ . extractmin traverse the bucket list and identify the bucket with minimum key . it remove the minimum key from each of these bucket , rearrange the bucket list as necessary to maintain order . the total structure size may change by $ o -lrb- n \/ \ lg ^ 2 n -rrb- $ if we remove a key from each bucket . this induce a potential change of at most $ o -lrb- \ lg n -rrb- $ in each bucket , for a total potential change of $ o -lrb- n \/ \ lg n -rrb- $ . the traversal and removal take time linear in the number of bucket , which be $ o -lrb- n -rrb- $ . note that these operation , include a extractmin that extract every copy of the minimum , be sublinear in the number of element , not the number of unique element . the number of unique element in a priority queue of size $ n $ may be as low as $ \ theta -lrb- \ lg ^ 2 n -rrb- $ . 