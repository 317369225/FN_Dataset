What is the most efficient way to randomize/shuffle a linked list?Can it be done in O(1) space and O(n) time? Or better than both O(n) space and O(n^2) time?It depends on your motivation of doing it. Do you want every permutation to appear with equal probability? If yes, than I have no idea for the moment, because the only known algorithm to me requires random access. In case your problem is more practical rather than theoretical, than I have a neat solution that seems to output acceptable results. Let's take five random elements in the list: p1, p2, p3, p4, p5 and do following N times: apply random permutation to these five element p1 = p1.next, p2 = p2.next, ..., p5 = p5.next. I believe it should work well, but have no idea about how the permutations' probabilities will be distributed :) 1.6k Views  View Upvotes