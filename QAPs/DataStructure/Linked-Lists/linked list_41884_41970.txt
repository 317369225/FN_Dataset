how to build a label flow graph for static analysis you want to build a graph where the vertex be the set of runtime location in memory . unfortunately , this isn t possible . the set of runtime location can be a unbounded set . for instance , consider code that create a link list to hold $ n $ datum item provide on the input ; the number of memory location be at least $ n $ , so if the datum item be provide on the input , there be no upper bind on the number of memory location . or , consider code like each call to <code> malloc -lrb- -rrb- </code> create a new memory location , so the number of runtime memory location be at least the number of iteration of the loop . there may be no fixed upper bind on the possible number of iteration of the loop . different static analysis technique deal with this in different way : datum flow analysis typically deal with this by ignore everything in the heap , and only try to reason about local variable . in this way , you obtain a finite graph . points-to analysis deal with this use abstraction . it build a points-to graph , where each node in the graph correspond to a potentially unbounded number of runtime memory location . at each node in the graph , we record fact that be know to be true for all of the runtime memory location that correspond to that node . for instance , we might have one node per <code> malloc -lrb- -rrb- </code> call site . in other word , we might have a single node for all runtime memory location that be allocate by any of the call to <code> malloc -lrb- -rrb- </code> on line 79 -lrb- the first call to <code> malloc -lrb- -rrb- </code> on that line , the second call to <code> malloc -lrb- -rrb- </code> on that line , etc. ; they re all merge into a single node -rrb- . you might want to spend some time read up on how datum flow analysis and points-to analysis work . more generally , i suggest you ask a new question where you tell we what you re try to achieve . presumably the graph you be talk about be only a means to a end ; what be the end goal ? presumably you want to build it only because you think it d help you with some task ; what be it you really want to learn about the program ? if you ask a new question tell we what you goal be -lrb- what you re try to infer about the program -rrb- , we might be able to suggest a appropriate static analysis technique that would be suitable for that goal . 