why do binary search take $ o -lrb- \ log n -rrb- $ time ? this be only possible in datum structure which allow random access like <strong> array and vector </strong> . so if you already know that you have to access the last car , then you can do it in <strong> o -lrb- 1 -rrb- </strong> time . datum structure like link list win t allow you to perform a binary search in <strong> o -lrb- logn -rrb- </strong> the example you have mention be similar to use binary search on a link list . so it will need <strong> o -lrb- n -rrb- </strong> time as you will need to traverse all the node to reach the last node in the worst case . so you argument that you can not reach the middle car in no time be valid in you example but not in datum structure which offer such property . 