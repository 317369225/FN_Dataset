What does node=node->next exactly do in a linked list?when you add a new node to your linked-list you do something like this: (for the first node) node = (struct list *)malloc(sizeof(struct list)) (for the next node)node->next = (struct list *)malloc(sizeof(struct list)) So at the first statement, a memory block is allocated and the pointer to it is assigned to the structure pointer node. Subsequently when you add another node at the end of the existing list (which now consists of only one node), you do the same and assign the pointer to the next node pointer. Now suppose you have a long list and you want to add a new node at the end. So, first of all you have to find the end. end usually the next pointer to the last node is a null pointer. You know the start of the list. So you need to access the next node until you find the pointer to be null. But as I can see in the question, you are re-assigning the head pointer. There is a chance of losing the reference forever. So it is better to do it using a temporary pointer instead of using head pointer itself. 180 Views  View Upvotes  Answer requested by Kapil Sharma