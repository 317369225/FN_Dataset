When is it appropriate to use a linked-list, as opposed to a different data structure in C++?For most everyday practical purposes, linked lists aren't suitable -- of all C++ sequence containers they have the worst performance for iteration and require separate allocations for every node, which ruins even what textbooks say they are good at (insertion/erasure). You use a linked list (C++ has two: std::list and std::forward_list) if you want iterators and references that aren't invalidated by most operations on the container or need the ability to splice, that is, to transfer elements from your container into another container without assigning, copying or moving anything. I've used them as supporting elements of more complex data structures, but never directly. 2.9k Views  View Upvotes