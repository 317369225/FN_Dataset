how to find middle element of link list in one pass ? create a dynamic array , where each element of the array be a pointer to each node in the list in traverse order , start from the beginning . create a integer , initialize to 1 , that keep track of how many node you have visit -lrb- which increment each time you go to a new node -rrb- . when you get to the end , you know how big the list be , and you have a order array of pointer to each node . finally , divide the size of the list by 2 -lrb- and subtract 1 for 0-based indexing -rrb- and fetch the pointer hold in that index of the array ; if the size of the list be odd , you can choose which element to return -lrb- i will still return the first one -rrb- . here be some java code which get the point across -lrb- even though the idea of a dynamic array will be a bit wonky -rrb- . i would provide c\/c + + but i be very rusty in that area . 