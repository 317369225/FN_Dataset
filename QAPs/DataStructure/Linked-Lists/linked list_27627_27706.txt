algorithm : dimension increase in 1d representation of square matrix you can use two link list . the first one hold the matrix entry and the second one point to the entry that be endpoint of row . to add a new dimension , scan the second list and insert the element of the new dimension next to the position record in the second list -lrb- update the second list on the fly -rrb- . once you reach the end of the second list , continue insert the remain element of the new dimension and at the end , record a pointer to the last element add -lrb- in the second list -rrb- . say you matrix look like : the list would like like : add a new dimension -lrb- say <code> -1 -2 -3 -4 -5 </code> -rrb- : first position be 2 , so add element -1 next to position 2 , resultant list look like : update second list : position 2 be now 3 so second list look like : move to next position -lrb- which be position 4 -rrb- and do the same . after operation , list would look like : we reach the end of list 2 so go on and add the remain element to the end of first list . first list now look like : last , record position of last element add : in a actual implementation , you would be manipulate pointer rather than integer position . this solution preserve the row major order of the entry . 