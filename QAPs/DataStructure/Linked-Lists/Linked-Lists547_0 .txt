How can you detect a loop in singly linked list? (fast and slow pointer)Detect loop in Singly Linked List. Use two pointer FastPtr & SlowPtr and initialize both to head of Linked List. Move FastPtr by two nodes & SlowPtr by one node in each iteration. If FastPtr & SlowPtr meet at some iteration, then there is a loop in linked list. If FastPtr reaches to the end of Linked List without meeting SlowPtr then there is no loop in the Linked List. public boolean DetectLoop() { Node FastPtr=head; Node SlowPtr= head; while(FastPtr!=null && FastPtr.next!=null) { FastPtr=FastPtr.next.next; SlowPtr=SlowPtr.next; if(SlowPtr==FastPtr) {return true; } return false; } 281 Views  View Upvotes