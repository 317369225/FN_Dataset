What will be the algorithm/code - deleting the last occurrence of the key which is repeating in linked list eg 6->4->1->6->1->6->6->1->2 will give 6->4->1->6->1->6->2?We need to delete only the keys which are repeated more than once. Like we do not remove 2 as its occurrence is only one time in list.Looks good question Given: 1. linked-list is single-linked-list, so we can only go forward 2. Hint from question: If the interviewer said key, then he might have given an hint, to use Associative array To do: 1. if key is repeating, we need to delete last value of same key, ex: last 6, last 1, etc. Algorithm: 1. Recursively parse the linked-list till end, i.e. till NULL 2. While parsing in #1, make an Associative array, key (ex: 6, 1, etc) & its value (count of these, number of 6s, number of 1s, etc.) 3. While Recursion in #1, retracts from end, check if the node's data is repeated (> 1 occurrence) by looking into the value in Associative array, if so, delete the node from linked-list, hint: also delete key from Associative array otherwise it will delete more than 1 value for the key. Implementing this in JavaScript will be easier than in C language. We could optimize this possibly but is not asked for now. Unless optimal solution is requested by interviewer, approach with a working solution is more important than than perfect answer. Best of luck 121 Views  View Upvotes  Answer requested by Ashish Kapil