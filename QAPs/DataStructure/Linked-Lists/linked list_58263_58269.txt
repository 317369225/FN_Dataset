my algorithm be different from clr -- be it wrong ? you be right , there be a assuption that the set be available as a unsorted array , but i think that most set representation will allow you to obtain all element in linear time . i also agree with you that you solution be straightforward , and use no funny trick . i guess they solution be to impress you that only sort and merge be need , no such complicated thing as binary search . -lrb- insert smiley here . -rrb- perhaps binary search be not yet introduce at that point ? to illustrate the point raphael make -- there be infinitely many implementation -- here be mine . i believe it be correct , and use only one sort , and a linear pass over the array . so : sort the array -lrb- from small to large -rrb- . to check whether $ y , z \ in s $ exist such that $ y + z = x $ move over the array from both side . if the sum of the two element of the array be larger than $ x $ move the larger element one down , if it be less than $ x $ move the smaller element one up . -lrb- how do this compare to you proposal ? -rrb- nevertheless i would not consider they solution as incorrect . i like to think that it be good to have several solution available . in some circumstance one implementation may outperform another . e.g. , if the set be to be give as a sort link list , you solution would be hard to implement . -lrb- and mine only work if the list be doubly link . -rrb- 