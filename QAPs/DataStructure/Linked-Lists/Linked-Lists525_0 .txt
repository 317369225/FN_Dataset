How do I insert a node in a linked list in C++?Explain very very simply.There are several types of linked lists, so I'll take the most basic singly linked list as an example. Imagine the linked list to be a sequence of houses. You start from the first house, and can only retreive the address of the next house (second house in this case) at the current house you're at. So the first links to second, second links to third and so on. There is no way to immediately jump to the third house without passing through the first and second. A node in the linked list is like the house described. It contains 1. The information you want to store. It can be a number, string etc. 2. The address of the next house. So how do you know where is the starting point? We use a pointer (let's call it "head", as it is the head of the list) to point to the first house. The following chain shows a "head", the address of which we always will have, and three nodes linked together: head -> x-> y -> z Since we know the location of "head", it is more efficient to insert the new node at the front rather than traversing all the way to the back of the linked list to insert a new node. After inserting a new node k, the final list should look like this: head-> k -> x -> y -> z. We first direct k to x, like so: k->x. The original linked list is still untouched at this point. Notice that node x actually contains the address of the next node, and so on. So we have effectively two chains now: k->x->y->z and head->x->y->z. To complete the insertion, have head point to k instead of x: head -> k. Again, since k contains the address of the next node, we effectively have the final list head-> k -> x -> y -> z. 5.1k Views  View Upvotes