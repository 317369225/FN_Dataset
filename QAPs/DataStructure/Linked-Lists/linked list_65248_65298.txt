sort a set of $ n $ element contain only $ \ log n $ unique element you create a sort array with the unique value . that array have size o -lrb- log n -rrb- . for every array element of you original element , you use binary search in o -lrb- log log n -rrb- time to find where it belong in the small area and add it to a link list of element with that value ; there may be log n insertion take -lrb- log n -rrb- ^ 2 time . you can then create the sort array in o -lrb- n -rrb- step . the biggest factor be n x log log n for the binary search . instead of a array with binary search you could use a hash table , which be faster on average but with worse worst case . you can avoid the worst case by use a generous size for the hash table , and handle any collision immediately in a array . this would <em> often </em> work in o -lrb- n -rrb- and still have o -lrb- n log log n -rrb- worst case . 