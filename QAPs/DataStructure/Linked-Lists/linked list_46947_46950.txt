how to prove if a algorithm be reentrant ? if you function doesn t write to global variable or change item on the heap , it should be re-entrant . also , look closely at the function that you function call to see if they be re-entrant . if you be modify object on the heap or global object , look closely at if those object be thread-safe . it s often easier to break the function into smaller function that be obviously re-entrant . then put lock around only the section that might not be re-entrant . this often improve performance over have one big lock for the entire function . for instance , when add a item to a global link list : create the new item , fill the new item with datum , put a lock on the list , add the item to the list , then release the lock . while you be create the item , some other thread could be use the list . 