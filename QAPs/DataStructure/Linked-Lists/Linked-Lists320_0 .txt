Given two sorted linked lists, how do you find common elements of them?A HashSet can be used in this case, and of course this should be implemented only when space is not a constraint. Let the heads of two lists be head1 and head2. Method --------- 1.Create a HashSet. 2.Add all the elements in List1 into the HashSet. 3.Now, traverse the List2 and check for common elements. 4.If an element is already present in the HashSet during traversal of second List, it means that it is the common element for both the lists. 5.Print the common element. Implementation in Java. public void commonElements(LinkedList head1, LinkedList head2) { HashSet<Integer> h = new HashSet<Integer>(); while(head1!=null) { if(!h.contains(head1.data)) { h.add(head1.data); } head1=head1.next; } while(head2!=null) { if(h.contains(head2.data)) { System.out.println(head2.data); } head2=head2.next; } } Time Complexity : O(m+n) and Space Complexity : O(m) Here, 'm' is the size of first list and 'n' is the size of second list. 128 Views  View Upvotes