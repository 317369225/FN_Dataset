How do I implement a C code to insert an element at the middle of the linked list if the size of the list is not known?So you would be provided with the data of the node after which new node has to be inserted. For example: Consider a below list 1 -> 2 -> 3 -> 4 -> 5 ..so on Now you would be told to insert the new node havind data as '93' between node [having data as] '3' and node [having data as] '4'. So we need to insert new node (93) after node '3'. Let us assume that we node object has following signature. class Node {  int data;  Node nextNode; } For this, our list looks as under Node rootNode = new Node(1); Node node2 = new Node(2); Node node3 = new Node(3); rootNode.nextNode = node2; node2.nextNode = node3; //and so on // ... lastNode.nextNode = null; Now to add a new node '93' after '3' we can use following code: Node aNode = rootNode; while(true) {  // if this is the node we r luking for  if(aNode.data == '3')  {  Node newNode = new Node(93);  // make next of new node as next of aNode, which we know is '4'  newNode.nextNode = aNode.nextNode;  // make next of aNode as newNode  aNode.nextNode = newNode;  // and we r done  break;  }   aNode = aNode.nextNode; } So, what we are doing is We are looking for a node having data as '3' since question tells us to insert new node after this node. Then we create a new node and set its next node same as next node of node having '3' then finally we set next of node having '3' as new node 129 Views  View Upvotes  Answer requested by Swati