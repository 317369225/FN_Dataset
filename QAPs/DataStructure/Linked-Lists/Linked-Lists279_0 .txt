Have any way to make each node of binary tree point to many linked list?typedef struct _slist { void *data; struct _slist *next; } slist;  typedef struct _tree { slist **lists; // List of lists struct _tree *l,*r; } tree; In the tree struct you have a linked list. This would hold the head of all of the other lists in the node. lists=head of list 1 -> node->node->node->node->node->NULL lists+1- head of list 2 -> node->node->node->node->node->NULL lists+2- head of list 3 -> node->node->node->node->node->NULL lists+3- head of list 3 -> node->node->node->node->node->NULL lists+ = NULL means there no more linked lists You could index as tree->lists[0]->data; tree->lists[0]->next->data; // unsafe But to traverse the list you would probably want to do slist *mylist; for(mylist=tree->lists[0];*mylist;mylist=mylist->next) { // Do something with mylist->data } You could traverse the list of list in the same way if you had a need to do so. dd whatever else data you might want to the tree to keep track of what's in the node or the AVL counts, etc. 229 Views  View Upvotes