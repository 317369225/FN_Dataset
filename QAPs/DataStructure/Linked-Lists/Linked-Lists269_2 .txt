How can I implement recursive insertion sort using linked list?To insert a node N into a linked list L in sorted order using recursion, you could use: insertNode (N, L) IF L = nil OR N.data <= L.data THEN N.next = L RETURN N ELSE L.next = insertNode(N, L.next) RETURN L ENDIF To make an unsorted list U into a sorted list S recursively you would use: insertSort (U, S) IF U = nil THEN RETURN S ELSE RETURN insertNode(U, insertSort(U.next, S) This would be initially called with: S = insertSort(U, nil) The use of mutual recursion like this would make the insertion sort rather slow so it is not recommended. 83 Views