How do you print a linked list backwards using recursion with classes?You can do this using recursion, of course, and I guess it is the only reasonable thing to do when you have a forward linked list but I'm not sure it's a good idea to use recursion when it's a doubly-linked list. That's because you end up storing duplicate references to each link within stack frames. Now, I'm not sure, though what you mean when you say with classes. I could write down the bare-bones algorithm in C for you, but you might need to do the necessary encapsulation stuff yourself. Let's say you define your link as follows: struct Link { int val; struct Link *next; } ; Also, assume you have the following function to print a link defined somewhere: void print_link(struct Link *link); It probably prints structure member val to standard output, but we really don't care at this point. The function print_list_reverse() would then be called with a pointer to the first member. You define this function recursively as follows: void print_list_reverse(struct Link *link) { if (link) { print_list_reverse(link->next); print_link(link); } } 181 Views  View Upvotes  Answer requested by Romeo Bismarck