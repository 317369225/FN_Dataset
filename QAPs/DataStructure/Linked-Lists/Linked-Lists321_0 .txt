How do you convert a Single Linked List to a Doubly Linked List and to a Circular Linked List in C++?Wait, you can't convert singly to doubly without playing with the data structure! In singly linked list, the core node usually contains a pointer that points to the next node, and an element. struct node { int x; struct node *next; }; In order to convert it to doubly linked list, you have to first add to the node the feature to point to previous node as well. struct node { int x; struct node *next; struct node *prev; }; After doing that, you can march from the head, and doing something like: while(node->next) // stop when you meet the null node { node->next->prev = node; // link back the current and next nodes node = node->next; // march to the next node and do the same } 513 Views  View Upvotes