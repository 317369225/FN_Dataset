shortest path that pass through specific node -lrb- s -rrb- if all you have be 100 node , and you arc be give or easy to compute : don t worry about it . if not : you graph be probably very sparse -lrb- many more pair of node with arc than without arc -rrb- . so use link list or some other datum structure that allow you to iterate over just arc , not have to skip non-arc . the name of such datum structure be language dependent ; various type of java or c # list or dictionary quality , as do e.g. hash in perl or associative array in php . i d use they to build a mapping from node to forward arc -lrb- i.e. pair of cost and destination node -rrb- , and another from node to backward arc . i d allocate two more to hold the node-to-node distance from each node to each intermediate node , and from each intermediate node to each node , and compute they use the standard algorithm -lrb- floyd s , also know as dijkstra s , or , erroneously , warshall s -rrb- . i d allocate one more to hold the final node-to-node distance , and compute they as $ $ d -lrb- x , y -rrb- = min _ -lcb- z \ in i -rcb- -lrb- d -lrb- x , z -rrb- + d -lrb- z , y -rrb- -rrb- $ $ for the intermediate node $ i $ . 