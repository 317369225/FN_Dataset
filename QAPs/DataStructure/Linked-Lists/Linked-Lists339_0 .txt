Does a linked list always need its own separate class or struct?There are lists with a generic payload: struct list_s { struct list_s *next; void *item; }; That is a type-agnostic list. You have to cast the item pointer to whatever struct/pointer/primitive type you included in the list. But as you can see, there are no restrictions in what kind of type you can have represented in such list. It doesn't hurt to say that such a list will make it harder for your compiler's static analyzer, since void * can point to anything in memory. But you can use a union if all of your types that will be used in the list are known at compile-time. 206 Views  View Upvotes