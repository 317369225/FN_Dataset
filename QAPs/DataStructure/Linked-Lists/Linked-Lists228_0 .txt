How do you write a function that can reverse a linked-list?Here is the C code to do it struct node{ int d; struct node* link; }; Type 1: void reverse(struct node **h){// call by address of head pointer so return type not required struct node *current=*h,*prev=NULL,*next=NULL; while(current!=NULL){ next = current->link; //assign next node link to next pointer current->link=prev;//assign link field of current pointer prev=current;//update prev pointer to current pointer current=next;//update current pointer to next pointer } *h=prev;//update head pointer to last node which is in prev pointer } Type 2: struct node *reverse_1(struct node *h){// call by value of head pointer so return type required struct node *current=h,*prev=NULL,*next=NULL; while(current!=NULL){ next = current->link; current->link=prev; prev=current; current=next; } return prev;//Only this line is different from first program because its call by value so return the last node pointer i.e. prev which will be stored in head pointer } Now call the function as follows reverse(&head);display(head);// display() function is to show the content of the linked list. head=reverse_1(head);display(head); You will get something like this. 203 Views  View Upvotes