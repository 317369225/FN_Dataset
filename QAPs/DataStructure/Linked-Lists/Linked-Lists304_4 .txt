What is an efficient function to search and delete a node in linked list? Could somebody write the code for it in C++?View image: Deletenode This is the function that my professor created. Is that way the only way to delete a node in a linked list?This is one I wrote just yesterday for one of my codes. I won't claim it's the most efficient or the best way, but it is one way (you'd need to change it to delete all instances of your target): void NumberList::removeValue(int target){ ListNode *p = head; // pointer to traverse list ListNode *n = NULL; // trailing node pointer // deletes first instance of target value while (p && p->value != target) {  n = p;  p = p->next; }  if (p) {  if (p == head) {  head = p->next; --nodeCount; // update  delete p;  }  else {  n->next = p->next; --nodeCount; // update  delete p;  }  }  else {   cout << "\nERROR: Target value not located in list.\n\n";  } } 240 Views  View Upvotes  Answer requested by Romeo Bismarck