What are some of the most ingenious algorithms in computer science?
Any list like this is implicitly personal; things that seem ingenious to me may be mundane to others. Skip lists. While these are less important practically than I wish they were, I find them surprising and beautiful; the combination of probabilistic algorithms with what is effectively a balanced search tree tilted on its side is really ingenious. This is also a comparatively recent contribution. Paxos. It solves a problem of both theoretical and practical consequence, in both a theoretically and practically satisfactory way. It is also weird to try to get your head around, even by the standards of distributed systems. It feels a bit like an Escher painting; each objection you conjure ends up tidily working itself out, like a hand drawing itself. While it was independently discovered at least twice, I could easily imagine it having gone undiscovered for decades longer. The "state machine" family of lock-free algorithms. Scalable concurrent access to mutable data without blocking synchronization seems impossible when you first hear about it. Given a compare-and-swap primitive, you can reason about these structures using a state machine, where the arrows are swaps. Cliff Click has done some great presentations popularizing this general approach, though I still associate it most with Maurice Herlihy. See, e.g., http://www.azulsystems.com/event... 