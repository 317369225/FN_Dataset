I am stuck in 3D dynamic programming, and there seems to be no material on the web about that. Are there any resources to look for? . Thanks
There is nothing special in 3D dynamic programming. Do you understand concept of dynamic programming? If you understand it - you should be able to understand 1D, 2D, 3D, 4D... No-matter-how-many-D dynamic programming. Because there is no difference at all. Dynamic programming is about avoiding solving same problems over and over again. You have a graph of states, you are solving something using that graph. That's all. You have directed acyclic graph, you are processing vertices of this graph in order of their topological sorting. Top-down and bottom-up are just a different ways to proceed given graph. Does graph have some "dimentions"? Sometimes graph has specific structure, and it is easier to represent it as a chain (1D dp) or grid (2D dp), sometimes it may be a hypercube (DP with bitmasks). Sometimes it is hard to pick any good representation at all. When you are encoding a state with bitmask - is it 1D DP or n-dimentional DP? You may think about it as 1D - because your state is a single number; at the same time you may think about it as about n-dimentional DP - becuase every bit of your number is representing separate parameter. You may simply enumerate all states of your DP and it will become 1D. Let's say you are solving some sort of knapsack problem, trying to buy best items for given amount of money, and the subproblem is - how many cents you have now. It is 1D, right? And what about subproblem "how many dollars and how many cents you have"? It is 2D, right? But the problem is the same. And states are same - you only enumerated them in a different way, adding one more dimension. For some problems it is more naturally to look at them as 2D or 3D, for some other tasks 1D fits better. But that isn't about having some completely different classes of problems here. If you are familiar with DP in general - 3D DP should be easy to handle; if you don't understand DP yet - start with learning basics of DP; don't focus on number of dimensions, that's not the main criteria to describe DP algorithm or measure its difficulty. You may check this question: Are there any good resources or tutorials for dynamic programming besides the TopCoder tutorial?. It contains a lot of good answers and useful links for learning DP in general. 