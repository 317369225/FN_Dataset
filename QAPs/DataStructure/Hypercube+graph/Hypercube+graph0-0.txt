Given the vertices and edges of a graph, how does one verify that the graph is a hypercube graph?
Although it is unknown whether the general graph isomorphism problem can be solved efficiently, in this specific case, we can exploit the regular structure of the hypercube graph to find an isomorphism in polynomial time. For an graph [math]G[/math], let [math]G^*[/math] be the graph defined by contracting square faces to edges and edges to vertices: The vertices of [math]G^*[/math] are the directed edges [math](u, v)[/math] of [math]G[/math]. [math]((u, v), (u', v'))[/math] is an edge of [math]G^*[/math] if and only if [math](u, v, v', u')[/math] is a (nontrivial) 4-cycle in [math]G[/math]. Then, [math]G[/math] is an [math]n[/math]-hypercube graph if and only if [math]G[/math] has [math]2^n[/math] vertices, [math]n2^{n-1}[/math] edges, and (if [math]n > 0[/math]) an arbitrary connected component of [math]G^*[/math] is an [math](n - 1)[/math]-hypercube graph. If so, from a labeling of that component of [math]G^*[/math] with [math](n - 1)[/math]-bit strings, we can recover a labeling of [math]G[/math] with [math]n[/math]-bit strings: if [math](u, v)[/math] is labeled [math]b_0b_1\ldots b_{n-2}[/math], then [math]u[/math] can be labeled [math]b_0b_1\ldots b_{n-2}0[/math] and [math]v[/math] can be labeled [math]b_0b_1\ldots b_{n-2}1[/math]. 