Can somebody give me a clear and detailed proof of Sperner's Theorem?
Sperner's theorem is a beautiful result in extremal set theory with deep connections to combinatorics and algebra. I want to show you an elegant combinatorial proof of this result. Let's start by stating Sperner's theorem in basic terms: Let [math]X[/math] be a set with [math]n[/math] elements. Let [math]S_1, \dots, S_m[/math] be subsets of [math]X[/math], such that no two of them are related by containment, i.e. for any distinct [math]i \neq j[/math], we have [math]S_i \not\subset S_j[/math]. What is the largest possible value of [math]m[/math]? In other words, how many mutually incomparable subsets can we fit inside [math]X[/math]? Sperner's theorem gives the answer: [math]m \leq {n \choose \lfloor \frac{n}{2}\rfloor}[/math] Proof: Since we're doing set theory, we might as well assume that [math]X = \{1, \dots, n\}[/math]. In this case, the set of subsets of [math]X[/math] is called the Boolean Lattice, denoted [math]B(n)[/math]. Recall that we can identify [math]B(n)[/math] with the set of [math]n[/math]-digit binary strings, and we can visualize [math]B(n)[/math] as the vertices of an [math]n[/math]-dimensional hypercube. Let [math]B(n)_k[/math] denote the the set of subsets of [math]X[/math] with [math]k[/math] elements. Recall that: [math]|B(n)_k| = {n \choose k}[/math] I claim that, in order to prove Sperner's theorem, it suffices to produce injections [math]f_k: B(n)_k \to B(n)_{k+1}[/math] for each [math]k \in [0,(n-1)/2][/math], which are compatible with inclusion, i.e. [math]S \subset f_k(S) [/math] for any [math]S \in B(n)_k[/math]. If you know about Hasse diagrams, you can visualize these maps as a chain decomposition of the "bottom half" of [math]B(n)[/math]. Also note that taking complements of subsets gives a bijection from [math]B(n)_k[/math] to [math]B(n)_{n-k}[/math], so we also get a chain decomposition of the "top half" of [math]B(n)[/math]. To prove the claim, suppose we have constructed such injections [math]f_k[/math]. Let [math]M = {n \choose \lfloor \frac{n}{2}\rfloor}[/math] and suppose we have mutually incomparable subsets [math]S_1, \dots, S_m \subset X[/math] with [math]m > M[/math]. Now we drag these subsets along the chains to get new subsets [math]T_1, \dots, T_m \in B(n)_M[/math]. Since [math]m > M[/math], by the pigeonhole principle, we must have [math]T_i = T_j[/math] for some [math]i \neq j[/math]. By tracing through the chains, we find that [math]S_i[/math] and [math]S_j[/math] are related by containment, which is a contradiction. So it remains for us to produce a chain decomposition of [math]B(n)[/math] with the above properties. In fact, I claim we can do better. We can construct a symmetric chain decomposition (SCD) of [math]B(n)[/math], i.e. any one of our chains that starts at [math]B(n)_k[/math] will be able to continue all the way to [math]B(n)_{n-k}[/math]. This seems like more work to prove, but actually SCD is an amazingly useful property. In particular, if [math]P[/math] and [math]Q[/math] have SCD, then so does the product [math]P \times Q[/math]. Indeed, since both [math]P[/math] and [math]Q[/math] are disjoint unions of symmetric chains, we can decompose [math]P \times Q[/math] into a disjoint union of symmetric subsets of the form [math]C \times D[/math], where [math]C[/math] and [math]D[/math] are symmetric chains. So we just need to construct a SCD for [math]C \timesÂ D[/math]. If we draw this set as a set of points in a rectangular grid shape, we can take the longest symmetric chain to be the union of the first row and first column. After we remove this chain, we are left with another rectangle, so we can continue this process. Here's the punchline. Remember I said that [math]B(n)[/math] can be identified with the set of [math]n[/math]-digit binary strings? This means that [math]B(n)[/math] is isomorphic to the [math]n[/math]-fold product of symmetric chains of length 1: [math] B(n) \simeq \{0 < 1\}^n[/math] Therefore, [math]B(n)[/math] has SCD. Q.E.D. Note that the subsets in [math]B(n)_M[/math] are mutually incomparable, and therefore give a construction of the extremal case of Sperner's theorem. Also, the above proof is constructive, so we can write down explicit SCDs of the Boolean lattice, e.g. via the Greene-Kleitman rule. Even more amazingly, this algorithm can be expressed in terms of Kashiwara operators acting on the crystal graph of a tensor product of irreducible quantum [math]SL_2[/math] representations! It's unexpected connections like these that make math so beautiful. 