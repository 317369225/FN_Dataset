What are the top algorithms and data structures a software developer must know?
Karim Naggar gives an excellent list of data structures and algorithms, but I would say you don't need to know most of them. Rather, be aware that they exist and roughly what they're intended for. Then go learn them if you need them. I'm saying this as a high-level software engineer and PhD in computer science. The best thing you can do is familiarize yourself with arrays, lists, hash tables, sorting, and search/selection.Â  If you're a C++ programmer, take a look at the STL and its most popular templates. There's analogs for Java, etc. Again, you don't have to understand these algorithms and data structures deeply, merely know their characteristics. If you had to implement the data structures and algorithms from scratch, I would say: arrays, unsorted lists, maps especially hashtables, binary trees, and tries. For algorithms: quicksort, bubble sort, insert sort, binary search. I'm sure there's more, but it's a pretty big sea out there. Best to concentrate on getting familiar with the parts you know for sure you're going to swim. 