Why don't we use ternary search even though the algorithm complexity (O(logn/log3)) is better than binary search complexity (O(logn/log2))?
Let me add something orthogonal to other answers. Suppose the question is "How can we speed up binary search in practice without making additional assumptions about input data?" Using two equally-spaced pivots (instead of one pivot in the middle) requires additional memory look-ups and comparisons, and/or does not reduce the solution space by as much, therefore does not obviously give a speed-up. Asymptotic complexity has to be used carefully because even for a 2GB array, binary search needs no more than 16 iterations. So, what aspect of binary search can be improved? Let's additionally assume that we are performing multiple binary search invocations over the same array. In this case, a series of surprising answers and conclusions can be found in the following blog: http://www.pvk.ca/Blog/2012/07/3... 