Is it a good idea for a first-year algorithm student to implement some of the data structures (binary search tree, etc.) by myself to understand them better?
Yes, It will tell you how things actually work It will help you build your debugging skills while doing it It will help you uncover things, how and when they go wrong. What happens when your linked list is empty, what happens when you linked list has single element, how do these case differ from general case. You will appreciate this only if you do things yourself, not by reading the book. It will help you look at corner cases and anticipate and tackle problems in real office software work If done well, you can build your own repertoire of data-structures which you can freely re-use. I had build a single link list for fun, and now I use it whenever I need a linked list instead of writing from scratch. I built a adjacency list representation of graphs using that linked list and now I use my graph library for any problem that involves graph. It will help you move onto bigger problems better It will help you appreciate deficiencies of data-structures. I tried doing elementary data-structures implementation for fun in C,  trying to re-use a single linked list to build a double linked list,  helped me appreciate how C++ class inheritance is progress over C structures (I couldnt use the same sll-node struct) It will help you be sincerely confident in your job interviews when saying that you know data-structures and algorithms 