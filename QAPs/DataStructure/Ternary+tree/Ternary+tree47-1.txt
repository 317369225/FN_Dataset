How PHP7 will turn out for PHP?
First of all, PHP is still used far more than Ruby, Django, or Node.js. Don't confuse fashion with popularity. It's true that PHP is not as fashionable as it once was. Fashion is an illusion of popularity, and has little to do with reality. It's only about how loud the opinionated people are. People who have decided not to like PHP won't be convinced otherwise by putting a "7" at the end of PHP. PHP 7 is a step in the right direction for PHP, with interesting features and (by report) a significant efficiency boost. But the market is very slow to adopt new versions. So far, PHP 5.6 and 5.7 account for less than 5% of the PHP market (cf. Usage Statistics and Market Share of PHP Version 5 for Websites, November 2015). Four out of five PHP sites are still using PHP 5.2, 5.3, or 5.4. It will take quite a few years for PHP 7 to come into widespread use. This will take even longer than other versions, because PHP 7 has removed some deprecated extensions and has other backward incompatible changes, so it will be hard for any legacy PHP project to upgrade without doing extensive testing and code changes. Before PHP 7 becomes mainstream, three things will happen: Several newer major versions of PHP will be released. Ruby on Rails, Django, and Node.js will gain in popularity. Ruby on Rails, Django, and Node.js will fall out of fashion, replaced by yet another new language/framework we don't have today. 