When should I begin competitive programming and is it possible for a beginner?
The ideal time to start is now. First year. Perfect. Start solving Competitive Programming (CP) problems from the sites you already know. My personal favourite is CodeChef (CC). You should start with easy problems straightaway. And those problems don't really need much knowledge beyond loops, if-else, arrays, searching and sorting. You already know much. So you should be able to solve all easy problems till the end of your First year. They won't be cakewalk initially for sure, but over the period of time and with practice you will get that definitely. Try solving 100 - 150 odd problems. Learn new concepts as you come across. (Here, easy problems --> most successful submissions). If you really listen to me and do this, you have achieved a lot. You will learn a lot in this. [By now you will know if CP interests you. If you find it interesting, then -->] This is the time to be more serious. You need to learn new things now. Learn:- 1. Data Structures: Array, Structure, Stack, Queue, Linked List, Graph, Tree, Heap 2. Algorithms: related to above data structures. 3. Programming paradigms: Dynamic Programming (most needed), Divide and Conquer etc. 4. Some useful librararies: STL in C++, BigInteger in Java, Faster Input Output This should be the syllabus of second year first semester. By the end, you will be able to solve many problems. Its a huge syllabus, I know. Take more time if you want. Now, after this, again you will need to learn advanced data structures and algorithms. But thats not to be worried about. If you can do this much, you will get advanced part with less efforts. Keep your foundation very very strong, Advanced part will come. Take part in ACM ICPC, IOI in third, forth year. Win gold medal out there. Practice. Learn. Enjoy. Take part in college techfests. Win there. That should be easy win. Talking about learning C++. Its good to learn. You get STL in hand, which is very very useful. Has many functions and data structures in built. Saves a lot of coding time and efforts. Mathematics. Oh, yes. You need this a lot. I don't know what everything is needed. But Combinatorics, Modular Arithmetic, Prime numbers, Factorization, LCM, GCD are all time favourite. I hope you got the road-map. Also I didn't provide you with the link to TopCoder and CodeChef. Probably you wont be knowing every word of this answer; but you will soon understand each word once you enter and get your hands dirty. Allow me to give some free advice. Don't just stick to CP. Use knowledge of CP to build effective, efficient things. Consider building something big. Try contributing to open source. Learn App development, Android, IOS. Have some apps on playstore. Try to make impact on the world and make world a better, easier and smoother place to live. Love computer science, Learn everything. Updated 12w ago • View Upvotes • Asked to answer by Anonymous