How can I implement an English dictionary?
Generally, using TST is considered a fast way to search in a collection of strings, but, remember this will load all data on the memory. Some implementations can avoid this by starting search after the third or second letter and store the current node and it's descendants only. This way, however, will require lots of reconstructions and will decrease the search speed. Radix Tries and Ideal Hash Tries are more space optimized but with lower speed. What I recommend is using JSON or XML and use a built-in function or class for XML documents. The standard implementations are, sometimes, better than you can achieve. Like the implementation of sort() in the String Collection Class in Dot Net. I've read it and it's Most Significant Radix Sort. It's somehow complex but fast and space efficient in the same time. Another way is storing the TST or Radix Tries in the XML document, even though, in "The Algorithm Design Manual" textbook, it's not recommended to use the Hard Desk as a buffer for slowness, but, it's now an ancient book. 