How does one create a dictionary in C++?
If you mean a dictionary data structureIf you don't roll your own (which I'd not particularly advise unless you've got some specific esoteric reason), you could go with an unordered_map - see here: Unordered associative containers (C++) (if your C++ compiler has that extension or you have the source). Also it's been incorporated into the standard lib in C++11 std::unordered_map - cppreference.com Note that is using a hashing function to access positions in an array. If you don't need such a sort of "dictionary" then you could go with map - C++ Reference (which is implemented as a balanced BST instead). If you mean a spelling dictionary A reasonably good open source spelling API (used in many programs like LibreOffice) is GNU Aspell 0.50.5 If you mean a description dictionary - i.e. lookupThen nearly any sort of "database" should do the trick. You'd need to realize that such a dictionary would necessarily be a huge amount of data (especially the descriptions). Thus it's not very ideal to keep it all in RAM. Thus I'd suggest some form of searchable file storage, which is probably best through a database system in this case - there are 100's if not 1000's you can choose from (any sort of search on the word database in google would spoil you for choice). The main issue is finding a word from only a portion or if miss spelled - in which case a TernarySearchTree is a possible solution: Ternary Tree English Dictionary. Else look at how ASpell does it (convert it to a "sounds like" idea then find words in the store with close sound-like keys). For word->originThat sounds like you want a synonyms dictionary. Again ... one word answer ... database. In this case relational database would be a minimum requirement as you'd want to refer one word to another. The major problem you have is the data itself. Where are you going to get it? I hope you don't think entering it manually is going to take less than a few years. So I'd suggest you start by looking at some commercial dictionary suppliers and see what sort of electronic data they can provide. 