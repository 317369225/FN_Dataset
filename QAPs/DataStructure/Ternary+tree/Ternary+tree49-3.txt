What CS topics should a self-taught front-end developer be learning to become a good fullstack developer?
This is a tough question because there is so much to back-end development just like there is so much to front-end development. The topics that I have found most useful include: Data Structures, Algorithms, and Time Complexity Datastores (SQL and NoSQL) Distributed systems / computing There are many ways and architectures that this is achieved via like Service Discovery / Brokers, Messaging Systems, Microservices, etc. Multi-Threading / Multi-Processing Central Logging, e.g., using syslog-ng or the ELK stack A good language to code in. Something that offers you all the capabilities and interfaces you need. Just like the front-end, the back-end usually relies on many third party components and services. I have found that I like Java the most, but you have many choices including e.g., JavaScript via Node.js A certain level of DevOpsy / System Administration skills. I do all my development on Linux so basic stuff like using CRON, hard and soft links, some shell scripting, some Python, installing packages and software like Tomcat, etc. is very useful. This list could probably go on forever as there is no limit to what you might need to know. It all depends on what you are developing on the back-end. So frankly a go-getter attitude where you are not afraid to read a lot and learn a lot and try stuff and fail a lot, is probably the most important. But hey, you probably already have that, otherwise you wouldn't want to learn back-end stuff in addition to front-end stuff to begin with! 