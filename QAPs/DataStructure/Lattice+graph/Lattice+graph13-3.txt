Which is better for data analysis: R or Python?
I would answer that you should use the tool that has the best performance where your use constraints are binding the most. Example. You're running an MCMC simulation on a laptop. You find your most binding constraint is execution speed. Perhaps you should use FORTRAN or C/C++. In another example: you need to manipulate large data sets out of core. In that case, perhaps the best language (without discussing the underlying DBMS) is SQL. When performing data analysis, what is the most binding constraint? I wouldn't say it's speed, and on that count both Python and R fail badly. I think most often the binding constraint is your brain, or better, the ability to translate complex statistical ideas into coded analyses. It's productivity, but in a very specific sense. I am not sure Python and R differ too much on this; or at least, they are far more similar than they are different. Personally, I use R for data analysis and Python for almost everything else, but that's just me being emotionally attached (insider joke here) to a number of packages. Also it's comforting to find that a package has already been written for any statistical technique I could come up with. Coming back to your question, I don't think that the availability of Scipy, Numpy makes Python much more well-suited for data analysis. Pandas does in a big way, but the statistical libraries in Python are still not as extensive as R's. So, I would say that if you don't need exotic stuff and know Python, stay with Python. Otherwise, learn some R; it's not hard. In either case, it's not a clear-cut decision. 