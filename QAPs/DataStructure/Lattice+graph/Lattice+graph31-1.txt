What are the mathematics needed for pursuing a PhD in Theoretical Computer Science and specifically in algorithm research?
EDIT - I recently created a blog on Quora where I post videos related to TCS. You might find it useful. See Video Lectures In Theoretical Computer Science If you take a look at STOC, FOCS and SODA papers, one math topic that will probably stand out is Probability theory. Probability is widely used in theoretical computer science research. I don't mean elementary probability covered in undergraduate courses, I mean more advanced topics like monte-carlo, markov chains, martingales, e.t.c. See these books: Randomized Algorithms and Probability and Computing Obviously, Linear Algebra, Combinatorics, Graph theory, Data Structures, Combinatorial Optimization, Approximation Algorithms, Computational Complexity Theory are a must-learn. Depending on the area you are going into, you might also be interested in topics like Discrete and Computational Geometry. Apart from those mentioned above, other useful math topics are: Abstract Algebra Game Theory Circuit Complexity Matroid Theory Lattice Theory Set Theory Number Theory Algebraic Geometry Note that they are listed in order of importance (in my opinion). Basically, any math you can pick up along the way will help you a lot. The more math you are able to learn, the better for you. Disclaimer - I am an undergraduate student, and not a phd student, so my answer might not be totally correct. I hope some phd student can make some corrections to this answer. Updated 98w ago â€¢ View Upvotes