What classes of problems cannot be solved with optimization methods?
You can solve any computable function with a global optimization scheme. The proof for this comes from studying the Ising model, or alternatively the quadratic unconstrained binary optimization (QUBO) problem. Briefly, you set up a graph with the constraints that: Vertices can have labelings [math]v_i \in \{0,1\}[/math] or [math]\{\pm 1\}[/math] if considering the Ising model. Edges can have arbitrary weight, positive, negative, or zero. Then you write down an objective function (corresponding to the energy of the Ising problem): [math]E(\mathbf{z}) = \mathbf{z}^T Q \mathbf{z}[/math] where [math]Q[/math] is the adjacency matrix of the Ising/QUBO graph (where the diagonal denotes vertex weightings) and [math]\mathbf{z}[/math] is a vector containing the binary labelings on the vertices. The ground state is the bitstring(s) that minimizes the above function. Now the task is to encode an arbitrary Boolean function into this ground state. It seems like you should be able to do this, except that the above description only allows quadratic interaction terms whereas in general you can have Boolean expressions with arbitrarily high order. This is not a problem actually, because you can always reduce a higher-order Boolean expression into a lower-order one by introducing ancilliary variables. For example, if you have a Boolean function (in algebraic form) [math]F(\vec{b}) = b_1 + b_1b_2b_3[/math], you can introduce a new variable [math]a[/math] to substitute the product [math]b_1b_2[/math]. Then you add another term [math]3(a(3-2b_1-2b_2)+b_1b_2)[/math] to penalize the case where [math]a \neq b_1b_2[/math]. These reductions require only polynomial numbers of ancilla bits. The rest of the proof relies on showing that you can construct small spin graphs that simulate a set of circuits capable of universal computation. For that, you can read section IV of this paper: Encoding universal computation in the ground states of Ising lattices Then the authors take a known NP-complete problem, circuit satisfiability (CSAT), and map it into an Ising problem. From this you can construct a decision problem where the deciding bit tells you whether the ground state of a particular spin configuration is greater than zero (you can always add an arbitrary energy shift to the Hamiltonian so that the ground state is non-negative), and since a particular configuration energy can be easily checked, we know that the Ising problem is NP-complete. You can even show that certain types of Ising models are capable of universal quantum computation by a similar approach of mapping quantum circuits to the final Hamiltonian of an adiabatic quantum computation, and with the appropriate degrees of freedom one can show that this mapping can efficiently simulate quantum circuits, thus proving universality since quantum circuits are also universal. For a discussion of that, see this paper: Realizable Hamiltonians for universal adiabatic quantum computers 