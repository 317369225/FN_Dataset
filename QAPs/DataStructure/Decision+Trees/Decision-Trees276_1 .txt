Is a decision tree just a fancy name for a sequence of if-else-if-else -if-else statements?When you understand the concept of a universal Turing machine you realize that all computing can be broken down into a few simple operations. So from that perspective, yes, you are correct. But programming languages, patterns, practices, and algorithms are based on abstract concepts at a much higher level than this. In that way it is possible to talk about FIFO queues, OOP, functional programming, Phong shading, and so forth. These ideas have a foundation in practice and allow a programmer to talk about general approaches rather than getting into the implementation details. Because decision trees involve decisions (no surprise there) they are indeed based on the idea of if-else constructs, whether they are called that or not. But that is not a comprehensive way of looking at it. Moreover, it would be a very bad practice, in most cases, to hard-code a decision tree, so it would involve a lot more than just if-else operations. In fact that would be like saying gold is just a bunch of electrons and protons and neutrons. Well, of course that's true, but it's true of a lot of things other than gold - and it does not capture the nature of gold. There's a joke among business people that goes something like this... A man was in a hot air balloon and shouted down to a bystander, "I'm lost. Do you know where I am?" The man shouts back up, "You're in a hot air balloon." The man replied, "You're an engineer aren't you?" He asked, "How did you know?" The balloonist replied, "What you told me is technically correct but it's useless information to me." So technically, you are correct in saying that a decision tree is just a bunch of if-else statements. 679 Views  View Upvotes  Answer requested by Victor Guha