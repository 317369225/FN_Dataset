why doesn t decision tree work in case find minimum there be more than one technique to prove a lower bind on the depth of decision tree . one technique you have see be bound the depth of a decision tree by the logarithm of the number of its leaf . as you comment , this technique doesn t give the correct lower bind for the case of compute the minimum . however , we can lower bind the depth of a decision tree computing minimum directly . take any reachable leaf $ \ ell $ in a decision tree for minimum , and consider the entire path $ p $ lead to it . construct a graph whose vertex be the input element $ x_1 , \ ldot , x_n $ , two element $ -lrb- x_i , x_j -rrb- $ be connect if they be compare in $ p $ . i claim that this graph must be connect , and i show this below . a connected graph on $ n $ vertex must have at least $ n-1 $ edge , and this show that the leaf must have depth at least $ n-1 $ . in particular , the depth of the decision tree be at least $ n-1 $ . now to the proof of the claim . suppose that the graph contain more than one connected component , say it contain the component $ c_1 , \ ldot , c_m $ . since the leaf $ \ ell $ be reachable , there be a linear order compatible with the result of the comparison in each connect component $ c_i $ . we can put together these linear ordering into a linear order of all element in $ m ! $ different way . in particular , we can have $ c_1 > c_2 > \ cdot > c_m $ , and we can have $ c_1 < c_2 < \ cdot < c_m $ . this mean that it be consistent with the comparison in $ p $ that the minimum be in $ c_m $ , and it be also consistent that the minimum be in $ c_1 $ . hence whatever the tree output at $ \ ell $ will be wrong in at least one linear order consistent with the comparison in $ p $ , show that the tree doesn t compute the minimum . 