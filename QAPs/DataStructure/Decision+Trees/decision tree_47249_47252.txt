how much complexity difference can there be between find a solution to a sudoku puzzle and prove that the solution be the unique solution ? in order to prove that a puzzle be unique , any cell in which a guess have to be make must be branch over . when do a search to simply find a answer , this be generally do with backtrack , where the solution be the first path in the decision tree which lead to a complete board . in order to prove uniqueness , you must show that only one path lead to a valid solution . this be where thing get very difficult to define in term of run time . the complexity be extremely tie to the actual problem at hand . if you be look at pure worst case scenario , which be extremely unlikely to occur , then they can be consider the same complexity . in the worst case scenario , when do the solve , the solution be within the final possible branch of the tree which can be search . the entire tree have to be search to find it , while a search for uniqueness would also require the same search , go over the exact same path . realistically however this be not the case , and with almost all case involve search for combinatorial design , search for one solution be always faster than search for all solution . in general both of these problem be firmly entrench in exponential run-time , if not worse . 