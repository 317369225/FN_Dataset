sort algorithm which sort half the possible input in linear time suppose that a comparison-based sorting algorithm sort the set of permutation $ \ pi $ correctly . construct the comparison decision tree underlie the algorithm , with permutation as leaf . each permutation in $ \ pi $ must appear as a leaf -lrb- why ? -rrb- , hence the tree must have depth at least $ \ log_2 \ pi $ -lrb- why ? -rrb- . 