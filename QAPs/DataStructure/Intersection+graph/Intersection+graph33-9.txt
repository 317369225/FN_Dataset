What are the 10 algorithms one must know in order to solve most algorithm problems?
1. Number theory algorithms: GCD, inverse of the number using extended euler's algorithm, fast power, prime number 2. Graph algorithms: BFS, DFS, Shortest path algorithms, all pairs shortest path 3. String pattern matching: KMP (Sometimes, it is efficient for large input size), tries 4. Segment trees: Many problems in Code chef are related to segment trees. 5. Data Structures: Array, linked list, Priority Queue using heap, unordered sets, stacks and queues, hash and binary search tree  (Sometimes algorithms are based on them like palindrome check) 6. Search: Binary search, search using hash map, trie (also on rotated array) 7. Dynamic programming: Basics of dynamic programming, Matrix chain multiplication, LCS, Edit Distance, 0-1 Knapsack, Bellman ford, 8. Greedy: Job scheduling, Prims, Kruskal 9. Sorting: Heap sort, quick sort, merge sort (efficient for linked list too), counting sort and radix sort   List is not exhaustive. You can add many more algorithms. For Ad-hoc problems, you need to practice. 