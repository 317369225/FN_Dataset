I am the programming karate kid. You are the programming Mr. Miyagi. How do you train me?We have one year until the grand hackathon that will either bring glory to our names or shame to our families. I am a headstrong novice who is impatient and thinks he knows best when he does not. How can I be trained to perfection in the little time we have before the ultimate showdown? What are our daily practices and goals? How I wax on wax off?
You will learn to stand up - Each morning I will ask you what you did yesterday in front of your peers.  I will then ask you what you will do today.  I will ask your peers the same questions. You will notice that they build full websites or implemented new classes across the web application each day. You will learn the norms of software development in "the show".   You will learn to fall down - You will be given increasingly difficult tasks until you finally fail. And when you fail your teammates will pick you back up.   "Why do we fail? So that we can get back up." - Alfred from Batman: the Dark Knight   You will learn to Think, be Moral and act Positive (TMP) - These three tips are from a management guide I accidentally bought when I was trying to buy "Tips for Teams" but I accidentally ended up with "Tips for Teens" instead. My developers actually like the "Tips for Teens" more than the "Tips for Teams" so we are slowly going through the entire book.  Here is the wisdom we have learned so far:   Think about the results of your actions. Have a moral center. The book doesn't actually define what moral behavior is, which is kind of cool.  Just do what you think is moral, but don't try to convince anyone else that it is moral, since we don't have a working definition for moral behavior, and morality is subjective anyway. Be positive. The teen book says that "you only have one thought at a time, so it should be a positive one". Both the premise and the conclusion are highly flawed, but I think the book has its heart in the right place. I mean, you can have an idea in the back of your head, nagging at you (while still focusing on something else)?  There is that big brain / little brain thing we developed over the centuries, right? And even if you could only have one thought, that does not automatically mean it must be positive.  The book is kind of vague but I have always found that a positive attitude will get you through all sort of hell, where a crappy attitude won't get you a cup of coffee on a Tuesday. You will learn to disagree and commit - Software development is all about discussing important matters with others.  The most important skill I will teach is to argue with me over some matter, then work together to see a way out of the problem.  Once we have had the discussion, as a group if needed, and the hive mind has spoken, you will commit to the solution and pursue it to the end. Passive aggressive nut cases that can't handle being wrong have no place in software development.  There is a time to discuss, and a time to commit to a path. You are also going to get paid boatloads of money, so you are pretty much responsible for figuring out how to be good at this job. I am just here to help guide you and show you the norms of the team. Your greatness comes from within you, grasshopper. 