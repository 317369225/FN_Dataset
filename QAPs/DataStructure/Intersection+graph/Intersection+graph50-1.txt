What is the smallest value of n such that an algorithm whose running time is 100n^2 runs faster than an algorithm whose running time is 2^n on the same machine?
What you need is to solve the inequality 100n^2 < 2^n. The smallest integer to satisfy is 15. I hate to do the math so I prefer writing a simple c++ code like: #include <bits/stdc++.h> using namespace std; int main() { // your code goes here for(int i=1;;i++) { if(100*i*i < pow(2,i)) { cout<<i; break; } } return 0; } 