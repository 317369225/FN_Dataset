I am the programming karate kid. You are the programming Mr. Miyagi. How do you train me?We have one year until the grand hackathon that will either bring glory to our names or shame to our families. I am a headstrong novice who is impatient and thinks he knows best when he does not. How can I be trained to perfection in the little time we have before the ultimate showdown? What are our daily practices and goals? How I wax on wax off?
I see a really important part missing in the other answers. A crucial part, I'd say. An absolutely irreplaceable part that has to be done first and then has to be the focus of every day from that moment on along with other exercises and goals, something like daily pushups if you were training a martial art: Typing speed. I have seen people (in my own department no less) get fired because it took them 7 minutes to write and test a nested loop across 3 classes instead of 17 seconds. It's not that they didn't know how to do it - they just didn't do it fast enough. The same people have been on their position for months, so it's not fair to say it'll just come to you automatically as you practice. When you code, you're in "the zone". You can't afford time wasting. The hands need to know exactly what's going on at all times without looking. Type in the dark, get to know your peripherals, get used to your tools like Snooker players do to their irreplaceable cues. Use typing speed training programs, transcribe random stuff, just work on your speed and keyboard fluency. Once you get to know your hardware, work on getting to know the software - focus on one or two IDEs or text editors at most, and get to know their shortcuts. Use them like your life depends on it. Write code templates if the software supports it - challenge yourself. Less time spent typing means more time spent thinking, giving you more chance of becoming a developer, instead of just a programmer. Best of luck in your leveling! 