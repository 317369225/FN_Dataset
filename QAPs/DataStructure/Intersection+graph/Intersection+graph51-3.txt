I am the programming karate kid. You are the programming Mr. Miyagi. How do you train me?We have one year until the grand hackathon that will either bring glory to our names or shame to our families. I am a headstrong novice who is impatient and thinks he knows best when he does not. How can I be trained to perfection in the little time we have before the ultimate showdown? What are our daily practices and goals? How I wax on wax off?
Here's a "to-learn" list I made once. It's based partly on programming contests and rest on what I thought would be interesting to learn. May need some heavy editing for hackathons. - OS: Processes, Multi-Threading & Concurrency, Memory Management - Red/Black, AVL, B Trees - Radix Sorting - External Sorting - Hashing - Radix Searching - KMP, Boyer-Moore and Rabin-Karp, Multiple search - Pattern Matching - Parsing - Convex Hull - Range Searching - Geometric Intersection - Closest Point problems, Voronoi - Graph algorithms, theory - Simplex method - FFT, Linear Programming - Combinatorial Game Theory - Compression - Cryptography - Design Patterns - Machine Learning 