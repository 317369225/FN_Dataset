What is the smallest value of n such that an algorithm whose running time is 100n^2 runs faster than an algorithm whose running time is 2^n on the same machine?
You can graph the two functions and find out intersection points. The point after which 100n^2 is lower than 2^n is the smallest value of n you're looking for. For simplicity, plot log(100*n^2 ) vs log(2^n) using 'n' as a continuous variable. You can do this as both the functions satisfy f(-inf) >= 0 and f'(x) >= 0 for all x and taking log of a positive value is allowed. You'll observe that the two graphs intersect in 3 distinct points. The point of interest is the point (14.325,4.312). Beyond this point, log(100n^2) is lower than log(2^n). So, the smallest integer value of n would be 15. 