Which graph representation is better for competitive programming in C++: adjacency list or adjacency matrix?I want to implement some basic graph algorithms such as - bfs, dfs, dijkstra, mst- prim's and kruskal, max bipartite matching etc.. I want to know which is better representation for graph in terms of easy to manage with time and space - especially for competitive programming.
Adjacency lists have a space complexity of n whereas adjacency matrices have a space complexity of n^2. Adjacency matrices have a time complexity of  O(1)(constant time) to find if two nodes are connected but adjacency lists take up to O(n). In short:If time is your constraint,use an Adjacency Matrix.               If memory is your constraint,use Adjacency List. 