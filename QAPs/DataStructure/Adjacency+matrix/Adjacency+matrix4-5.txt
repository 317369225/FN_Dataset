Which graph representation is better for competitive programming in C++: adjacency list or adjacency matrix?I want to implement some basic graph algorithms such as - bfs, dfs, dijkstra, mst- prim's and kruskal, max bipartite matching etc.. I want to know which is better representation for graph in terms of easy to manage with time and space - especially for competitive programming.
the better way would be adjacency list representation using c++ stl. suppose n=no. of vertices 1. list<int> *arr=new int[n];   this will create n lists i.e. list for each vertex. 2. vector<int> arr[n];   this will create n dynamic arrays.   you can easily do graph operations with these two representation. Ex. for adding any edge use push_back(). 