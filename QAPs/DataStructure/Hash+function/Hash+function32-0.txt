How does the hash function work in hashing?
To make visualising hash functions simpler, think of it in this way: (Many ideas in computer science can also be thought in terms of simpler things we do in everyday life)   Given a record all the words in the English language, how would you search for words or insert new words into the record quickly? Well, there are hundreds of thousands of words, so for quick access we need some way to arrange them.   Sorted Order: This is what they do in dictionaries. Arrange all the words in lexicographic order. This makes searching very easy. However there is a problem. You can't add in new words easily, because you need to squeeze them between 2 other already existing words, hence shifting down all the words after it by 1 entry.   Hashing: The other option is to entirely give up the idea of a total arrangement of anything. We will settle for this: It would be easier to search things if you know in general where they are. For example, when searching for a clothes of a certain colour, it would be much easier if you had just dump all the yellow clothes into a yellow basket, the green ones into a green basket, blue to blue, and so on. In a dictionary, this can be done by just giving up on the idea of a perfect ordering of words. Instead, we just divide the entire dictionary into, say, 26 sections, and grouping words together in a section based the 1st character of the word. Sure, when you add things to the section, all the ordering gets messed up. (For example, you might add the words in this order, "Jungle", "Japan", "Jitters", "Jet", ...) However, when performing search, you know you just need to look through the words in only the "J" section to find the answer.   This idea of trying to assign elements to specific "buckets" is called hashing. Obviously the same object MUST always end up in the same bucket, or you would never be able to find it. (Think yellow clothe being placed deep inside a red basket) This mapping from an element to its "bucket" is called a hash function.   Good Hash Functions One other thing to take note about hash functions. You'd want a good hash function when performing hashing. Take a dictionary. Few words begin with "Z", so it is very easy to find a word in your "hashed" dictionary that begins with a "Z". However what about something beginning with "A", remember that hashing does not order the words in lexicographic order. This means that you would need to search through the entire "A" section just to find the word that you are looking for.   A good hash function tries to allocate different elements to different buckets at an equal probability. So that the average search time for any element is roughly the same. For example if you have 18 yellow, 1 blue and 1 green pieces of clothing, then it does not make much sense to dump all of the yellow clothes into 1 bucket. However if there are say 7 pieces of formal wear, 7 pieces of casual wear, and 6 pieces of sports wear. Then that would make for a much more equal distribution of elements to speed up searching.   (The more buckets used by the hash function, the faster search time becomes) 