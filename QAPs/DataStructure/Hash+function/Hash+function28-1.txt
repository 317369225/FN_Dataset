What is an intuitive explanation of the Davies-Meyer hash function?
A secure block cipher is basically a pseudorandom function between one set (K x M) and another (CT). The fact that it's pseudorandom helps with "evenly distributing" the bites in the hash (which is, in turn, needed to satisfy the definition of a hash function), so that explains the fact that you have to use a block cipher. As to the feeding-a-block-of-the-message-as-the-key thing, when you make a hash function, you want to make it as dependent on the input as possible, and you can't make it more dependent on the input than just feeding the whole input in, somehow. Also, the message gets treated as the key, not as the PT for the block cipher because, by the definition of a block cipher, one block of plaintext has the same length as one block of ciphertext, so you basically have to stick together the ends that have the same output length, and feed in the message on the remaining end. I haven't heard of this hash function before, but I looked it up and found this One-way compression function on wikipedia and it kind of made sense to me, I hope it helps. Edit: Also, if the block cipher is secure (outputs seemingly random stuff), then it's intuitively provable that the hash function resulting from this scheme is secure since, by outputting "seemingly random stuff" you can't differentiate one input from another, hence having to look through a lot of possible inputs to find a collision. 