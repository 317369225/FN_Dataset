Why are hash functions one way?
The other answers (so far) are not actually answers to your question. They are making the mistake of thinking that "one-way" has something to do with injectivity. It doesn't. A one-way function is one for which finding *any* preimage of a randomly chosen element of the codomain is difficult (in the average case). As others have stated, hash functions have a larger domain than range, and so we know (by the pigeon hole principle) that hash functions are not injective. So given a randomly selected element in the codomain, it is very likely that it has multiple preimages. That doesn't matter. What matters is that finding *any* of those preimages is computationally infeasible. Hash functions are designed to exhibit this property, and that's why they are believed to be one-way. 