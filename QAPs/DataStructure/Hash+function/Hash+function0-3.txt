What is a hash function?
Long story short, hash function is a function, that given some data, returns an integer of fixed bit size, regardless of length of input data. Usually it's done by some kind of mathematical operation on binary representation of input data. For example, if you have string data, and a limit on maximum length of a string, then function getting string length would technically be a hash function. It won't be a "good" hash function, mind. Hash functions are used in hashmaps (a.k.a. hash tables) for "sorting" values into "buckets" to reduce lookup time, in cryptography, in 3D graphics, etc. Hash function needs to be well-defined, meaning that for the same input, it produces the same output. Hash function needs to have well-defined bounds on its returned value. There are multiple reasons for that, and architecture of modern computers plays a role in this, among other things. For most use-cases, you also want your hash function to have a relatively flat distribution for all your input data (that's why string length is not a "good" hash function, since, in general, most strings are short). For hashmaps, it is needed to "evenly" sort values into "buckets", for cryptography it is essential to reduce probability of brute-force attack succeeding, etc. So, for a given set of possible inputs, you can have a "good" and "bad" hash functions. There are universal hash functions, but those have some corner cases too. 