What does the private hash() function in the HashMap class do?
The supplemental hash function simply mixes up the bits of the value returned by the object's hashCode() function. It does this to help avoid patterns (hashes should appear random to some extent) that the hashCode() function might have, because hashCode() is implemented by the programmer using the HashMap API, and that programmer might not be trusted to implement a suitable hashCode(). To take a somewhat concrete example, let's say you're using a version of HashMap that didn't do the supplemental hash, and your objects are students. Also, let's say student IDs all end with 000, and you just use student ID as the hash code. Then, all hashes turn out to be multiples of 8, and because the HashMap uses power-of-two length tables (let's say 32, for example), this will result in a lot of collisions: only buckets 0, 8, 16, and 24 would ever be used, and only the last five digits (really, only the two non-zero digits of the last five) of the student ID would be used in the hash value. Running the supplemental hash function mixes up the bits of the student ID, so all digits are used. 