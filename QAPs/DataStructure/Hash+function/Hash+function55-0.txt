Hash Functions: What are the advantages of SHA-3 over SHA-1?
EDIT: Keccak has been officially chosen to be the SHA-3 algorithm. Because it is based on a sponge function instead of Merkle–Damgård, it should not be vulnerable to the same kinds of attacks that earlier SHA algorithms might be. Specifically, it is not vulnerable to length extension attacks, which affect all M-D hashes like MD5, SHA-1, SHA-2. SHA-3 has not been finalized; candidate algorithms are still being reviewed by NIST, and the finalist is expected to be announced in 2012. That said, there are a few reasons one would choose to support SHA-3 or even SHA-2 over SHA-1. First, there are theoretical attacks against SHA-1 that reduce the difficulty of finding collisions. These attacks are still impractical, and SHA-1 can be relied on for strong security for hashes and signatures that expire in a few years time. SHA-2 is similar to SHA-1, but has not been shown to be susceptible to the same attacks. Second, NIST has recommended that the United States Federal Government stop using SHA-1. Practically, this means that if you ever want your code or project to be used by the Federal Government, you should not use SHA-1. Updated 29 Aug 2013 • View Upvotes