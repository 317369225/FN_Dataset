Why can't hash functions be reversed?
Assume that some system does use (input%13) as it's hash function, and the function is publicly known. Further assume that the password can only be integers (not words). Let's say you hack the database, and find that a particular user's password hash is 3. Your password can be any of {3, 16, 29, 42...} . T̶h̶i̶s̶ ̶r̶e̶d̶u̶c̶e̶s̶ ̶t̶o̶ ̶a̶ ̶b̶r̶u̶t̶e̶-̶f̶o̶r̶c̶e̶ ̶a̶t̶t̶a̶c̶k̶ ̶,̶ ̶t̶r̶y̶i̶n̶g̶ ̶e̶v̶e̶r̶y̶ ̶1̶3̶t̶h̶ ̶i̶n̶t̶e̶g̶e̶r̶ ̶,̶ ̶s̶t̶a̶r̶t̶i̶n̶g̶ ̶f̶r̶o̶m̶ ̶3̶ ̶.̶ ̶T̶h̶i̶s̶ ̶i̶s̶ ̶n̶o̶t̶ ̶c̶o̶m̶p̶u̶t̶a̶t̶i̶o̶n̶a̶l̶l̶y̶ ̶a̶n̶y̶ ̶b̶e̶t̶t̶e̶r̶ ̶t̶h̶a̶n̶ ̶t̶r̶y̶i̶n̶g̶ ̶e̶v̶e̶r̶y̶ ̶i̶n̶t̶e̶g̶e̶r̶.̶ (Correction pointed out by Scott Berry ) Now, this was a bad hash function because it allowed you to calculate some pre-image (3,16,29..) from the image (3) . Real world hash functions like SHA and MD5 are designed such that it is computationally unfeasible to calculate any pre-image, let alone the pre-image. Pre-image resistance is one of the properties expected of a one-way hash function. A one-way hash that lets you calculate a preimage is useless. This property should complement the Collision Resistance property - it should be unfeasible to find two inputs that map to the same hash. Note that one-way hash functions are just conjecture yet. Even though there are functions which we've been unable to invert, there is no proof that it cannot be done. But the positive thing is, the smartest people haven't been able to find inverse of many one-way hash functions for several years and we hope that our hackers are not smarter than that. When a one-way hash function does get "cracked" we'll have to find some new one-way hash function, and so it'd go on. 