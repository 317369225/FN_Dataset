Why aren't cryptographic hash functions used in data structures?
We use hash tables because we can have fast lookup. Theoretically, with a proper hash function, we can have a lookup in O(1). Cryptographic hash functions like SHA-1 shall produce a hash where the probability of collision is negligible. So yes, I do agree that it can be used as a proper hash function. But computing the hash is quite expensive when compared with a simple mod hash function used in hash tables. Moreover the hash is 160 bits long, which means that the hash table can hash to 2^160 locations. If each location is just 1 bit long, the size of hash table is 2^160 bits = 2^82 ZB. As of 2013, the entire size of WWW is thought to be about 4 ZB. Now that's SHA-1, which has been broken for years now, and most of us have already moved to SHA-2, which produces even longer hash [224 - 512 bits]. Think about the size of hash tables now. 