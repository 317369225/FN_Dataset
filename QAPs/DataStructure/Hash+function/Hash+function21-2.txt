Why are hash functions one way?
Pigeon hole principle. Let's say you want to hash 6 character strings in a hash table of say 1 million positions. The has function must be able to hash ANY string. Let's limit each character in the string to 26 letters. There are 26^6 possible strings: 308915776. The hash function can take any of those and convert the string into a number in the 0...999999 range. It is clear that two or more strings can be hashed to the same position (bucket) and then the hash function can't have an inverse because given a position in the hash table you can go to multiple possible strings. Luis 