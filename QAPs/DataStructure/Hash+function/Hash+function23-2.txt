Why aren't cryptographic hash functions used in data structures?
I would like to read other answers, as I'm not an expert. Cryptographic functions are stronger than general hash functions, in the sense that they don't only avoid collisions, but also don't reveal any information about the original text. This last constraint is not required for a hash function used in a hash table, for example. So, usually the hash functions for purposes other than cryptography are more efficient. Other point, which I think is more important, is that, for instance, SHA outputs a number that is 160-512 bits long. I don't see how can this be really useful for a hashtable, for example. Usually, hash functions for hashtables use the 'mod' operator in order to generate values that fit the table size. And that generates the collision problem. So, collision problem is, in my view, inherent to hashtables and not (totally) related to underlying hash function. Obviously that a good hash function would minimize such problem, but not eliminate it. (sorry for any english mistakes) 