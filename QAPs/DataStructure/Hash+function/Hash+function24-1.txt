Why do some hash functions use a prime number as base?In cryptography or in String matching(say Rabin Karp), some hash functions use a prime number as radix for calculating the modulo. What is the significance of using a prime number. Is it to assign uniqueness and minimize collision of hash values?
An alternative to Rabin-Karp is the Carter-Wegman class of hash functions which DOES use primes that are NOT random because of their mathematical properties. The randomization is in the rest of the function. If you consider your input X as an r-digit number base-p (X1,X2,...,Xr) your hash function h is defined by a similar random sequence (A1,A2,...,Ar) and computed as                                   h(X) := A1X1+A2X2+...+ArXr mod p. The advantage of this class of hash functions is that you can show that for any distinct X,Y on the input the Pr[h(X)=h(Y)]≤1/n when h is selected randomly from the class. This is very convenient for both for cryptographic purposes and hashing for exemple. You may read more from the book on algorithms of  Jon Kleinberg & Éva Tardos, Chap 13. 