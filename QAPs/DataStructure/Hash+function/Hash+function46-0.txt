For a simple hash function h(k) = k mod M, why should M be a prime number?
Because any common factors that M shares with patterns in the frequency of k are going to result in a collision rate above that predicted by random chance alone. For example, a programmer making a hash table data structure might allocate a power-of-2 amount of memory and use a simple modulo to compute the bucket location. But if this container is used to store are 8-byte aligned pointer values, 7/8ths of the buckets will remain empty! Reducing the size of the hash table to the largest prime that fits in the allocated memory will help greatly. Let's be clear that plain 'mod' often makes a rather lousy data structure hash function, and it's not remotely similar to a cryptographic hash Â function. If you're looking for a simple data structure hash function, I recommend FNV-1a. 