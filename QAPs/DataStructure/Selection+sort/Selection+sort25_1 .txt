Which of the following is the fastest to sort a list: merge, shell, bubble, insertion, selection or quick sort?Assuming you have no idea about the input. Bubble Sort, Insertion Sort and Shell Sort have worst case time complexity of . That basically means that as you scale your input by some factor, your time would scale by square of that factor. Suppose it takes 2 seconds to sort a list of 1000 integers, then it would take 4 seconds to sort a list of 2000 integers. Merge sort has worst case time complexity of . Thus it is definitely better than the previous three listed. Now comes a very interesting case, quicksort. Quicksort has worst case time complexity of but that is rare. It has an average case time complexity of which is same as that of merge sort. In practice though quicksort runs faster than merge sort because the constants involved are smaller. Besides quick sort has the advantage of in place sorting unlike merge sort. So, Quicksort would be the ideal choice. 