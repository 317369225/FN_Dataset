Given an unsorted dataset of size n, if you use selection sort to sort the data, how many binary searches would you need to perform on the unsorted dataset to "buy back" the cost that went into sorting your data if n = (2^4)?该网页不存在附加信息...As Garrick mentioned in his comment, the asymptotic costs of selection sort and binary search tell you pretty much nothing about the actual number of comparisons used. Asymptotic analysis tells you how the number of comparisons grows as a function of as . Selection sort actually uses comparisons and binary search uses comparisons (in the worst case). For , this is 120 comparisons for selection sort and 5 comparisons for binary search. Searching the unordered elements would take 16 comparisons in the worst case. After 11 searches you would have used at most comparisons if you sorted the elements or at most comparisons if you had not sorted them. Of course, this analysis only matters if you care about the worst case. If you have knowledge about the kind of queries that would be performed you could do a similar kind of average case analysis. 