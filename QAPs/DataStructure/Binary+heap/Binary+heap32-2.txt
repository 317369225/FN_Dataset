How can I design an efficient data structure that supports findMin, findMax, deleteMin, deleteMax, Insert, and delete?I need to design an efficient data structure that supports: findMin & findMax (most frequent) deleteMin & deleteMax (moderate frequent) Insert & delete (least frequent)
I note that you don't have a "delete(n)" operation that has to take place in log(n) time.  So a delete operation can be quite long, while an insert operation has to be quick.   This is a fairly simple operation.  The root node can contain copies of, or pointers to, the min and max values, and the rest of the structure can be a balanced tree.  Insert operations can allow the tree to become unbalanced, as long as you rebalance when you delete.    Is this a homework assignment? 