How does one become good at solving algorithm/programming problems?
Popular to contrary belief, I don't think coding solutions to algorithmic problems is a generally effective way to learn algorithms. The people who have done it successfully though are usually good/quick at spotting patterns and solving algorithmically oriented problems. Data Structures are crystallized algorithms [What are some examples of "crystallized algorithms"?] & [Data Structures & Algorithms] and it makes sense to start learning Data Structures if you want to master algorithms. I personally feel that they go hand-in-hand and should be learnt together. That said, these places are good places to start reading about algorithms/data structures and trying to solve some example problems without actually writing code to solve them. All pages - PEGWiki Category:Data structures You need not actually write code to solve an example problem - just make sure you understand the underlying idea for solving it. Try out problems in Programming Challenges to start with and then try to move on to problems from Sphere Online Judge (SPOJ). 