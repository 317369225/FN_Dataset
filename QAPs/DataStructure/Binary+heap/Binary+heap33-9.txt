What are the 10 must-know algorithms and data structures for a software engineer?
Originally Answered: What are the most common algorithms and data structures to learn for a developer?Â  Further recommendations?If you learned everything on this list: http://en.wikipedia.org/wiki/Lis... you would know more than quite a few programmers I have worked with! However, its a big list. If you want to focus on commonly encountered structures I would recommend the following. Knowledge of linked lists is essential. They are very common and are used to implement abstract structures such as arrays, stacks and so on. Start here because what comes after involves basic concepts (nodes with pointers to other nodes) you will encounter with simple linked lists. It would be useful to learn about binary/B trees and hash tables, as important real-world application include database indexing structures - http://dev.mysql.com/doc/refman/... for more detail. Graphs and graph theory are very powerful tools and I have seen them applied to models of networks, in particular models of social networks. There is some overlap here with linear structures such as sparse arrays: a computationally efficient method of performing edge calculations of graphs involves the use of a sparse matrix (adjacency matrix) to represent edges between nodes. When I set out to improve my knowledge in this area, I stumbled on to some very helpful university course notes which you can find here: http://www.cs.auckland.ac.nz/~jm... Have fun! 