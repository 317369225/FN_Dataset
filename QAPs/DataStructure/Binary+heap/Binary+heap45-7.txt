How did you go from understanding algorithms to being able to design them yourself?
Is it possible that reading about existing algorithms has given you the impression they always sprout from the inventor's brain fully formed?   Algorithm design can be an iterative process, and making the "leap" between each iteration small(er) makes the process more feasible. For example, you can write a correct, naive, and slow algorithm first, and then work on refactoring or optimising it, which may eventually reveal a way to redesign it at a higher level.   Perhaps you are trying to make your leaps too large, which means they will be leaps into the dark.   Try finding some texts that tell the story of an algorithm design, rather than just the final result. One example that springs to mind is "Engineering a sort function", but I'm not sure it's a good example because there was a lot of existing work by the time that paper was written. 