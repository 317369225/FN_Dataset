How can a max heap be converted to a min heap efficiently?
Assuming you are doing a dynamic array implementation of the binary heap, all you need to do is to place the elements of the max heap into the min heap, without bothering about the heap property. Since its an array, it shall take only O(n) time. Now to make sure that heap property is satisfied, call the heapify function on the new min heap, which will take only O(log n) time. So you have efficiently converted your max heap into min heap in O(n) time. void buildMaxHeapFromMinHeap(maxheap *maxhp, minHeap *minhp) {     int i;     for(i = 0; i < maxhp->size; i++) {     insertNodeMin(minhp, maxhp->elem[i].data) ;     }     for(i = (minhp->size - 1) / 2; i >= 0; i--) [     heapifyMin(minhp, i) ;     } } You can see the actual implementation here: Implementation of Min Heap in C Implementation of Max Heap in C 