Why is the complexity of pop function of a standard C++ priority queue O(log n)?
u might find some help here.. priority_queue::pop - C++ Reference if you've noticed , the complexity section in this page contains two further links .. One call to pop_heap and one call to pop_back on the underlying container. go to each link .. 1) You now know thatÂ  pop_back complexity is constant. so that leaves pop_heap, which says .. 2) Up to twice logarithmic in the distance between first and last: Compares elements and potentially swaps (or moves) them until rearranged as a shorter heap. n distance is usually linear, click on distance for more information :) Hope this helps :) 