Which algorithm did Prof. Thomas Cormen find most difficult to get or understand?
When I was freshman in 1974, I took the introductory CS course from Jeffrey Ullman.  I loved the course, and Ullman was a terrific teacher.  Most of the programming we did was in Fortran, with a little Snobol at the end of the course. Ullman gave us an assignment to program up Dijkstra's algorithm in Fortran using a binary heap as the priority queue.  He gave us a long handout explaining the algorithm and explaining heaps.  We hadn't covered either Dijkstra's algorithm or heaps in class. I remember reading the handout over and over, for hours upon hours.  I understood the individual pieces, but I wasn't seeing how to put them together.  Mind you, we had not seen concepts such as data abstraction or had heard the term "priority queue."  And when you use a heap in Dijkstra's algorithm, you need to have the Dijkstra part talk to the heap and the heap part talk to the Dijkstra part. After many hours, I finally understood what needed to be done.  I coded it up, and it worked.  I don't recall whether it worked the first time (it was 40 years ago), but I had enough of a handle on it that I got it to work quickly. There probably have been algorithms since then that caused me more trouble.  And the way we teach now is very different from the way we were taught in 1974, so that we can talk about priority queues and how Dijkstra's algorithm uses them.  I just remember struggling with that assignment, mostly because it was the hardest one in my first CS course. 