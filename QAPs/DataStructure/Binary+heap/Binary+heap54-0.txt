Other than min and max heaps, which are the most useful types of heaps?
Fibonacci heaps are commonly used to implement Dijkstra's algorithm and the Uniform Cost Search algorithm in artificial intelligence. Binomial heaps can be useful for certain discrete time event simulations, and Binary heaps have been used for Huffman Coding. A lot of those data structures on your list are either mainly of  theoretical interest or built to solve a very specific problem.  Many of these data structures work well in certain niche applications, which commonly is the reason for why someone invented them. Brodal Queues are not really practically feasible even though they have very good asymptotic guarantees, as they suffer from large constant factors due to overhead and are quite hard to implement. The creator even said at one point that they probably aren't going to be useful in practice. 