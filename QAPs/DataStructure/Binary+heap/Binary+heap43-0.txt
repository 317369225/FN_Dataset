Is it natural for a good programmer to forget syntax/algorithms over time if you don't use it a lot?
I have been programming for 4 years now. And in that four years, I have worked on C, C++, Java, JavaScript, HTML, PHP, Ruby On Rails... and list continues to grow. So here's my advice... Don't study programming languages for the sake of a job interview You will never know the practical use of the language if you do so. And different companies work on different types of applications. And each company will have it's own choice of programming language. You cannot learn a language, just because it was listed on a job description. If your interviewer gives you a problem to solve in Java, it is OK to give a solution in C++, as long as you get the logic right. But it is NOT ACCEPTABLE if you show in your resume that you know Java, and don't answer in Java. Unless you have worked on a programming language, do not include it in your resume. Pick your first language/mother tongue and master it If you are a beginner, pick one programming language and start with it. Forget all other programming languages and master this one. I would suggest you pick an Object Oriented language like C++ or Java. Learn all the concepts of the language. And practice A LOT. When you learn new concepts, don't leave it as theory. To be able to fully understand programming concepts, you need to practice. Dig out examples from the internet that would demonstrate the concepts. Use the internet more than your textbook Use your textbook to learn your concepts. Search the internet for examples and it's application in the real world. Trust me, this will help you remember the concepts much better. And will make learning more interesting. Work out algorithms by hand Once you familiarize yourself with a programming language, you will need to learn algorithms to solve complicated problems. Algorithms have nothing to do with any particular programming language. But you need a programming language to put an algorithm to practical use. DO NOT try to MEMORIZE algorithms. I know a lot of people who do that, and it's just not helpful. You will forget them very quickly. When you read/learn about an algorithm, try working it out on paper. Take an example and run through the algorithm, step by step. Keep a paper and pen with you and try and work out different example sets by hand (like you would with a math problem), till you fully understand the logic behind the algorithm. Implement algorithms Now that you have understood the algorithm, write it in the language that you have mastered. This part should be really easy. If you struggle here, you either haven't mastered the language or you haven't fully understood the algorithm. Go back, learn them well before you make random tweaks to your code in a desperate attempt to fix it. Run your program, see the results and feel proud! You will now know exactly how your code works and the logic behind it. And you will not forget for a long long time. Learn more languages You will now find it extremely easy to learn new languages. But first you got to know why you want to learn this language. Learn the uniqueness of the language and why it is preferred over other languages and in what type of applications this language is used. You may want to read In layman's terms, what are the major programming languages, and what are they used for? It is OK to forget syntax I would say it is alright to forget syntax sometimes. Don't beat yourself for it. It happens to the best of programmers. And there is always google to help you out, when you forget. You will gradually pick up syntax, with more practice. Updated 11 Jan 2013 â€¢ View Upvotes