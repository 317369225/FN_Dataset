Is there a data structure for key-value pairs that allows insert, update, deletion and finding the minimal value all in log(n)?My current approach is having a balanced search tree (based on the value) and a map that for each key points to a node in the tree. Is there a better approach, that uses less space?
Yes, you can even do it in slightly less space by using a hashtable plus binary heap, and in slightly faster time for some operations with a Fibonacci heap, but it is unlikely you want to code either of those since you'll have to implement many operations (in particular, removal from an arbitrary index of a heap) from scratch. The hashtable plus binary heap solution uses less space since it uses array based storage instead of pointers to children. The Fibonacci heap is slightly faster for insertion in terms of time complexity, but overall slower in practice. 