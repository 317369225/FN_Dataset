How did you go from understanding algorithms to being able to design them yourself?
Don't worry. Unless you are going into academia, in actual software development, you will rarely (if ever) be in a situation where you need to think up a new, brilliant algorithm. Most software engineers wouldn't be capable of it. In actual software development, you will almost always use some well-known algorithm that somebody else figured out and documented long ago. You might do a slight variation on it. You will spend most of your time learning new languages and APIs, writing code and automated tests, debugging, answering emails and going to meetings, and working with Product Managers to try to figure out what will make your product sell. Perhaps Computer Scientists get the opposite impression because of a certain macho culture of job interviewing and programming contests that has grown over the last fews years. Even the job interviews that spend almost all of the interview time testing your knowledge of algorithms rely heavily on your ability to apply algorithms that you have memorized, not inventing something never seen before on the spot. 