What are two efficient implementations of a priority queue using binary trees?I have an assignment asking me for two different and efficient implementations.
Balanced binary search trees give you O(log n) for peek, enqueue, and dequeue. This is slightly worse than the standard heap implementation which is constant time for peek, but I would still consider it to be "efficient". See AVL trees or Red-black trees for a popular implementations of balanced BSTs http://en.wikipedia.org/wiki/AVL... http://en.wikipedia.org/wiki/Red... 