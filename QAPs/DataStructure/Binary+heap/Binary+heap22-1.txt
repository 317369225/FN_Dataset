How does Heapsort take O(nlogn) time?This may be an incredibly stupid question, but I'm curious. If heap construction takes O(nlogn) time (or linear depending on the implementation) and extraction for min (or max) takes O(logn) time, then wouldn't construction + extraction for all n elements take O((nlogn)^2)? Am I missing something here?
By the way, building a simple binary heap only takes O(n) time.  See: Binary heap Construction: O(n), you have to do this only once. Removing an element O(log(n)) Removing n elements O(log(n) + log(n-1) + log(n-2) + .... + log(1) )   = O(log(n!)) = O(n log(n)) Last reduction is called stirling's approximation. So total time T(n)=O(n)+O(nlog(n))=O(nlog(n))  