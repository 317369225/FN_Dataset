What are the rookie mistakes a person makes while starting to practice for competitive programming?
Giving up. According to me the most common mistake that a rookie makes in the beginning is "giving up" easily. Some of the things which I found useful while starting out were: 1.Competitve Programming book by Steven Halim. 2.http://help.topcoder.com/data-sc... 3.A copy of Kleinberg Tardos and CLRS. The only suggestion I would give is just dive in without bothering too much i.e. Pick up a platform and solve the easiest of problems that do not require any pre-requisites except plain logic (Generally these are problems that have a large number of successful submissions on such platforms) . It can be any of: Codechef, SPOJ, Codeforces, etc. (I started out with Codechef) and then once you are fairly comfortable with the platform move over to the other ones. Once you start taking part in contests regularly, you will come to know the gaps in your knowledge that you need to fill (e.g. learning standard algorithms like BFS, DFS, Sieve of Eratosthenes. Mastering programming paradigms like, Dynamic Programming, Greedy, Divide and Conquer etc.) You can regularly asses yourselves by taking a look at how your ratings/points on these platforms have changed. Do not delve too much into these but you can occasionally take a look at these to give yourselves a pat on the back and motivate ourselves to achieve higher targets. Follow Petr Mitrichev's blog http://petr-mitrichev.blogspot.in/ Follow most of the  top competitve coders on Quora. These are all the points that I can think of right now. I will keep adding as I get/ recollect more things to add. Thanks for the A2A @Santosh Patil Updated 68w ago • View Upvotes • Asked to answer by Santosh Patil