Can someone give me an example of a programming problem that you would get in an interview?
Seriously, just go get Cracking the Coding Interview. It's worth every penny. Or just check out Programming Interview Questions | CareerCup (but I still prefer the book). But to actually answer your question: When I was interviewing (as an interviewer), my favorite question was: "Give me a function that takes a string as an argument and returns 'true' if the parenthesis in the string are balanced or 'false' if not" (where "balanced" means it's like a properly formatted LISP statement).I would normally include an example of a "balanced" input string and an invalid input string. This problem is pretty easy to solve with the right data structure, but that's not the whole point. Once it's solved, I would add other types of parenthesis (brackets, braces, and greater than/less than symbols sure look like parenthesis) to see if they can extend their code without it get too ugly. There are also the standard questions about the efficiency of the given solution and all that standard stuff. There actually is another follow-up to this question that I never got to ask (usually getting this far took the entire allotted time): How would you make this work if the input string was a stream that did not all fit in memory? How would you make a solution work if you could split up the input string and process it using multiple machines (assuming getting the split up input to each machine is "free")? 