If I am slow at programming & problem solving specifically, does that mean I am not going to improve or it just needs more practice?If I need practice then what kind of problems I should practice. Note: When I say programming I don't mean web development which seems much easier than programming involving stack, queues, trees, graphs, algorithms, mathematical knowledge etc.
If you go to college it will flesh out your knowledge of this a lot. There are some resources to practice certain skills (Project Euler comes to mind for working with algorithms). Honestly it reminds me a lot of getting good at the game Portal. You have to assess what you need to do, then start making steps, maybe test something out, then you get a whole chain going and then you're done. Do it enough and you develop an intuition so you can look at a problem and see roughly how to solve it in big chunks. I will say that in the real world, it doesn't matter if you're slow. We don't have to write that many actual algorithms. Heck, if I wanted to, I could spend an entire day working on an algorithm on a white board. In contrast with the rest of the project, it's a small piece time wise. Speed is mostly just for coding interviews and to show that you know the concept. I wouldn't worry too much about it. 