What is difference between EMPTY and NULL string in Java?
In Java, besides the native types bool, int, long, etc., everything is an Object. When you define a Object variable, it points to the object, to null, or in certain cases can be uninitialised. String empty = ""; // is String empty = new String(); String foo = "foo";Â  // is String empty = new String("foo"); Both point to a String object, one with no characters (length=0), the other to the "foo" three characters. The uninitialised case is a special one. When you're defining a class property, java auto-initializes the variables, but if they are variables inside your method, they aren't. class Foo { private String s; // defaults null private int i; // default zero } But void foo() { String s; int i; System.out.println(i); // won't even compile, because i is uninitialised System.out.println(s); // won't even compile, because s is uninitialised } 