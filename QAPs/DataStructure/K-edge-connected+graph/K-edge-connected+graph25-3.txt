Do red coders and targets read the full question in a SRM?
I have many red coder friends, and there're many strategies to read problem statements they always do. I think my strategy of reading problem statements too. So let me explain some sensible examples. I'll explain my strategy toward reading problems at first. I sometimes skip the first one or two paragraphs which contain only backgrounds or character settings in some kind of contests. For example, ICPC is famous that its statements contain many paragraphs which are not related to the core of the problems. However, in recent SRM contests, I don't think that there're many paragraphs which we don't have to read. The length of problem statement in SRM is getting shorter and shorter these days, so I think that it makes not so much difference to read whole problem statement. There's another key point: you should be able to predict the problem statement by looking at sample inputs and outputs. If you've solved thousands of competitive programming problems, you can guess what you have to do or what kind of problem it is by seeing samples. So if you've solved plenty of problems, it may be also good to check the samples at first. By the way, one of my friend has another approach to understand the statement quickly. He uses a translation software in order to read the statement in his native language. In fact, he is very poor at English, so I think that he couldn't be able to understand the problems without translation machine and sample input/output. He also says that it is important to check sample cases. I heard that he checks sample input/output and guesses what he should do in the problem as soon as he opens the problem. In my opinion, it is very important to practice solving problems in order to read problem statements quickly, and of course, to solve the problems in a minutes. In fact, I often submit a solution for Div1Easy without stopping, that is, I read the full problem statement, and then write the code which doesn't contain any bugs without thinking and submit it at once. If I can do it, it is still very fast even though I read the full problem statement. So the most important thing is to improve your problem solving skill, not to make superficial strategies. 