How do the top competitive programmers represent tree or graph data structures in their c++ code?
Graphs and trees are mostly represented by adjacency lists. In c++, an adjacency list is usually implemented as an array of int vectors: vector<int> v[SIZE]; where v[i] represents the list of neighbors of the node labeled with i, and SIZE is the number of nodes in the graph. Sometimes graphs are implemented with adjacency matrices, which has pretty much only one reasonable way of implementing so I won't go into it. You should only choose the adjacency matrix implementation if the number of nodes is smallÂ  (on the order of thousands). And typically when this is the case the input contains some form of an adjacency matrix. 