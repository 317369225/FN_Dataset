Can Floyd-Warshall algorithm be used to find shortest cycle in an undirected graph?
In the Floyd–Warshall algorithm for finding the shortest paths in a graph, you initially set dist[u][v] = [math]\infty[/math] and dist[v][v] = 0. In other words, the distance from any vertex u to vertex v (u ≠ v) is infinity, and the distance from any vertex v to itself is 0. In this case, we want the path to end at the starting vertex, so instead of setting dist[v][v] = 0, we set dist[v][v] = [math]\infty[/math]. This means that from v, we want the shortest path to v, which is the same as finding the shortest cycle which includes vertex v. Once we have all of the values for dist[v][v] after running Floyd Warshall, we have the length of the shortest cycle in the graph containing vertex v, for all v. To find the shortest cycle in the graph (which need not include a particular vertex v), we simply want to find min(dist[v][v]), which will be the shortest cycle. Edit: This will only work if there no negative cycles, which is an assumption for Floyd Warshall. 