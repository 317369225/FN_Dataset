What are some difficult problems with simple problem statements you have encountered in the field of competitive programming?
Here are some one- or two-liners I've enjoyed, roughly in order of difficulty: Given two sets, each containing up to 50 elements, determine whether their closures under the LCM operation are equal. You have 100,000 cows, each with a specified strength and weight. A cow can support a stack of cows on top of itself only if its strength is at least the combined weight of that stack. Determine the greatest number of cows you can stack, one on top of each other. Given a set of up to 50 numbers, count the number of subsets the XOR of whose elements is at most a given limit. Given a set of up to 50,000 points, no three of which are collinear, count the number of subsets of size 3 that form a triangle containing the origin. Given a graph on N<=20 vertices, determine the spanning tree whose set of edges has the smallest standard deviation. Given a list of up to 1000 circular rocks in a rectangular river, determine (to within 10^-4 absolute error) the radius of the largest circular raft that can sail down the river. Ryan Zhou posted it already, but I love the pie store problem for the elegance of the statement. Despite its seeming simplicity, however, it's left me stumped for about a year now: "A nearby pie shop is having a special sale. For each pie you pay full  price for, you may select one pie of a strictly lesser value to get for  free. Given the prices of all the pies you wish to acquire, determine the minimum total amount you must pay for all of the pies." Updated 89w ago • View Upvotes