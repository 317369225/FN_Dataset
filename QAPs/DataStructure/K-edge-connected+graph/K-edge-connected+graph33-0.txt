What is the best machine learning algorithm for community detection?
A sort of precursor to community detection is clustering coefficient. It can be of 2 types - local and global. One simple way of measuring it is by finding out the number of triangles (or triplets) formed in the network. If j and k are any two neighbors of node i that are connected, then the local clustering coefficient of node i is defined as: where, ejk is the number ofÂ  edges that exist within the neighbors of node i, and ki is the degree of node i. A triplet consists of 3 nodes that are connected by either 2 (open triplet) or 3 (closed triplet) undirected ties. Then, the global clustering coefficient is defined as: I'm stating this because often this proves to be very important in dividing social networks into groups, without having to go for more complicated clustering methods. Now, let's come to community detection. Roughly, community detection methods can be divided into 4 categories: Node centric. Group centric. Network centric. Hierarchy centric. An important method of node centric community detection is called the Clique Percolation Method (CPM). A clique of a graph of size k is the maximum complete subgraph in which all the k nodes are connected to each other. It is an NP-hard problem to find the maximum clique in a network, so we use CPM to find cliques of a given size k. In group centric community detection, we make use of density based grouping algorithms like local search, heuristic pruning, etc. For example, in a method called called the "gamma-dense quasi clique", we define a threshold gamma for a group based on experiments or other empirical methods, and if the group satisfies the equation: then that group is considered as a cluster. Network centric community detection can be done by a wide array of methods. The basic idea in all of them is to partition the nodes of a network into disjoint sets. One of the most important, and famous, algorithms used works on vertex or node similarity, and is called the K-means algorithm. It is in essence a 3-step approach: Consider the connections as features. Use Jaccard similarity or cosine similarity to calculate the similarity of the nodes. Apply classical K-means algorithm to divide it into clusters, which is: One of the important methods used in hierarchy centric community detection is called the Divisive Hierarchical Clustering (DHC) algorithm. The steps involved are as follows: For every edge, compute its Betweenness centrality. Remove the edge with the highest betweenness. Re-compute the edge with the highest betweenness. Repeat until no more edges exist, or until specified number of clusters are produced.Hope this helps. Thanks for the A2A. 