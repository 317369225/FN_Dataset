What is the minimum number of internal nodes for a red-black-tree with height k of black nodes, minimum number of internal nodes for an AVL tree with height h, and minimum number of internal nodes in a BST with height h? Which one is better for databases?
For all binary trees, including the ones you mention, the number of internal nodes is exactly one less than the number of leaves. The way to see this is as follows: start with a single leaf. Then build your tree by repeatedly replacing a leaf with an internal node and two leaves. You can get any tree you like that way, but under a substitution the number of internal nodes and the number of leaves are both incremented by 1. So the number of internal nodes is not what determines the difference in their performance for any particular database application. 