Write an algo to compare two string such that k mismatch are allowed. Suffix Tree?
The first step is to define your problem precisely (specify). From the examples, it seems that you want to compute whether the Levenshtein distance is less then a given small natural number k.The obvious solution is to compute the Levenshtein distance in time and space proportional to the product of the length of the two strings, using the Wagner–Fischer algorithm: R.A. Wagner and M.J. Fischer. 1974. The String-to-String Correction Problem. Journal of the ACM, 21(1):168–173. and then test whether it is less than k. (This is the answer hinted to& by Barak Cohen). However, if you look at the proof of the algorithm, you can see that the search can be truncated as soon as we are above k, giving better time and space for small k. Assuming this is indeed your specification, the two other answers are not correct. 