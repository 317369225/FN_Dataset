How can you efficiently determine the k-th maximum element in an binary search tree?
The simple way would just to do a reverse in-order traversal.Â  Something like counter = 0function traverse(node)  if(node has right child)    traverse(right)  counter += 1  if(counter == k)    finish //node is what you want  if(node has left child)    traverse(left) In a tree with n nodes, the above has a worse case of n+n-k steps (tree is just a linked list with the root being the smallest, must go all the way to the end and come back) and a best case of k steps (tree is a linked list with root being the largest, just have to step to the left child k times) 