How can you efficiently determine the k-th maximum element in an binary search tree?
The selection algorithm [1] will find the kth largest of n elements in O(n) time, but it works on an initially unordered set of elements. If you are building a binary search tree, you can do a lot better: just keep a pointer to the right-most element (the maximum), then start the in-order traversal from there -> O(k) time. If you know k in advance and want to do better (say for larger k=n/c for some constant c), one can keep track of the kth largest element as elements are inserted into the tree. That way, you can answer queries for a specific k in time O(1). hth. [1] http://en.wikipedia.org/wiki/Sel... 