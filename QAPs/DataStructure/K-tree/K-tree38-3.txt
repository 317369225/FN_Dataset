What is there difference between [math]O(n)[/math] and [math]O(\log n)[/math]?
To feel/understand Logarithms, I would recommend you to watch the below video. Now answer to your question in  layman's term  - O(n) - When you have to iterate/ touch /access every given n element. Example - Iterating every element of  following array -  | 10 | 11 | 1 | 21 | 101 | 0 | -1 | 99 | 2 | O(logn) - When at each iteration you can reject /discard half of the given ( remaining )  n element Example - | 10 | 11 | 1 | 21 | 101 | 0 | -1 | 99 | 2 | 1st Iteration - Rejected 2nd Half and remaining elements to iterate | 10 | 11 | 1 | 21 | 2nd Iteration  - Rejected 1, 21 ( half of the remaining element ), remaining element -  | 10 | 11 | and so on... Binary Search tree - Access / Insertion / Search is O(logn) 