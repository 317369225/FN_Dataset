What are some cool things that are easy to do in Haskell but hard to do in other languages?I'm curious if I should learn Haskell for fun.
It is easy to reason about your program's correctness just from its types.  In a Haskell program your types (assuming you're not using unsafePerformIO) do not lie to you: f :: a -> b is always precisely a function that takes something of type a and returns something of type b.  It is never a thing that looks at some global variable and gives you one kind of b in one circumstance and another kind o f b in another.  Equal inputs always give equal outputs. On the other hand, it is easy to mislead oneself when reasoning about the time or space behavior of your Haskell program.  It is easy to have too much or not enough laziness and incur the associated costs.  The mental model of execution for strict languages is a little more familiar for most programmers. Updated 10 Jul 2012 • View Upvotes