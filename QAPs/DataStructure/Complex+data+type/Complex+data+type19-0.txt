What are the most complex data structures used in the Linux kernel?
Some data structures heavily used in linux kernel are 1) Linked Lists : Starting simply, the first data type we will explore are doubly linked lists. These are implemented by a single include file, <linux/list.h>. 2) RB-trees : next data structure is the RB-Tree . This is a semi-balanced, binary search tree that generally provides order "log(n)" search, insert, and delete operations. It is implemented in <linux/rbtree.h> and lib/rbtree.c. It has strong similarities to the list.hlists in that it embeds an anchor (struct rb_node) in each data structure and builds the tree from those. 3) Radix tree: next data structure is the Radix tree. The Linux kernel actually has two radix tree implementations. One is in <linux/idr.h> andlib/idr.c, the other in <linux/radix-tree.h> and lib/radix-tree.c. Both provide a mapping from a number (unsigned long) to an arbitrary pointer (void *), though radix-tree also allows up to two "tags" to be stored with each entry. For deeper understanding you can follow either of the books : http://www.amazon.com/dp/0596005... http://www.amazon.com/dp/0470343... Updated 24 May 2014 â€¢ View Upvotes