What are some good ways to replace a Python module or function with a RESTful API call?
To answer the "apps talking to each other": object programming is about "messaging" not about objects. Making API calls is messaging and, in your case, seems relevant. But why limit yourself to REST over HTTP ? Messaging makes more sense with RPC or PubSub schemes over websockets. To answer the: "let them think they are still talking..." I would recommend you to look at the proxy design pattern. Call the proxy which will talk either to local module or to the API. Good python design patterns list here: faif/python-patterns. There is an awesome open source project that would probably fit your needs: Crossbar.io router + WAMP protocol + Autobahn components. Those components (think services) can be written in JS (node and browser), python, C++, php, java, etc. It provides RPC & PubSub scheme over websocket, independant components, etc. If you want to write your new code in python you can also look at onefinestay/nameko and kashifrazzaqui/vyked. Python is now async ready. Less reason to switch to node. 