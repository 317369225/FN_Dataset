Why do stack variables contain garbage values? Is there any way we can assign our whole stack to NULL?Why do local, stack-based variables have garbage values by default?
Originally Answered: Why will automatic variables contain garbage if it is not set?You can easily understand why if you start understanding memory allocation in C. When you request a memory location for some variable, the required space is allocated from the memory to the variable. But the memory is not cleared or reset. So that memory holds whatever value it was last set to. And to us, since it doesn't mean anything, we call it garbage value. In many other situations like heap allocations or even stack allocations, many compilers may reset the memory to 0s before assigning it to your variable. So instead of "garbage value", you get 0. You can also use memset() function to reset the memory location to some value, say 0. 