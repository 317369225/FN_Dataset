Apart from introduction of object oriented programming, what other changes were made in c++ with regard to c?
C++ is a whole new language which evolved from C While C supports only imperative programming , C++ is a multi-paradigm language.  See this  paper by Bjarne Stroustrup Page on ufl.edu 1.) Lambdas aka anonymous functions : What is a lambda expression in C++11? 2.) Widely used STL's 3.) Generic objects and stuff with templates aka metaprogramming Best introduction to C++ template metaprogramming? 4.) compiler type inference of variables, my favorite auto keyword auto specifier (since C++11) 5.) much more awesome stuff to come 6.)Many awesome and efficient algorithm in the <algortihm> libraries 7.) Alternative method of typedefing stuff  Instead of doing this   typedef int MyInt; You could do using Myint = int; 8.) Smart pointers:  Smart Pointers - What, Why, Which? and Smart Pointers (Modern C++) 9.) New thread library for c++, making it a cross platform option C++ 11 thread simple example 10.) Plus, c++ community is working hard to bring new features to c++ An overview of C++14 language features and C++17: I See a Monad in Your Future! 11.) Embed URI's  in c++ code without commenting  Revisions Thanks for the A2A :) 