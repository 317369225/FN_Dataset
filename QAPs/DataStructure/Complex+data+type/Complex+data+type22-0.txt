What is C++ good at that cannot be achieved in Java?Follow up question: What are the types of applications that can be built in C++ but not in Java?
Directly addressing memory, for one.  For an application where a ADC and/or DAC is memory-mapped, C and C++ can access them easily in a single step.  Getting Java to do it is trickier. Another thing C++ is good at is using little system resources.  Java utilizes a garbage collector.  C++ opens you up to stupid mistakes with memory, but if you're good at managing memory a C++ program can take up less resources. C++ is good at letting you screw up, too. Added after the fact, thanks to comments from others: C++ also supports templatized code, allowing you to create arbitrary containers and algorithms that use arbitrary data types.  In conjunction with that, it also supports operator overloading.  Say you have a complex number data type, with a real part and an imaginary part, both represented as double-precision floating point numbers.  In Java, you'd have to implement .Add(), .Subtract(), .Multiply() and .Divide() methods, and write all your own algorithms for sorting, sum-over-set, and anything else you'll want to do with that.  With C++, all you'd have to do is overload the operators and then you can use the standard template library, which is much shorter than rewriting the algorithms. 