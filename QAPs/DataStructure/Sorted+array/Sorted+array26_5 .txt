Given an array of positive integers, how can we convert it into a sorted array with minimum cost using the decrement and deletion operations (Decrement operator cost = 1, Deletion operator cost = value of the element)?For example: Consider the array 4,3,5,6 . We can sort it by decrementing 4 and thus sorted array will be 3, 3, 5, 6. Minimum cost is 1 for sorting in this case. Consider the array 10,3,11,12. We can sort it by deleting 3 and thus sorted array will be 10, 11, 12. Minimum cost is 3 for this case.Following two approach in combination can be used: 1. Reduce this problem to minimum inversion count problem and than when you are swapping the two elements see which will give the minimum cost delete or decrements, for finding this minimum cost you can use dynamic programming methodology/paradigm . because this problems resembles/has the same scenario as Edit distance in two strings. Why dynamic programming and not greedy approach, try to take few examples you will get clear picture. For minimum inversion count you can use the merge sort methodology. for further detail you can refer to: Count Inversions in an array - GeeksforGeeks Convert array to a sorted one using only two operations ( for detailed solution) 