Given a partially sorted array, what would be the optimized algorithm to find the index and generate the sorted sub array?Eg. Consider [5,2,9,4,7,8,0] The output must print [4,7,8], [7,8]What you're looking at is nothing but finding increasing subarrays in the given array so all you have to do is maintain the starting index and keep checking if the next number is greater than the previous number and print the subarrays created along the way.  1 2 3 4 5 6 7 8 9101112131415161718192021222324252627 #include <cstdio> #include <iostream> using namespace std; int a[1000]; int main() { 	int n; 	cin>>n; 	for(int i=0;i<n;i++) 		cin>>a[i]; 		 	int index = 0; 	for(int i=0;i<n;i++) 	{ 		if(a[i]<a[i+1]) 		{ 			for(int j=index;j<=i+1;j++) 				cout<<a[j]<<" "; 			cout<<endl; 		} 		else 			index = i+1; 	} 	return 0; } Here is a sample input output 7 5 2 9 4 7 8 0 1 2 9 3 4 7 3 4 7 8 Hope this is what you were looking for 