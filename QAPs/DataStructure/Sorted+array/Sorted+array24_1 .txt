Given two sorted lists of size m and n, what is the fastest algorithm for computing the kth smallest element in the union of the two lists?What's the solution to the generalized problem: Given m sorted arrays each of size n, what is the fastest algorithm to find the kth smallest element in the union of the m arrays? (I can think of a m log m + k log k algo if k<m andÂ  m log k / log (m/m-1) (generalizing Cosmin's approach) otherwise.)Another solution that does log k comparisons: Compare the 2 middle elements. Assume A[k/2] < B[k/2]. Reduce the problem to finding the k/2th element in A[k/2:] and B[0:k/2]. Ben's solution might take 2 log k comparisons. 