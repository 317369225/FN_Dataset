What's the best way to delete duplicates from a sorted array in time and space?I guess the interviewer forgot to mention(may be intentionally) that you can do this parallely with any number of processors you want to use. I agree it is not possible to do it in the conventional way (sequentially) but it is possible to do this using processors (working parallely) The method is similar to parallel prefix sum (you can read about it here http://ocw.mit.edu/courses/mathe... ) for this case we have to replace the sum function with a compare and delete function. consider the following image (replace '+' with a '==' to function Each node (i.e. processor) compare its children if equal deletes one of them (depending its id is odd or even) and passes the number to parent ,if not then it compare and checks it against the other neighbour as shown below Thus at every level you will making two passes & the number of levels is log(n) thus done in iteration with no extra space. It may seem impractical to use processors to do something but then trend is toward mufti-core systems and you can always simulate a parallel algorithm for 'n' processors on processors in times where is the time complexity the original algorithm (reference: http://pages.cs.wisc.edu/~tvrdik...) 