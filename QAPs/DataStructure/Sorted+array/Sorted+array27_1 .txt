What will be the complexity of quick sort if we insert an element at some random position in a sorted array and then ask it to sort again using quick sort?For example an array like this: 2, 4, 6, 55, 7, 9, 12, 15, 17, 20, 22If you use randomized selection (for the pivot), you still run in O(n log n) with high probability. The quicksort component of libstdc++'s std::sort() doesn't use randomized selection (and instead uses average of 3 for pivot selection), but will still run in O(n log n) because it uses Introsort. 