Given a sorted array, how would you find two numbers whose sum is equal to a given number in O(n)?
Let us first state the problem. We are given an array A[1]≤…≤A[n]  A[1]≤…≤A[n] and a number x and we need to check the existence of a pair of indices i  i and j  j such that 1≤i<j≤n  1≤i<j≤n and A[i]+A[j]=x  A[i]+A[j]=x . The article explains the O(n)  O(n) solution that works using hashing. It does not assume that the input array is sorted. It uses an additional O(n)  O(n) space and it has linear time as search and addition in hash sets are assumed to take constant time. Let us consider another solution that takes also linear time but do not use any additional space. If n=2  n=2 then our problem is trivial and it is enough to check whether A[1]+A[2]=x  A[1]+A[2]=x or not. This will be our base case. Assume that n>2,  n>2, then compare A[1]+A[n]  A[1]+A[n] ... (more)