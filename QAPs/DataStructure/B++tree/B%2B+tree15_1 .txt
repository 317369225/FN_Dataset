Why mysql uses B/B+ trees and not Fibonacci heap structure?Hi all, i agree with B+ tree reduces IO time. My question is, there are better structures like Fibonacci heap. which will reduce a lot of time for insertion, deletion, union etc. Can some one explain why B/B+ tree was a choice for mysql creators.File seek time while reading content from the disk is a very expensive operation. B/B+ trees store a large number of elements in each of their nodes(only leaf in case of B+), thereby increasing the number of elements read in every seek. Also nodes holding more number of elements produces flatter trees, and this improves the search, insertion and deleting times in the data structure (Asymptotic run time of O(log n - base k, where k is the order of the b tree). For example a B-Tree of height 3 can hold more than a billion elements. Pretty huge, eh? Fibonacci heap is a variation of the binary heap, and unlike the latter data structure supports constant time insertion O(1) whereas it is O(log n) for binary heaps. Now the Big-O notation hides a high valued constant for the Fibonacci Heap insertion, which means that in absolute terms it is rarely much faster than Binary heaps. So Fibonacci Heaps are mostly of theoretical interest, and are not widely used. Also Binary heap is a not the right data structure for disk based operations for obvious reasons such as height(more number of seeks), cost of maintaining the tree to be balanced etc. So yeah that's why B/B+ trees are widely used in real world applications. 