What is the fastest algorithm to find the largest number in an unsorted array?So the question was not what is the Big O notation of the fastest algorithm. It was what is the fastest algorithm! Or perhaps a better way to restate the question for this audience is, can you optimize the high water mark algorithm? I would argue, if you know the data well, it's possible to have an algorythm that is faster then the high water mark. (IE... doing the compare on every piece of data). Consider the data is random 64 bit unsigned integers, on an intel platform. One method would be to take 8 integers at a time (one cache line full), and (bitwise) or them together. This will provide you with the highwater bits, not the highwater value. If the highwater bits are greater then the highwater value, you iterate through the data already in the cache, and see if you have a new highwater value. Also an interesting conversation topic, as it was mentioned this is embarrassingly parallel, but on a GPGPU it is by no means trivial. How would you do this on a GPGPU? Filtering? Z-Buffer operations? Lots of possibilities here. 21.8k Views  View Upvotes