What is the space complexity of an ArrayList containing references to TreeNodes?It takes up O(n) O(n) space. Let's look at how the data is being stored. When you create a TreeNode using the new keyword, it allocates space on the heap that holds the TreeNode's data plus some additional bookeeping information. You are correct that the number of TreeNodes allocated on the heap is only 1, and this portion of the storage is only O(1) O(1) . Internally, the constructor returns back a memory address indicating the location of the newly allocated object. Additionally, you are also allocating a list of size n. A list of size n internally contains an array of size at least n. An array of n objects consists of n contiguous memory slots that are each large enough to store any memory address that could be returned from a constructor. A memory address is O(1) O(1) space by itself, so the total space usage of the array is O(n) O(n) . To give more of an illustration of what's happening, think of it this way: you are returning back some memory address from the constructor, and then you are creating a list that repeats that address n times. If the memory address of the TreeNode object is 1000, you're storing a list that looks like [1000, 1000, 1000, 1000, ... , 1000]. It's redundant, yes, but hey, you asked the program to add the same value to the list n times. 698 Views  View Upvotes