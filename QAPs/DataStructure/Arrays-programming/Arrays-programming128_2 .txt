Why don't you need the '&' operator to pass the address of a string literal?Why is char *p = "Quora" valid but not char *p = &"Quora"?Strings are, as others have pointed out, char[] (C) and const char[] (C++), that is array of chars. When you do char *p = "..." the array will undergo pointer decay from array-of-char to pointer-to-char addressing the first element in the array. When taking the address of the array, pointer decay does not take place, instead you will get an pointer-to-array-of-sizeN (in your example N=6, 5 characters + terminator), e.g. <const> char (*)[6], which is not the same as a a pointer to char. 253 Views  View Upvotes  Answer requested by Sourabh Khandelwal and Deepu Jha