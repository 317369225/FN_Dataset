How can we understand which array is smaller, before starting to code, if we have 2 arrays?Although Sergey's answer is good, I think it's open to a little bit of improvement. In particular, we can simplify code that uses the function (though at slightly increased complexity of the function itself):  template <class T, size_t m, size_t n> void printUnion(T (&arr1)[m], T (&arr2)[n]) { std::sort(arr1, arr1+m); std::sort(arr2, arr2+n); std::set_union(arr1, arr1+m, arr2, arr2+n, std::ostream_iterator<int>(std::cout, " ")); }  With this, calling the function is a bit simpler:  int arr1[] = { 1, 2, 3, 4, 10, 12, 14 }; int arr2[] = { 2, 4, 6, 8 }; printUnion(arr1, arr2);  We don't need to explicitly compute and pass the size of each array as a parameter--the compiler does that for us automatically. The other size of this, however, is that the inputs are restricted to actual arrays, not (for example) pointers to data allocated on the free store. 647 Views  View Upvotes