Does the time needed for sorting an array of integers with Arrays.sort in Java depend on the elements of the array?I was working on a problem in Codeforces recently and encountered this problem. (Already AC after submitting with Java 8) Link: Submission #9080519 - Codeforces Although test case 48 and 51 have the same N, their run time are very different. Any idea why?Arrays.sort() uses merge sort or a tuned quicksort for that much data (see Merge sort). I suspect that it's the tuned quicksort. If the quicksort had not been tuned, you would see much, much worse numbers for the already-ordered data. Quicksort is normally O(n log n), but the worst case is O(n^2). Sorted data (either forward or backwards) is generally worst case: quicksort works by picking a number (the pivot) and splitting the data into piles of "everything less than the pivot" and "everything greater than the pivot." The pivot is arbitrary, so you usually just pick the first number. That's disastrous when the data is already sorted: it sorts into "nothing" and "everything but the pivot" over and over. If I understand correctly, "tuned" means any number of things that might have been done to avoid the O(n^2) case. I'm not sure what the specific tuning was, but it appears to have worked. 167 Views