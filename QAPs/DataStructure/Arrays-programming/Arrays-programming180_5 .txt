What is the difference between an array and a vector?A vector is just an array wrapped in a class that tracks certain details about it and provides methods to make it behave the way we all wish it would. An array is a primitive type, based on C, which is based on assembly, which is based on hardware, it is very low level. A vector introduces the array to OOP by wrapping it and providing logical accessors and mutators (aka getters and setters). The main differences, a vector knows how big it's array is, you don't have to track the size, because the vector tracks the size for you (advantage: you can't go past the end of your vector like you can with your array), the vector can use a portion of the array it is wrapping, without using the entire array, but it will behave as if it is using the entire array, this gives the illusion of changing size without really affecting quality. It also allows you to just add new items and the array will appear to grow to accommodate this. This in turn makes it able to operate as a stack without writing additional methods. The vector can also increase the size of it's array (ie allocate memory for a new larger array, copy all the elements over, and free the old array), so you can treat a vector as if it is a variable lengthed array (as we pointed out above, it doesn't need to use all the indexes). 1.1k Views