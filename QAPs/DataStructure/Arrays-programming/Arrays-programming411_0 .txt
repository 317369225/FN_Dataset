How do I randomise different strings of an array in C?Suppose i have 10 different strings in an array. Now i would want to display 5 random strings among 10. How do I do it?I would probably use an adaptation of the Durstenfeld shuffle algorithm: #include <stdlib.h> #include <stdio.h>   #define N_STRINGS 10 #define N_PICKS 5   char* strings[] = {"aba", "bcb", "cdc", "ded", "efe", "fgf", "ghg", "hih", "iji", "jkj"};   int main(int argc, char* argv[]) { sranddev(); for (int picks = 0; picks < N_PICKS; picks++) { int pick_index = rand() % (N_STRINGS - picks); printf("%s\n", strings[pick_index]); strings[pick_index] = strings[N_STRINGS - picks - 1]; } return 0; } In English, this code picks a string using a random index between 0 and 9, prints it and then overwrites it with the last one in the array (index 9). On the next iteration it will use a random index between 0 and 8, overwrites the chosen string with the one at index 8, and so on until the desired number of picks is generated. Note that the number of picks should be less than the total number of strings in the array. If you want 10 random picks out of an array of 10 strings, you really want a shuffle and you should use the original Durstenfeld algorithm or some variation. Also note that in the code above the original array will be changed, so you may prefer to operate on a copy. In the Durstenfeld in-place shuffle every picked string is actually swapped with the elements at the end of the array, and the number of picks equals the total number of elements minus 1 (thus preserving all original entries but in a different, random order). Check Fisher–Yates shuffle on Wikipedia for more information. 253 Views · View Upvotes