How can I find the index of an element in an array in C?For example, if I have an array with 1000 elements with all the first 1000 prime numbers but is stored in an unsorted way. Is there any way to find the index of a particular prime number without searching through the whole array for the element?(EDIT: Looking at other answers, I may have misunderstood the question. Did you mean finding where a given element would be in a sorted list, from a random list? That’d take… actually sorting the list, unfortunately, short of an algorithm for how it’s generated.) Forgive my lack of precision, it’s been a while since I had to think about how C works, intricately. If I recall correctly, arrays in C are stored sequentially in memory. Knowing this, if you know the size of each element in the array, as well as the starting address of the array, you have all the info you need - it’s just arithmetic from there! Put simply in pseudocode, “[(address of element) - (address of index 0)] / (size of each element)” is your index. In fact, referencing arrays in C basically does this calculation to find your value - it doesn’t internally store metadata about the array other than starting address and element size. It’s why you have to be careful in lower level programming languages - for example, if you had an array “arr” with only 3 elements in it, you could still access “arr[10]” - it would just give you whatever garbage data is at that index, even if you never assigned it. 180 Views · View Upvotes