Why do array variables not have an address?Array variable store the address of first element of the array, so in a way the array variable behaves as a pointer, if so, they must have an address but when you print the address of the array variable you get the address of first elements itself. Why so?If a is an array, a doesn't point anywhere because a is not a pointer. Given int a[42];, a names an array of 42 int objects; it is not a pointer to an array of 42 intobjects (that would be int (*a)[42];). &x gives you the address of the object x; if x is an array type variable, then &x gives you the address of the array; if nothing else, this is consistent with the behavior of & for any other object. A better question would be "why does an array (like a) decay to a pointer to its initial element in most cases when it is used?" While I don't know with certainty why the language was designed this way, it does make the specification of many things much simpler, notably, arithmetic with an array is effectively the same as arithmetic with a pointer. 65 Views  Answer requested by Sourabh Khandelwal