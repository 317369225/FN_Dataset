If I can't add any thing to a list declared as ArrayList<? extends Number> then what is the use of this declaration?I was reading and found that we cannot add anything in a collection defined with a question mark in it as this means an unknown type. If this is the case then what is the purpose of such a declaration in java collectionsI really liked the question Yes, there is a use of this type of declaration, esp during runtime. There is reason that compiler restricts us from adding data to such list. Consider a scenario where you need a list of instances of a class which extends Number. Obviously, this class could be any class which ultimately extends Number. E.g. MyNumber extends Number. If you try to put list.add(new MyNumber), compiler does not understand that MyNumber is actually extending Number or not. Therefore the operation is restricted. However, when you get such list during runtime, you can safely cast each instance in it in any subclass of Number. Please have a look at following code. package test;  import java.util.ArrayList; import java.util.List;  public class TestWildCard { public static void main(String[] args) { List<? extends Number> a = new ArrayList(); // a.add(new Integer(1)); //-> Not Allowed  a = getListOfIntegers(); for(int i=0; i<a.size(); i++){ // Safely cast to any subclass of Number Integer number = (Integer) a.get(i); System.out.println(number); // Following is not allowed as the TestWildCard does not extend Number // TestWildCard element = (TestWildCard) a.get(i); } }  private static List<Integer> getListOfIntegers(){ List<Integer> a = new ArrayList<Integer>(); a.add(0, new Integer(1)); return a; } } 154 Views  View Upvotes  Answer requested by Pulkit Gupta