How do I write a program that count the occurrence of each element in an int array of size 25?For C language!Instead of providing just an implementation I’ll take a slightly more general version of this problem, where the number of elements is generic, to do some SW Engineering considerations First let’s list the elements you will have in your system Array Description Stores a generic number of elements of homogenous type, which in this case is int, each associated to unique index Interface Provided Load Data Get Element by Index Now you want to count the number of occurrences for each element in the array However you have no prior information about the number and value of the unique elements Furthermore I guess you might be interested in an efficient solution hence you shall avoid going through the array more than once So basically you need a Data Structure providing a key-value interface so that you can associate to a “label” (i.e. a unique element in the source array) a numeric value representing the number of occurrences. With this Data Structure you can go through the source Array only once and increase the counter for each unique element encountered. This Data Structure is an “associative array” or in a C++ fashion a std::map and more specifically it is a std::map<int, unsigned int> as the keys are elements in the Source Array hence int type whilevalues are the number of their occurrences hence they can be effectively represented by unsigned int type. While C++ Abstract Machine provides the concept of a key-value container (which is efficient and scalable) the C Abstract Machine does not hence you may want to implement your own. Let’s also explore a (easier) variant of this problem: what would have happened if the Source Array would have provided an extension to the above mentioned interface consisting of a sort() method (btw this is equivalent to develop a sort of ourselves) ? Performing a sort() as preprocessing (which comes at a certain computational cost) allows for an important assumption to hold: data will be ordered. Ordering the array basically solves the initial problem as all the occurrences of a certain element are now contiguous and can be trivially counted. 305 Views · View Upvotes · Answer requested by Ukkasha Salman