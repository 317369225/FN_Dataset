Why is the first element in an array referenced as 0?A very short answer would be this: It’s a design decision to stress the equivalence of the array and its starting element: A ~ A[0] . Not all languages necessarily make that equivalence (Pascal for instance allows indexes to start at an arbitrary number), but many do for technical reasons. It simply is easier in many cases to make computations starting with 0 indexes. For instance, if you want to put a 2D matrix of width × height elements in an array of width * height elements (i. e. line by line), then you can go by starting indexing each line, each row, and the array by 1. Then computing the array position out of a given row/column is like this: i = (row-1) * width + column The awkward -1 is doubled for a 3D field to be placed in an array: i = ((plane-1) * depth + row-1) * width + column And it is gone entirely if you instead let all indexes start at 0: i = (plane * depth + row) * width + column It takes a little time to get used to not having an A[n] in an array A of length n, but that’s worth the price. 34 Views · View Upvotes