What would be an example of a programming problem that would be difficult if not possible to go without the use of array?There's nothing you can do with an array that you can't also do with a list. The main difference in Java/C# languages is that the array is usually constrained to contain a fixed number of elements which is declared by the code, and can't change once the array is allocated, whereas the lists can grow and shrink dynamically as needed, and also typically allow easy operations like "insert a new element in between two others that already exist." In the context of your question, what's really what's important about these structures is that: They store multiple pieces of information of the same type under a single label (variable name), and The structure is iterable, in other words there is an explicit means of traversing all of the elements from "first" to "last." So the simplest example of something hard to do without these kinds of data structures is a simple sort of an initial set of unordered data into a sorted order. Even slow sort algorithms still require the ability to "start at the beginning", compare against other elements, and continue until "the end." Also, swapping specific elements into the other's exact place after a comparison is required. If all you had was a bunch of individual variables such as a1, a2, a3, etc., with the names implying some order, you might be able to store all the items, but most popular languages won't give you a way to refer to each of those based on the value of an index variable of some sort, and hence writing the sort would be extremely difficult or at minimum, unwieldy to implement without an array or list. Also, the number of items you could handle would not be easy to change based on input, rather than hard wired into the program. 97 Views