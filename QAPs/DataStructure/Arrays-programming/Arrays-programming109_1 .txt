When should I use arrays instead of a database?First, a database is just a collection of structured data, and a database management system (short: DBMS) is what provides access to it. For example, a spreadsheet with data organized in homogeneous rows and columns may be considered a database, but programs like Microsoft Excel or LibreOffice Calc are surely not DBMSs. DBMSs typically are persistent, manage large-to-huge amount of data, usually mediate concurrent accesses by multiple users and possibly handle transactions (where a set of changes, for whoever else is reading data at the moment, either takes place as a whole or it doesn't take place at all). Many DBMS keep most data on mass-storage and retrieve in main memory only what's needed when it's needed. Some do the opposite (keep data in memory and sometimes they dump it onto mass-storage). Relational DBMS are what many people use for data where integrity and completeness matters (where data is organized in relations), typically via an had-hoc language like SQL. Arrays are... just arrays. You access data in them by giving a numerical index, and usually can add data at the end without using too much effort, and that's it. Everything else (persistence, searches, etc.) has to be added by you on top of that. From that, it should be quite obvious when to use a simple array and when to use a DBMS of some sort. Note that non-trivial programs tend to become more complex in time. A rule of thumb could be to use a DBMS when you plan to have more data than what will reasonably fit in memory and when you are not interested in persistence, and some simpler data structure (arrays, lists, trees, hashtables, etc.) in other cases. 204 Views