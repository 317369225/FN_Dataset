How can I find the index of an element in an array in C?For example, if I have an array with 1000 elements with all the first 1000 prime numbers but is stored in an unsorted way. Is there any way to find the index of a particular prime number without searching through the whole array for the element?No. What you are talking about is an “associative memory” concept (see Content-addressable memory), with a data to address reference. But our usual hardware does only support RAM, means random access memory, which refers address to data. There are software constructs (“collections”), that try to hide this, like the hash, the map and especially the dictionary, which associates a data with an address. But internally that’s usually done by sorting and hashing and trying to minimize the search for the data by that. It’s always a trick, it will always cost you cycles and it’s always the thing, that makes your computer slow. She’s not good at that. So, you have always to run through your array, but if you need to do this often it’s beneficial to have a bit of overhead and maintain an hash, which is like clustering your data together into chunks to find it faster. An easy “hash” would be in an address database to sort everyone by name and have a hash “A”, then “B”, so if you just know the starting of the name, as an index, you can find that address very quickly. A good search algorithm on a sorted array will find your data within O(log n) steps, like Binary search algorithm. Means you would need for 256 elements 8 steps to find it. For 1024 you’d need 10 steps and so on. Hashing is here also especially useful. 1.1k Views · View Upvotes · Answer requested by 1 person