How Numpy's array and matrix type are stored in memory?29.1. sys - System-specific parameters and functions - Python 3.5.1 documentation : All built-in objects will return correct results, but this does not have to hold true for third-party extensions as it is implementation specific. [...] getsizeof() calls the object’s __sizeof__ method and adds an additional garbage collector overhead if the object is managed by the garbage collector. numpy/numpy /* for the sys module */ {"__sizeof__", (PyCFunction) array_sizeof, METH_NOARGS, NULL}, ...which leads to... static PyObject * array_sizeof(PyArrayObject *self) { /* object + dimension and strides */ Py_ssize_t nbytes = NPY_SIZEOF_PYARRAYOBJECT + PyArray_NDIM(self) * sizeof(npy_intp) * 2; if (PyArray_CHKFLAGS(self, NPY_ARRAY_OWNDATA)) { nbytes += PyArray_NBYTES(self); } return PyLong_FromSsize_t(nbytes); } P.S. I hope you realize you called getsizeof on the same array twice :) 268 Views · View Upvotes