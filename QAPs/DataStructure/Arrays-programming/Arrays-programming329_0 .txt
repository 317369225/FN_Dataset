How are arrays echoed in PHP?The obvious answer is print_r (or var_dump) as answered by many people. But take this tip from a ~17-year PHP geek. The problem with the output from print_r or var_dump is it is not re-usable in any way. You can’t copy/paste the output into a variable definition and expect to be able to re-use it. When I’m quickly hacking through things, sure, I’ll echo things. But over the years I’ve converted and anything more complex I’ve gotten in the habit of instead using json_encode instead of print_r. And if you want it to look sexy, use the pretty print option. Here, let me show you how and why… $arr = array('one', 'two', 'three'); echo json_encode($arr, JSON_PRETTY_PRINT); Will output… [ "one", "two", "three" ] Which you can copy/paste right back into PHP to use. For example… $arr = json_decode([ "one", "two", "three" ]); print_r($arr); Will output… Array ( [0] => one [1] => two [2] => three ) This is in my opinion, far superior to print_r/var_dump, as you’ll be able to for example, take the output of a function, and re-use it over and over for debugging the next step in the logical flow of an application when you’re stepping through your code. Take it from an hardcore php veteran. :) PLEASE NOTE: This does not work on OBJECTs, for that you should use PHP’s serialize() so you can unserialize them, but then they become _nearly_ unreadable again. But if you know your data is an array or simple object and you don’t care about being able to replicate it, then it’s okay to json encode it. :) Cheers! 226 Views · View Upvotes