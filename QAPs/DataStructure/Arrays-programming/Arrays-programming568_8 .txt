I have an array of integers (both positive and negative). How can I find the smallest missing number in the array?Example: A = [5, -3, 2, 1, 0, -2, 4] return -1 EDIT: Thanks for your answers, maybe I had to say that I am not looking for O(nlogn) solution, since it is trivial. What I am looking is O(n) solution in terms of extra storage and run time.You can do it it O(n) time this way : 1. maintain two int variables - lets call them min and max. initialize them to max and min int values possible (2^31-1 and -2^31 respectively) 2. declare another int variable - lets call it sum. initialize sum to zero 3. iterate over the elements of the array - lets call the array as arr 4. For every iteration, do the following: sum = sum + arr[i]; if (arr[i] < min) { min = arr[i]; } if (arr[i] > max) {max = arr[i]; } 5. Once we are done iterating, sum will store the sum of all numbers in the array, min will store the smallest number in the array and max will store the largest number in the array So the array essentially contains all the integers from min to max (including min and max) except one missing number so the missing number = (sum of all consecutive integers from min to max) - sum 204 Views  View Upvotes