What's a good algorithm to print all permutation from an array?If the array elements are (a,b,c), O/P should be (a,b,c,ab,ba,ac,ca,bc,cb,abc,acb,bca,bac,cba,cab)You don't need a "good" algorithm to do that. The basic brute force approach is in fact the best. All you have to do is enumerate all possible subsets of this array. How do you do that ? Well, each element of this array will either be a part of any subset or won't be a part of it. Thus, you pick an element, add it to the output and recurse over the remaining array and then you remove this element and recurse again. Here is the code (I would rather advice you to try writing it on your own): int *out = new int[n];  void print(char *ar, int n){ if(n==0) return; for(int i=0; i<n; i++){ std::cout<<ar[i]; } cout<<","; }  void printSubset(char ar[], int n, int k=0){ if(n==0){ print(out, k); } func(ar+1, n-1, k); out[k] = ar[0]; func(ar+1, n-1, k+1); } 411 Views  View Upvotes