When can I use Arrays over Arraylists in Java? And why?Probably never, except when method out of your reach returns one (e.g. String#split or File#listFiles). Thing is, performance benefit is usually negligible, and not something you'd notice. If you know how many elements you'll need in advance, great, there's a constructor that accepts int. I suppose it's obvious that when you don't know the number of elements in advance, ArrayList is the only choice. In the other case, performance-wise they are pretty much equal, but Lists are more flexible and offer a better API. Also, if there is no problem if one day requirements change and you suddenly need more space. One case where arrays have an upper hand is when you're storing a lot of primitives on which you need to do some sort of calculation, because ArrayLists store objects, and those primitives will be automatically (un)boxed, maybe working a little bit slower. But as always, don't optimize prematurely, and profile before making changes. 160 Views