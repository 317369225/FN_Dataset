Why numeric arrays don't end with a null like strings?It is only in C that strings end with a NUL terminator - Such strings are called ASCIIZ strings sometimes Note : NUL and NULL are different things - NUL is the ASCII byte 0, whereas NULL is an invalid pointer value and means different things in different languages. There is no mechanism in C for a function to know the size of an array passed to it, since it decays to a pointer. NUL termination is a trick which lets functions find the end of the string. Most string functions scan the whole thing, so they might as well find the end by checking fro NUL. This is somewhat like using sentinels in a loop. The significance of the NUL at the end exists only for the standard library functions. It is a convention that is followed because C is so popular. There is nothing to prevent you from using some sentinel like NUL for numeric arrays and writing functions that use the same kind of logic to find the end of an array. The only issue is that your sentinel value is not a valid value for your array. For the same reason you cant have a NUL character inside a regular C string. I have used some varargs functions in the past that detected the end of the arguments array based on some sentinel value. In other languages, strings as well as arrays have the length attached to them, so this NUL termination is not necessary. 268 Views  View Upvotes