What is the difference between an array and a vector?One of the differences is the organization of memory . Array implements a compile-time non-resizeable array.Vector implements an array with fast random access and an ability to automatically resize when appending elements. Array does not support element insertion or removal. Vector supports fast element insertion or removal at the end. Any insertion or removal of an element not at the end of the vector needs elements between the insertion position and the end of the vector to be copied. The iterators to the affected elements are thus invalidated. In fact, any insertion can potentially invalidate all iterators. Also, if the allocated storage in the vector is too small to insert elements, a new array is allocated, all elements are copied or moved to the new array, and the old array is freed. Once a chunk of memory is allocated for an array , its size will remain fixed unless you reallocate or free the memory. Size of vector is not fixed .When new elements are inserted, if the new size of the vector becomes larger than its capacity, reallocation occurs. This typically causes the vector to allocate a new region of storage, move the previously held elements to the new region of storage, and free the old region. The vector maintains a certain order of its elements, so that when a new element is inserted at the beginning or in the middle of the vector, subsequent elements are moved backwards in terms of their assignment operator or copy constructor. Consequently, references and iterators to elements after the insertion point become invalidated. Memory accesses are similar in both (constant time). 11.6k Views  View Upvotes