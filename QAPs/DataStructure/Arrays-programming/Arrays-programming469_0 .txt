Why is the length of an array always greater than the largest index of the array?I think depends on the language. If the length of the array was equal to the largest index, then there must be exactly n items, where n is the largest index and n is the size. So that means index 1 must be the first element, index 2 .... Index n is the last element. So just create a language and have it start as one for the first index. What if we wanted to create a way for there to be length < the greatest index, again this can be done. In this language, you can have two nulls, one that signifies an end to an array, call this NULL, and one that basically signifies, nothing here, call this NONE Here we define the length of array as the number of non NONE elements in the array. Put in some non NONE elements and some NONE elements, and your done. Let's look at this a bit more before we finish, why is zero conventionally used as the first index? Well looking at C (the father of many modern programming languages today), an array is really just a variable that says, go to this place in memory. On a high level, when you create an array of size 5, It will give you some memory address, say xxxx10 And the memory around that area will look like: xxxx10: un-initialized xxxx11: un-initialized xxxx12: un-initialized xxxx13: un-initialized xxxx14: un-initialized xxxx15: character to signify end of array The variable will store xxxx10, so when you write: variable[0], that is just syntactic sugar, to mean go to the address that variable stores and add 0 to it, then give back the value stored at that address in memory. Now you may understand why zero is used and why you must declare a size during initialization in many languages. So if you want to define your own language where length is equal to size of largest index, or one where length is less, use the same notions we discussed before. Just make variable[n] to be be syntactic sugar for getting the address that variable stores, add (n-1) to it and return the value. Or just don't count un-initialized items in the length. 197 Views  View Upvotes