Is it possible to have a dynamic contiguous array without its size being fixed internally?Link which contains some details about the question: Is it possible to have a dynamic contiguous array without its size being fixed internally?No, if it comes down to the hardware. Yes if you see it from outside the object/module that it providing this, so in an abstract sense, but that’s not what you are asking. Though, we can minimize some aspects of workload. I was just thinking about that recently, to be honest, while thinking about a Brainfuck engine. First attempt, we get space of memory, finally run out of space, demand from our OS a new space which is bigger and we have to make sure we copy our current space to that and that is running further. While the OS has every time to look for memory that is not cluttered or has to remove parts of unused code from memory to defragment it, we will have just the workload, you try to avoid with that. Second attempt. Let’s say we just call a single page from our OS and put the address to it into an array. This will make the access to our memory much slower, for we have to switch at page-boundaries, get to a new page and work on, but we will eventually run out of space for our table and also have to request new, bigger space for our table and we are at point one. Even if this method is much fewer demanding on system load than the first one, we have to pay for this with enhanced access time due to missing page hits. We can of course do that with pure virtual memory and let the OS do all the work, but it is still work and load, if we do it or the OS is unimportant. At some point we have to make a copy of at least the memory table to build a new one. But of course Alan Turing had this marvelous machine with an endless tape. Sadly, that guy is dead and we know nothing about this great computer. And since then we are bound to work, with what we have. When I was thinking about the Brainfuck engine, which is in fact a Turing-esk machine, there is no need to acquire virtual space that’s between two writes. That was my though. So if I have pages “tape” in chunks of say 1024 bytes and write one byte on the first, drive 3000 to the right then I don’t need to acquire page 2, just page 3 from the OS. So the virtual tape length gets much bigger and that’s not the same like getting 50gb of virtual memory from my system. Because that would put a huge load on my memory tables even if I don’t need them. Hope this was comprehensible. Read more here: Process and Memory tutorial in Linux 174 Views · Answer requested by Muaz Al-Jarhi