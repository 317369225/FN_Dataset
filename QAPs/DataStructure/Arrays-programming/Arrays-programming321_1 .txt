What is the most efficient algorithm to rotate an array by 'k' elements?Problem Description : Solve Left Rotation I thought of 2 solutions: Erasing & Inserting elements simultaneously till ‘k’ iterations. Code @ 4wgrq - Ghostbin Getting all the elements and printing the (i+k)%n th element. Code @ 7ucy9 - Ghostbin (didn’t actually perform rotation operation - is this ok) ?import java.util.Arrays; public class RotateArray { public static void main(String[] args) { int[] arr = {1,2,3,4,5,6,7}; rotateArr(7, 3, arr); System.out.println(Arrays.toString(arr)); } public static void rotateArr(int n, int k, int[] arr) { int[] part1 = new int[n-k]; int[] part2 = new int[k]; System.arraycopy(arr, 0, part1, 0, part1.length); System.arraycopy(arr, part1.length, part2, 0, part2.length); System.arraycopy(part2, 0, arr, 0, part2.length); System.arraycopy(part1, 0, arr, part2.length, part1.length); } } 123 Views  Answer requested by Akshay S Danthi