Is there a way return an array from recursion?I have done recursion that returns one value like factorial, fibonacci number. But is there a way to return an array(list) of the values the recursion goes through. If possible can someone give an example code?Yes you can 100% Here is example int * getArray( ) { static int a[10]; int i; for ( i = 0; i < 10; ++i) { a[i] = rand(); //somethig value printf( "a[%d] = %d\n", i, a[i]); } return a; } int main () { int *p; int i; p = getArray(); for ( i = 0; i < 10; i++ ) { printf( "*(p + %d) : %d\n", i, *(p + i)); } return 0; } Explanation : int *getArray(){} Return base address of array which is variable name Use function pointer to return pointer which is base address of array Pointer = getarray(); Store returned pointer in pointer variable Base address will be stored in pointer where value. Has returned Increase value one by one up to desired limit to access value That's it Happy coding :) 852 Views  View Upvotes