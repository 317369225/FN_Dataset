Can you resize a basic array?Not directly in Java no. The idea would be to allocate a new array of the new size, then copy the contents of the old one into it. Then set the original variable to the new array. Since Java 1.6 there is a helper function which does the allocate & copy for you: java.utils.Arrays (copyOf) . That way you can turn such into a single line of code: int[] values = new int[10]; // Do some work, then notice that your array is too short. // So make a copy of it twice the length values = java.utils.Arrays.copyOf(values, 20); In some other languages it is possible to just resize the allocation (if there is nothing else allocated in the way), but those tend to be languages where you manually manage memory. It may be possible for the people working on the JVM (or other similar runtime environments) or the javac compiler to figure out that that particular copyOf is replacing the old one. In which case it "might" be possible to optimize it in order to simply change the array's length. But I would definitely not hold my breath on that score. Much more likely is if you get something like C#'s Array.Resize(T) Method. Notice that one takes the array as a by-reference parameter (the ref modifier of the array parameter, which is not available in Java and why Java cannot have such a Resize function) - so it directly affects the variable pointing to the original array. Thus the compiler writers would "know" that what's intended is to resize and not simply copy. Thus all they need to check is if there's space beyond the current size, if so just adjust the allocated size, else copy. Note also: Depending on how the memory manager stores which variable is allocated where and uses how much RAM, it may take longer to check if there's free space following the array than to simply copy the array already. This is especially true because many CPUs have optimized instructions for copying large portions of RAM around for this exact purpose. So doing such an optimization may very easily result in something which runs slower than a simple copy - main reason most such stuff isn't implemented. But really, if you constantly find you need to adjust an array's length you should definitely consider using an ArrayList instead. It does these things for you without you even needing to know about it. And it does them in pretty much the most optimal way - you'd be very hard pressed to ensure your "resizing" is faster and more robust. I.e. you'd spend a lot of time to finally make something which is (at best) the exact same thing as you'd have gotten from ArrayList. 166 Views  Answer requested by 1 person