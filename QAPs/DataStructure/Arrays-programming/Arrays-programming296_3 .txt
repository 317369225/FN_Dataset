Arrays in C: Do they know their own size? If not why do I get an incompatible pointer type warning when assigning int (*) [3] to int **int (*) [3] is a pointer to an array of 3 ints. int ** is a pointer to a pointer to int. They're different types. Of course you should be warned.  As for knowing their size, yes, fot a given value of knowing. As in, if you do not trigger pointer decay, then the size is known. E.g.,  int a[10]; sizeof(a)/sizeof(a[0]) will yield 10. size_t foo(int a[10]) { return sizeof(a)/sizeof(a[0]); } foo(a); will not yield the same as the line above. Even though you specify both array, and array-size as argument, it will be silently converted to a pointer, and when you call the function with your array, it will undergo pointer decay, 59 Views