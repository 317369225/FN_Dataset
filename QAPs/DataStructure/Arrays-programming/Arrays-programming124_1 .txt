Are arrays of arrays possible in C?I am aware that multidimensional arrays are possible, but what I need to do is pass a sub-array into another function. For example: if A=[1 2]  [3 4] I need to be able to pass [1 2] or [1 ; 3] (semicolon means new row) as an array into a function.You can think of an array of arrays as instead being a pointer to a list of pointers. In addition to the pointer of the start of the array, you need to tell the function how big each dimension of the array is, so you know how much data is at each pointed-to-row. In your example, you might dynamically allocate A as follows: int **A = NULL; int numRows = 2, int numCols = 2; int i = 0;  A = (int **) malloc(numRows * sizeof(int *)); for (i=0; i < numRows; i++) { int j = 0; A[i] = (int *) malloc(numCols * sizeof(int)); for (j = 0; j < numCols; j++) { A[i][j] = 1 + numCols * i + j; } } As long as you want each row of the input array to be the same length, and start at the first element of that row, then you can do something like this for using the array contents, and passing it in. void DoStuff(int **arr, int rows, int cols) { int i = 0, j = 0; for (i=0; i < rows; i++) { printf("["); for (j=0; j < cols; j++) { printf("%d ", arr[i][j]); } printf("]\n"); } }  int main(int argc, char **argv) { /* include code excerpt declaring and initializing 'A' */ /* ... */ DoStuff(A, 2, 2); /* print the whole array */ DoStuff(A, 2, 1); /* print the first element in each row */ DoStuff(A, 1, 1); /* print the first element of first row */  /* ... */ If you're programming in 'C' you have to get used to mentally translating between arrays and pointers. Also, don't forget to check for failures in allocation, and to free allocated resources before exiting. 937 Views  View Upvotes