Why is it necessary to use Java to initialize anonymous array?I assume you mean why you can’t use the literal part only, instead of specifying the “new myArray[]” part when you say “use Java”. Let’s assume that we have a method that takes an array as parameter: static void aMethod(int[] anArray) { // ... } If you want to call this method using a literal array you have to specify ‘new int[]’ like this: aMethod(new int[] {45, 87, 23}); You can’t do this: aMethod({45, 87, 23}); I guess Java should be able to infer the type and automatically instantiate the array when you use this form. But I don’t know why it does not. On the other hand, when initializing a variable in a single statement you can do it like this: int[] anArray = {87, 36, 75}; or like this: int[] anArray = new int[] {87, 36, 75}; Either works fine. But assigning a literal to a variable declared elsewhere requires the ‘new int[]’ part. So this will not work: int[] anArray; anArray = {87, 36, 75}; But again, this will work: int[] anArray; anArray = new int [] {87, 36, 75}; Other languages that run on the JVM are more relaxed and does a greater job at inferring types. 146 Views