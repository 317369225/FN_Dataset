What is the concept behind this Java code with arrays and adding to arrays?Concept behind this Java code with arrays and adding to arrays? It's my understanding that we cannot add to arrays. My teacher described a way that we could add to arrays but am struggling to understand. Your understanding is right: you can't add to arrays. Your teacher is presenting something that uses an array, and you can pretend is an array, but it's not an array. What it's doing instead is creating an array that, by default, has 5 items (or you can use the constructor that specifies n items). Picture what that means: you have an array with 5 numbers, and you have 0 numbers so far. Then someone gives you a number to add. You say "I have room here: I have 5 array spots, and no data yet. I'll put this number in the first spot, and now I have 1 number instead of 0." You can keep doing this up to 5 items. For the 5th, you say "I have room here. I have one spot left, and I'll put the number in it. Now I have 5 numbers instead of 4." Next time you go to add an item, it creates a new array one item bigger than the one you have. It copies all the data over from the previous array. (Note that your indentation in the for loop is bad and will probably mislead you: the only thing you're doing in the loop is setting newArray[i] = myArray[i]. The next two lines should line up with the start of the for loop. Note that the performance on this is going to be terrible if you keep adding items, because every time you add an item, you're creating a new array and copying items into it. Instead, you could have your new array have twice as many items as myArray, instead of 1 more. Also, there's a bug in the code for add: if should be if (size < myArray.length) { myArray[size++] = n; } Note that this is the same as what's going on below that. It'd be nice if you didn't have to write that code twice. Your code kind of looks like this: if (condition) { SetItem(); } else { ReplaceArrayWithBiggerArray(); SetItem(); } You could replace it with something more like if (!condition) { ReplaceArrayWithBiggerArray(); } SetItem(); 396 Views  View Upvotes  Answer requested by Joshua Borland