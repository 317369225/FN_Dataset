How do I create 2D array in C++ which has variable size (VLA) in VS2010?The most straight-forward approach would be to use any of the STL library template data structures that model a one-dimensional array, as they automatically handle issues of construction and destruction of objects - std::vector is probably the most direct approach: you would have a vector of vectors. #include <vector> //don't forget to include the right header!  std::vector< std::vector<int> > vec(numCols, std::vector<int>(numRows, 0)); If you desire more direct control over the objects, then you can create a ptr to a ptr and use the new keyword for object allocation. More presicely, you would do: int** 2dArray = new int*[numRows]; for(int i = 0; i < numRows; ++i) 2dArray[i] = new int[numCols]; Just don't forget that you need to delete these objects once you're done with them, as using the new keyword allocates them on the heap, instead of the stack, so their memory isn't automatically deallocated. for(int i = 0; i < numRows; ++i) delete[] 2dArray[i]; delete[] 2dArray; You can also do things in a more C way and use malloc and free instead of new and delete - I would however argue against that approach, as new is typesafe and also always calls the corresponding constructor of the object, unlike malloc, which doesn't handle any exceptions. The only benefit of using malloc is the possibility to use realloc to change the size of your buffer. 39 Views  View Upvotes