How do I write a C program that reads one array elements of size n, and then separates these elements into two different arrays, one having odd numbers only and the other one having even numbers only?This seems like a homework problem, so I'll give an answer that's better than "copy from the guy sitting next to you" that will make most teachers do a double-take since it is in-place and uses stupid C pointer tricks. Read in all of the numbers Make two pointers, 'odd' and 'even'; point 'odd' at the start of the array, and point 'even' at the end of the array The plan: we're going to end up with all of the odd numbers in the 1st part of the array, and all of the even numbers in the 2nd part of the array While 'odd' is pointing at an odd number, and not the same as 'even'-1, move it forward. While 'even' is pointing at an even number, and not the same as 'odd'+1, move it backward Now, if even points at an even number, and odd points at an odd number, you are done. Return the base address of your array as the array of odds, and 'even' as the array of evens. You also have enough information to figure out the length of each. If both even and odd point at odd numbers, move odd and even both forward; if even is now past the end of the array, you're done, same return values as step 6 If both even and odd point at even numbers, move odd and even both backward; if odd is now before the start of the array, you're done, same return values as step 6 If odd points at an even number, and even at an odd number, swap the numbers. Go to step 4. Here's my question to you, though: can you prove that this algorithm does, or doesn't, always work? 921 Views