What is the difference in initialising an array and a list in Python?Initializing an array is simple and straight forward: a = [1, 2, 3, 4, 5] Elements of the list are enclosed within square brackets and separated from each other by commas. Initializing an array requires the elements to be furnished in a list, which is then converted to an array. Rules for arrays must be kept in mind while furnishing the list, namely, all elements must be of the same type, number of elements per row must be same in all rows (and this concept to be extended to higher order arrays). While Python can identify the data type of the array from the data type of the elements, you can specify this explicitly: import numpy as np b = np.array([1, 2, 3, 4, 5], dtype=float) This could also have been written as b = np.array(a, dtype=float) There are many NumPy functions to quickly create arrays, such as, x = np.zeros((3,4), dtype=float) y = no.ones((3,4), dtype=float) z = np.eye(4, dtype=float) c = np.random.randn(3, 4) 67 Views