Why does C++ Primer say using compiler to count the number of array elements is a bad method?For example, short things[]={1,5,3,8}; This sentence does not explicitly declare the number of array elements. The author says that the compiler will count the number and this is a terrible declaration, because method the compiler count the number is different from what you think.Well, I believe that the "problem" is that array names "decay" to pointers (i.e. they lose their dimensions) when used as arguments of functions declared to take a pointer instead of an array of given (i.e. explicit) dimensions, so it's quite easy to overlook the fact and have code dealing with arrays that somehow ceases to work when splitted into functions/methods. In other words: the usual trick of using sizeof(things) / sizeof(things[0]) is ok until things indicates an array which has still its dimensions, because it actually is sizeof(short[4]) / sizeof(short) and assuming that sizeof(short) == 2, the above is 8 / 2, which gives the correct result (4 elements). But when things is actually a pointer (because of decaying), the expression above may actually become sizeof(short *) / sizeof(short) and assuming that sizeof(short *) == 4 (which is likely on 32-bit architectures) the above expression gives 2 elements, which is incorrect. 375 Views  View Upvotes  Answer requested by 1 person