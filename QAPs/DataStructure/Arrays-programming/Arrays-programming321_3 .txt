What is the most efficient algorithm to rotate an array by 'k' elements?Problem Description : Solve Left Rotation I thought of 2 solutions: Erasing & Inserting elements simultaneously till ‘k’ iterations. Code @ 4wgrq - Ghostbin Getting all the elements and printing the (i+k)%n th element. Code @ 7ucy9 - Ghostbin (didn’t actually perform rotation operation - is this ok) ?public class Test { public static void rotateArr(Integer[] arr, int k) { if(k >= arr.length) k -= arr.length; if(arr == null || arr.length < 2 || k==0) return; rotateArr(arr, k, arr.length); } private static void rotateArr(Integer[] arr, int k, int n) { if(n <= 0) return; int cur = arr[--n]; k = (arr.length+k-1) % arr.length; rotateArr(arr, k, n); arr[k] = cur; } public static void main(String[] args) { Integer[] arr = {1,2,3,4,5,6,7}; rotateArr(arr, 3); System.out.println(Arrays.toString(arr)); } } 27 Views