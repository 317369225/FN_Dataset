How do I efficiently store a tree in a 1-d array(s) handling modifications?Assuming that you want to store a rooted tree. Suppose the maximum number of vertices in the tree is N. Keep the following integer arrays of size N. First Child (f) Last Child (l) Next sibling (n) Previous sibling (p) To add an edge from u to id, find l(u). Set n(l(u)) = id, p(id)=l(u), l(u)=id. Deleting a subtree requires just deleting the vertex. For this, work with n and p just like you would when deleting a node from a doubly linked list. DFS on the subtree rooted at u is easy to perform as well. Start from f(u) and proceed to l(u) using n[], doing dfs recursively for each child. If recursion using an implicit stack is not allowed, just create an explicit one. 1k Views  View Upvotes  Answer requested by Pratik Moona