Are arrays of arrays possible in C?I am aware that multidimensional arrays are possible, but what I need to do is pass a sub-array into another function. For example: if A=[1 2]  [3 4] I need to be able to pass [1 2] or [1 ; 3] (semicolon means new row) as an array into a function.Sergey Zubkov's answer to Are arrays of arrays possible in C? gives you a solution for a fixed size array. If you want your array to be sized dynamically a standard approach is to allocate a linear block of memory and interpret it as a raster scan of the array. Say what?! OK Suppose you want a 2-dimensional array with W in each row by H rows. First allocate the memory: int *a=malloc(W*H*sizeof(int)); Now you can access the element (x,y) as a[x+W*y]. If you want to iterate the whole thing you can move row by row with minimal arithmetic: int* aend=a+W*H; //One past the end of the whole array. for(int* off=a;off<aend;){ const int* rend=off+W;//One past the end of the row. for(int* e=off;e<rend;++e){ int c=*e; //Do something with element c in a row by row scan. } off=rend; } Of course you can just blast throw the whole thing if you’re not even interested in rows: int* aend=a+W*H; //One past the end of the whole array. int sum=0;//Sum of elements. for(int* e=a;e<aend;++e){ sum+=*e; } Don’t forget free(a); when you’re done. Always render unto free() what malloc() rendered unto thee. The alternative of an array of pointers is often surprisingly less efficient than this method because array of pointers method: Requires H+1 calls to malloc() (and free()) which is typically expensive. Can fragment your array across memory. For medium sized arrays the single contiguous block approach may fit into a handful of cache lines. That can show a significant improvement on modern architectures. It can be adapted for non-rectangular (ragged) arrays but you will need an ancillary array of row lengths and need to a bit more arithmetic. But the benefits do mostly carry over (reduced malloc() and cache shuffling). If you need to interface with a library that assumes an array of pointers model you can always make one by passing in a temporary array of pointers to the first element of each row. PS: Some may criticise this as offering trivial performance improvements but if you’re not interested in hardcore optimization then maybe you shouldn’t be (or don’t need to be) coding in C! 292 Views · View Upvotes