How to sort an array of integers provided as string as input from command line, using C language?Input from command line will be provided by running program a.out as ./a.out "13 12 16" And the program gives back output as Output: 12 13 16The important thing to note here is that Sorting Algorithm, how to carry Input or Output in C are not an issue but rather the conversion from a String to Numerical is and can create confusion. Will provide basic details for solving such an issue rather the code :) View ASCII table and note that separators appear nearly side by side(except : or ;) and Decimal numerals(if thats the choice) 0-9 appear together and are main thing to identify your numerals from string. Separators: Make sure you note all the separators allowed on input string (space, comma, semicolon....etc) and allow a few of them as valid choice(pass message when program runs "Valid separators in input are ...." as a necessity). Anything other than separators move to a string list say List_InputString which will be tested as valid numerals later. For this simply keep reading and joining each char until a separator comes(or other better process of choice) and move that string as an item of List_InputString. Numerals: Make a clear note that inputs are in one numerical system(pass message if chosen Decimal when program runs "Valid numerical inputs are in Decimal only" as a necessity and now you know its not coming in Hex). Do a test for valid numerical entry with each item in List_InputString by checking each char in item with the ASCII range for your numerical choice(Decimal 0-9 has ASCII code in between 48-57 hence each char must be that when valid). This way you now have identified valid numerical chars in List_InputString and replaced it with Decimal numerals and then put them as entries in List_InputNum. Important you know the conversion of char "5" to int 5 (typecast) and string 152 to int 152(2 + 5*10 + 1*100) or with using other better process of choice. Sort: Use any sorting algorithm to sort the List_InputNum 52 Views  Answer requested by 1 person