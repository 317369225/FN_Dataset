Why is there a need of dynamic arrays if we have variable length arrays?int a[v]; //Variable length array int *p=(int *)malloc(v*(sizeof(int)); //Dynamic array Both create the memory based on the value entered by the user, then why is there a need of Dynamic memory allocation of arrays? I am not looking for the answer that in Dynamic array we can do reallocation's.Well the reason is pretty simple. Variable length arrays follow Automatic memory allocation (Ama for simplicity). Here, the lifetime of your variable only lasts till the program is in scope of the variable. For example, look at the following code. void automaticExample(int v) { int arr[v]; //Do relevant stuff } Now the memory allocated by the int arr[v] remains accessible only till your program is in the function ‘automaticExample’. After that, it becomes inaccessible. The lifetime of the variable is not under your control and it lasts as long as the scope. Now let’s look at dynamic memory allocation. int* dynamicExample(int v) { int *p = (int *)malloc(v*sizeof(int)); //Do relevant stuff return p; }   int *ptr = dynamicExample(); //Still accessible So here, you can access the allocated memory even when your program is outside the scope of where it was declared. Now this piece of memory is accessible as long as a free statement is not encountered. free(ptr); So dynamic memory allocation allows you more access to the memory, as compared to automatic memory allocation, or what you refer to as variable length array. 136 Views · View Upvotes