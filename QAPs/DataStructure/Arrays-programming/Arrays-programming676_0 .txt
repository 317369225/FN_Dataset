How do I split the given array and return an index such that both sides contain the same number of X and non-X?You can traverse the array from beging and maintain the number of X occured till now in a interger variable . Now, traverse the array from end and if the element = X , then you know how many X were before that position . then you can just obtain the number of non X after this because you know the total number of X present in the array , and you know how many are before the element . This solution doesnt require any auxilary space and runs with your time complexity . Below is a pseudo code : int arr[] = {} ; //array given int xfromleft = 0 ; int xfromright = 0 ; for(int i=0;i<arr.size();i++)  if(arr[i] == X) xfromleft++ ; for(int i=arr.size()-1;i>=0;i--){  if(arr[i] == X)  xfromleft-- ; //decrease it ...now this many X are present to the left of i  if(xfromleft == arr.size()-1-i-xfromright){ return ; }  //you found the index ...you can return or continue to serach such  //positions  if(arr[i] == X)xfromright ++ ; } } 891 Views