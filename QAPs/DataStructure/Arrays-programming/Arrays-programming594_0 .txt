Why don't they (CS book writers and programmers) make arrays that are sequential in memory and linked together?An array lets me randomly access *ANY* element within it immediately and with a single assembly instruction; that's the whole point of an array. You can't do that with linked lists--you need to first iterate over n-1 elements. When allocating memory, the OS will give it to you wherever it sees fit, making it impossible to guarantee one large block. To resize an array, we have to do the reallocation and copy. It is a question of organizing data and why, for example, a linked list usually wins if you always access it sequentially, though it's random access if you're constantly adding and removing data at arbitrary locations. For searching, an array always wins if you can compute the index, not that's it's always possible. 396 Views  View Upvotes