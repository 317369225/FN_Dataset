How do I load various Arrays in the same TableViewController in SWIFT?I want to load a different array into my TableViewController once a certain button is pressed. E.g.: breakfast, dinner, lunch etc... I have no idea how my tableviewcontroller.swift file can recognize a button being pressed...Does anyone have a idea or demo file somewhere for me too look at?As I understand it, you want a screen with four buttons. When the user presses one of the buttons, they are taken to a table view, which has different content depending on which button is pressed You first create a normal View Controller for the buttons. You put the four buttons in the View Controller. The easiest (but worst) thing to do is to then simply create 4 TableView Controllers, one for each button, and hard code the contents of each TableView. Then you can transfer control by simply dragging the button to the appropriate ViewController and Xcode will create a link. The better thing to do is create one ViewController for all buttons, and simply display the correct list for that button. That means you have to pass information about which button was pressed to the TableView Controller. I suspect that all of this would be covered in any Swift/iOS tutorial, but here goes. Doing this right is very easy, but requires a few steps. This is way quicker to do than to explain, but you need to know how to do it. You want to form a link from every button to the same VC, and communicate what has to be done. Unfortunately, simply creating links by dragging doesn't help you directly You need to create a single segue which you can use for several buttons (I will explain why shortly). Here's a quick and dirty. Create a button called perhaps "dummy". Right drag it to the destination VC so it forms a link. You will see that this creates a segue (look in the explorer style panel on the left). Click on the seque and discover its name. Now, in your code, hide the button. (Thare are easier ways to make a segue, but not easier to explain). You are going to need this name later; you are going to call this segue programmatically to call the Table View Controller from your first Controller. So that's your first VC, and all it has is a button which is hidden. Now override a TableViewController to make a KevinMealTableView class. In the KevinMealTableView class, put at the top something like ButtonNumber: Int or MealType: String, just something you can set with some value from your initial VC to tell it which list to display. Back to your first VC, which has nothing except a hidden button so far. Create your four buttons. Drag each one to create a IBOutlet (not a link to the second VC). At the top of the first VC create a var butNo = 1. Now, for each IBOutlet (the four of them) you set butNo to be 1, 2, 3, or 4 as appropriate. Then in each you call performSegueWithIdentifer ( "segue name", sender:nil) The "segue name" is the name of the segue that was created for the hidden button, which takes you to the second ViewController. Get it *exactly* right. You are almost done with this first VC. In Swift, down the bottom (or anywhere you like) put in something which looks like: override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) { if(segue.identifier == "segue name") { var yourNextViewController = (segue.destinationViewController as yourNextViewControllerClass) yourNextViewController.ButtonNo = butNo Its probably not obvious how this all works. When you performSegueWithIndentfier in your button handler it doesn't go straight to the next VC. It instantiates the next VC, but before it runs viewDidLoad or anything it runs any prepareForSegue function in your VC. This provides you with a reference to the exact VC you will be visiting next, and you can use this as an opportunity to set ButtonNumber or whatever it is in the TableView Controller that comes next. You are now finished with the first VC. For the second, tableview controller, you know what button was pressed, because you set the buttonNumber to be 2 or whatever it was. You might have some code at the start which says something like let posMeals = [["waffles", "cornflakes", "bacon and eggs"], ["sandwiches", "soup"], ["steak", "pasta"]] Then if button number zero - representing breakfast - has been pressed, the posMeals[buttunNumber] array would contain possible breakfasts. Now you are going to have to set the value of each cell programmtically (not static), but its easy. Look at a tutorial. You have the array of possible cell contents - posMeals[buttunNumber] - you just have to plug them in. You really have to do this: Its easier than creating 4 VCs when you know how. In a couple of weeks time you are going to want to change the colours, fonts, sizes of the VC cells to make them look prettier. Don't have to do it 4 times. Its way more flexible, you can use these skills to make much better UIs. Good luck PS. You should wrap both VCs in a navigation controller. Sorry, I forgot this, you should do this for all your screens. Select the VC and in XCode select Edit and then the option to include in a Navigation Controller. This is where much of the navigation happens (though you don't see it). 149 Views  View Upvotes