Why don't C++ arrays have an easy way to check their size?Surely someone, somewhere would have thought this was a good idea to have; after all, other languages and other C++ data structures have it -- but why not arrays?Because, in C++, arrays do NOT have a size. In C++, an array is just a way of doing pointer arithmetic when you add [n] after another pointer. Arrays can just as easily be mapped on top of an existing piece of memory of unknown size. Arrays are not objects. Arrays are a low-level concept for doing pointer math. What is probably confusing you is that C/C++ also allows you to allocate a chunk of memory off the stack or heap while simultaneously declaring an array-like interface to it. "int x[10]", for instance. In that case, two things are happening at once. 1) The compiler is creating a pointer called 'x' and giving it special semantics that 'x[n]' means 'address(x) + n * sizeof(int)'. 2) The compiler is allocating a region of memory, the size of which is 'n * sizeof(int). What happens to this sizeof information? If is known only at compile-time and not at run-time. You can make it part of the compiled code by using the sizeof() operator, but the information is not stored with the array. So, the confusion is that there are two separate and orthogonal things happening with the 'int x[10]' statement, a memory reservation and a pointer creation. And the memory reservation info is not available via the pointer in any way. Bottom line: arrays are just a way of doing pointer arithmetic. They are not actual "objects" in any sense and so they do not have a size. 1.2k Views  View Upvotes