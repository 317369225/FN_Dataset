What is a coder's worst nightmare?
One "coder's worst nightmare" -- seeing on the news a flaming disaster your software might have caused! The B-2 bomber is "fly by wire".  There is no direct connection from the pilot's control stick to the control surfaces (elevons, replacing elevator, ailerons, & rudder).  Instead, there's a big spring under the floor so the pilot feels like he's pulling on something, but a sensor takes stick position into the flight control computers, combines it with data from other sensors, and decide how to move the control surfaces. Coding errors in the flight control computers can lead to "loss" of the crew, the aircraft, and the stores.  Oh, and "stores" can include nuclear bombs.  And, they're very expensive, and there's only 21 of them, and they're irreplaceable at any price. We wrote that code. Oh, we designed it very robustly and tested it very thoroughly.  We tested it a lot.  We tested it at our desks, on a bench, on a lab station, in a massive hydraulics lab, and in aircraft ground test.  We had peers review code.  We even made a backup computer program just in case.  But, still... The aircraft cautiously entered flight test.  AOK.  It went through years of flight test, years of operational test, and then went into use by the Air Force.  It worked very well.  A few developers stayed for code maintenance, but most of us went on to do other things.  From time to time we'd see the B-2's in the news, and everything seemed all right. Seven years ago Monday - 2/23/2008 - a B-2 departing Guam crashed on takeoff.  The crew ejected alive, but one with a serious injury from the ejection.  The aircraft was a total loss, and luckily it was a ferry mission, without stores.  Did we have a bug? Initial indications were problems with the flight control system - that it had decided to pitch up, and had stalled the aircraft, despite the pilots' attempts to pitch down. Oh crap. Those of us not maintaining the software were cut off from any detailed or inside information, as the investigation went on for many months.  We just had to wait and see if we were responsible. Eventually, it came down to human maintenance practices, and inconsistent calibration of air data sensors in the hot, humid Guam environment.  Our software had done exactly what was intended -- but the miscalibrated aircraft sensors told the software something was happening that wasn't real.  Not something that we could have tested for and corrected. A terrible loss, but at least the crew lived.  And our code had worked. (Note: All information taken from public sources.) Updated 5 Mar • View Upvotes