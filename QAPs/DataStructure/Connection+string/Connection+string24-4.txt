What is a coder's worst nightmare?
The worst bug ever: The bug only occurs in production and can't be replicated or triggered locally. The probability of the bug occurring is low, but not low enough to ignore. The cause of the bug involves a race condition that only occurs under load. The cause of the bug is unknown. You didn't write the code that caused the bug but are responsible for fixing it; the person who wrote the code no longer works for the company. The issue that caused the bug is in some library that is reliable 99.9% of the time and thus is the last place you would look. Many others have attempted to debug it over the years; nobody succeeded. The bug is a logical error that only occurs at run-time after a long period of time. Debugging requires expertise in a field you know nothing about. You have a tight deadline to fix the bug. The bug can't be ignored because your job is at stake. Imagine how awful it would be to debug the Mars Rover from Earth using light pulse signals for a rare race condition -- which only occurs when the planets are aligned under atmospheric conditions that can only occur on Mars -- because of a subtle, esoteric issue in some embedded code generated from a library written by a now retired NASA scientist years ago -- you must resolve this issue quickly because the planets are about to align and millions of dollars of funding are at stake. No, this never happened. But doesn't the idea just make you want to jump off a bridge? :) 