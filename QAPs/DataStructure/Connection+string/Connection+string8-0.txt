How do I connect the Visual Studio 2005 C++ program to the Microsoft SQL 2008 database? What is the connection string?
Thanks for A2A Connection string is required to make connection between your application and database server. A Basic connection string holds following details 1. Server Name - name or instance of server in which you are having database. 2. Database Name - Database to whom you want to connect. 3. Login Id 4. Pwd Server=myServerAddress;Database=myDataBase;User Id=myUsername; Password=myPassword; 1. Your have to create connection between database and application and connection string contains all details required for that connection. 2. After creating connection object your have to open it. 3. Next step is execute your query through commands. 4. Next step is fetch value of commands through Dataset or dataReader 5. Close Connection. Check below mention code and link for more detail. #include "stdafx.h"  #using <mscorlib.dll> #using <System.dll> #using <System.Data.dll> #using <System.Xml.dll>  using namespace System; using namespace System::Data; using namespace System::Data::SqlClient;  #ifdef _UNICODE int wmain(void) #else int main(void) #endif {         SqlConnection *cn = new SqlConnection();         DataSet *CustomersDataSet = new DataSet();         SqlDataAdapter *da;         SqlCommandBuilder *cmdBuilder;            //Set the connection string of the SqlConnection object to connect         //to the SQL Server database in which you created the sample         //table in Section 1.0         cn->ConnectionString =  "Server=server;Database=northwind;UID=login;PWD=password;";          cn->Open();                //Initialize the SqlDataAdapter object by specifying a Select command          //that retrieves data from the sample table         da = new SqlDataAdapter("select * from CustTest order by CustId", cn);          //Initialize the SqlCommandBuilder object to automatically generate and initialize         //the UpdateCommand, InsertCommand and DeleteCommand properties of the SqlDataAdapter         cmdBuilder = new SqlCommandBuilder(da);          //Populate the DataSet by executing the Fill method of the SqlDataAdapter         da->Fill(CustomersDataSet, "Customers");          //Display the Update, Insert and Delete commands that were automatically generated         //by the SqlCommandBuilder object  	Console::WriteLine("Update command Generated by the Command Builder : "); 	Console::WriteLine("=================================================="); 	Console::WriteLine(cmdBuilder->GetUpdateCommand()->CommandText); 	Console::WriteLine("         ");  	Console::WriteLine("Insert command Generated by the Command Builder : "); 	Console::WriteLine("=================================================="); 	Console::WriteLine(cmdBuilder->GetInsertCommand()->CommandText); 	Console::WriteLine("         ");          	Console::WriteLine("Delete command Generated by the Command Builder : "); 	Console::WriteLine("=================================================="); 	Console::WriteLine(cmdBuilder->GetDeleteCommand()->CommandText); 	Console::WriteLine("         ");          //Write out the value in the CustName field before updating the data using the DataSet 	DataRow *rowCust = CustomersDataSet->Tables->Item["Customers"]->Rows->Item[0]; 	Console::WriteLine("Customer Name before Update : {0} ", rowCust->Item["CustName"]); 		         //Modify the value of the CustName field 	String *newStrVal = new String("Jack");           rowCust->set_Item("CustName", newStrVal);          //Modify the value of the CustName field again         String *newStrVal2 = new String("Jack2");           rowCust->set_Item("CustName", newStrVal2);          //Post the data modification to the database         da->Update(CustomersDataSet, "Customers");                  Console::WriteLine("Customer Name after Update : {0} ", rowCust->Item["CustName"]);           //Close the database connection         cn->Close();          //Pause 	Console::ReadLine();  	     		return 0; } Page on microsoft.com 