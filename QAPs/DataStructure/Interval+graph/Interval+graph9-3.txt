What is the best (programming) algorithm that you have ever created?
It was a long time ago, and I vaguely remember how it was implemented, but it was something like this: temporal data coalescing and conversion to natural language. When I was working at Ask.com, I was part of the team that launched AskCity--at the time of its release, it was reviewed as the best local search product, as it aggregated data from Yelp, OpenTable, CitySearch, StubHub, and more, that provided an integrated interface with maps + search results for events and venues. Essentially, I wrote one function that took in a bunch of temporal data (a list of start and end date time pairs) and spit out the shortest possible string that accurately summarized all of the dates, e.g. "Weekdays 9am-9pm, Weekends 10am-midnight" or "Weekdays 9am-5pm, Saturdays 10am-6pm, Closed Sundays" or "Daily 10am-10pm, closed Thanksgiving" to show up for the search result snippets. Events like concerts that played on multiple days, or movies with various showtimes, and venues with various hours of operation (e.g. restaurants that close 1 day a week, extended or reduced hours on certain days). There were a lot of corner cases to deal with (e.g. a Broadway show that spanned several days, but with a day off in the middle because of a holiday), but in order to provide the most concise and accurate string, every date time pair in the list had to be examined, and one exception could throw off the whole thing; not only that, but you also had to look at what items weren't in the list. The meta data generated for computing the shortest natural language summary was several times the size of the original data. 