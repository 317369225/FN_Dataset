What are the rules and the concept of ARCTAN(X)?
I have one thing to add to David Joyce's answer. In applications you often use arctan(x) to convert a point in the x,y plane into an angle and a radius. At first the following line of code seems obvious,  but it may lead to irritating ambiguities: angle = atan(y/x); The problem lies in the divison yx   which combines the signs of y and x in a single sign. After that it is not clear anymore whether y or x was negative (or if both or none were negative). For example the point x=1,y=1 and the point x=-1,y=-1 will yield the same angle. So a lot of programming languages have atan2(y,x) built in: angle = atan2(y,x); The function atan2 is also called the "four-quadrant arctangent" because it handles all four quadrants of the plane uniquely: Source: Wikipedia So where the output of atan(y/x) is restricted to (−π2 ,π2 )  , the function atan2(y,x) maps to (−π,π)  . If you're rolling your own rectangular-to-polar conversion, you'll probably save time by using atan2. If you're coding math for somebody who wants the mathematical arctan, with just one argument, then of course stick with atan(x). I don't guarantee that the four-quadrant arctangent is always called atan2. Some languages or environments may call it something else. Or may map to (0,2π)  instead. Or you may have to define it yourself. It's worth it. Thanks to Job Bouwman for collaborating on this answer. Updated 16 Oct • View Upvotes