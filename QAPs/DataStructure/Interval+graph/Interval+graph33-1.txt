What are the differences/advantages/disadvantages of Azkaban vs. Oozie?
I have worked on Azkaban, so any answer I give is inherently biased and not to be believed :-) The first differrence is that Azkaban has a much simpler view of jobs--they are just DAGs of unix processes with associated configuration which either succeed or fail. Our view is that by having a very simple model of jobs we can avoid inventing a (potentially half-baked) turing complete job description programming language. I.e. if you want while loops or if statements you can easily add that as a simple script in python or bash or whatever and include that in your flow, rather than having an XML language which encapsulates this kind of logic. In our usage at LinkedIn we maintain job flows with literally hundreds of steps so it is important to us that the description of this not enter XML hell. I think a point in Oozie's favor is that it supports a lot more enterprise-class features like better security integration and a permissions model for job changes. Depending on the environment this can be either a critical feature or just nice to have. Another really cool thing about Azkaban is the zoomable, clickable SVG job visualizations. This let's you directly view even a very large job as a graph, determine which pieces of a complex workflow failed, etc. We think this kind of thing is really critical to building and understanding larger workflows. Richard Park, the developer of the graph support has a lot of background in graph visualization and did a great job with this in my opinion--displaying interactive graphs in a browser is not an easy thing to do well. This functionality is only partially built out--for example we hope to use it as a way to display the progress of a job as well, but already it is pretty useful. 