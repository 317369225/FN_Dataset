Does a data structure exist which supports logarithmic insertion/removal and constant-time query for the Kth smallest element?
No, such a data structure is known to be impossible.  In particular, Pătraşcu and Thorup '14 ([1408.3045] Dynamic Integer Sets with Optimal Rank, Select, and Predecessor Search) shows that any data structure with [math]U \geq \log N[/math] update time requires [math]Q = \Omega(\log_U N)[/math] query time for select, and for [math]U < \log N[/math] you still need [math]Q = \Omega(\log_{\log N} N)[/math]. If you need logarithmic update time, then, you can only hope to save a [math]\log \log N[/math] factor relative to a balanced binary tree.  Pătraşcu-Thorup gives such a data structure, but it's of theoretical interest only: the constant factors lost will be much larger than [math]\log \log N[/math]. If you're willing to tolerate larger update times, then as Anders points out a weight-balanced B-tree will let you achieve other points on the optimal [math]Q=\log_U N[/math] curve.  But the answer to your question is no. 