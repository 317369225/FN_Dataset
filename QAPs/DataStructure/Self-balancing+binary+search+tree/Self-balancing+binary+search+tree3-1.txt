What is the best data structure and algorithm to find a maximum value within a subset of a data population that satisfied some range condition?
Depends of a few things: 1) Rate of addition/deletion of data. 2) Rate at which queries are issues 3) Range of the data, which in your case are the prices of a commodity. Assuming they are of the same entity, I doubt if it would change much For 1) there is a natural trade-off between maintaining a queue and sequential scanning or a self-balancing BST and deleting periodically. For 2) In case of extremely high query rate, it would make sense to cache results on top of any data structure used. For 3) If the data range isnt very huge, fixed granularity of ranges could be maintained, for instance in a hashmap (say H) where the key would be ranges and values would be the pair of actual price and the timestamp.This hashmap stores the best price for the begintime. Now each time an update u is madeÂ  H is updated at the appropriate position if u is better(price higher and timepoint valid..your 15 min constraint) than the previously incumbent value. Queries are constant lookups with a little of compromise in precision. 