How did people come up with self-balancing binary search trees?
This diagram (by Tar-Elessar, from Wikipedia's article on Tree rotation) should make everything clear: This diagram is the key insight - think of the root node as a bead on a string. You can slide the beads around, or pick another one to be the root. Once you have that key concept, the rest is an evolution of it. Especially as we're dealing with a very simple case. The rest? Bear in mind that the inventor of the Red-Black tree also invented the B-tree. Red-Black trees attempt to simulate B-trees using the same data-structures as binary trees. (For more info, see this wonderful analysis: Red Black Trees) 