If all programmers and developers look things up as they code, why are coding tests often a part of the interview process?
There is no guarantee that a developer who writes "pseudo-code" can write code in that developer's language of choice. The developer should be proficient enough in one language that the language shouldn't be an issue. You don't need to know "each and every language". There are more programming languages than the sheep population of New Zealand. For interview purposes, you only need to know one language well. You don't have to "memorize" your language of choice. After you have used it enough across a wide enough variety of applications, the types of functions and features you will need during interviews will be second nature. Most interviews do not consist of problems that require extremely obscure language features. Interviewers typically don't care about minor syntax errors such as semicolons at the end of a line. But you should strive to write working code, not pseudo-code. If you can't even remember to use curly braces versus do...end, then you clearly haven't spent enough time writing working code in your language of choice. Other syntax errors like forgetting to specify a function's namespace or miscounting parentheses will often cost you nothing. Some companies (e.g. Square) do allow you to use a language reference during your interview, but even then, doing so will cost you time that you could have saved by simply learning one language well enough to interview in. 