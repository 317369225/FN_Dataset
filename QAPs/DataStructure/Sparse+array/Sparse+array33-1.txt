How can a list of strings be stored within a 2D array?
You can do something like this. #include <stdio.h>int main(){    char a[][20] = {"apples", "peaches", "passion fruit"};    int i;    for(i = 0; i < 3; i++)        printf("%d. %s.\n", i, a[i]);    return 0;} Compilation and output: $ gcc -o 2d_arr 2d_arr.c  $ ./2d_arr  0. apples.1. peaches.2. passion fruit.$ Do note however that you need to mention an upper bound on the string length. That's because 2-D arrays are really 1-D arrays (that is, elements are lain side-by-side in a straight chain in contiguous memory). So, the compiler must know in advance how much space each element needs. Which is why an array of char * pointers is often preferable. 