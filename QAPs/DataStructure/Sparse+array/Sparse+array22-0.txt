Is there an infinite array in Java? If there is, how can I create that array?
You cannot have an actually infinite array, it would not fit into the finite amount of memory your computer has. You cannot even have a potentially infinite array. Sure, there are some data structures that grow as you insert more data into them. However, all the data types have inherent limits on their size, either coming from the language itself of from the architecture. E.g., the maximum size of an array is limited by Integer.MAX_VALUE as an int is used to store its size, and the maximum size of memory you can address is limited by the size of your pointers. Every data structure you will be using has a finite upper bound on its size. However, for practical purposes there is no difference between an infinite data structure and a data structure that can be larger than what you need. The simplest example in Java is probably an ArrayList. It works just like a static array, but you can also grow it efficiently (i.e., in amortized constant time per operation) by using its add() method to append new elements to the end of the ArrayList. Another, more complicated example would be a map. You can use almost anything to index into a map. Notably, a Map<Long,SomeType> is almost the same thing as an infinite array. You can use quite huge integers to index into this map, and at the same time it does not require the amount of memory an ArrayList would -- it only stores the elements you actually set. Here's a simple example: import java.util.HashMap;public class HashMapTest {    public static void main(String[] args) {        HashMap<Long,String> map = new HashMap<Long,String>();        map.put( 1234567L, "apple" );        map.put( 123456789012345L, "banana" );        System.out.println( map.get( 1234567L ) ); // prints "apple"        System.out.println( map.containsKey( 7654321L ) ); // prints "false"    }} 