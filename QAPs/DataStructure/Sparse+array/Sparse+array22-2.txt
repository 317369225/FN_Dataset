Is there an infinite array in Java? If there is, how can I create that array?
If you mean an array that has infinite size, then obviously it is not possible in Java (or any other language, for that matter), as computer memory is finite. You may have 128 GB of physical memory (RAM) and a 1000 TB hard disk (unlikely) that can be used as swap space (which is used as a sort of auxiliary RAM), but that is still finite. But, if you mean a dynamic array, that grows itself appropriately to store more elements as you add them (and shrinks as you delete elements), you can use the ArrayList classÂ  - ArrayList (Java Platform SE 7 ). Such an array would actually be implemented as follows. You start with an initial fixed size array. Now, when you insert an element and the array is completely full, the system allocates space for twice the current size (usually) and copies over the elements to this new array (Sometimes it may be possible to extend the array at the same location instead of allocating memory at a different location, which eliminates the need for copying). So if the initial size is 16, the array would grow like 16, 32, 64, 128, 256 etc. Similarly, if the array becomes more than half empty, it will shrink to half of its current size. In Java, you don't have to implement this as ArrayList does this for you very efficiently. Other languages have their own implementations as well (such as std::vector in C++ STL). For an ArrayList, you do not need to specify a size initially. Even if you specify one, the list will grow as needed. Also, ArrayList will still support efficient random access, because it will internally use an array (unlike a LinkedList). The operation of "growing" an array is also implemented efficiently (From the documentation we learn that the "grow" operation is implemented with a constant time amortized cost, which is as good as it gets for arrays). Note: Amortized cost means that an individual grow operation may take more than constant time, but when it is done a number of times, the average cost of each operation will be constant time. import java.util.ArrayList;public class TestDynamicArray {   public static void main (String [] args) {      ArrayList<String> list = new ArrayList<String>();     // Here, String is the data type that you are storing     // You can use an ArrayList without specifying the type     // but specifying it in this way (using Generics) is recommended.      while (...) {         // get some data         list.add (data);      }   }} There are also some other classes, such as Vector - Vector (Java Platform SE 7 ) - but ArrayList is the recommended option generally. 