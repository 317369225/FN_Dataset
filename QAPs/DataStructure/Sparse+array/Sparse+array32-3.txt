Software engineering: How to generate a C++ function programmatically?
1. Sparse 1-D array One way of consuming sparse array is to provide the non-zero elements in a list of (index, value) tuples. Example: double dot_function (     const vector < double > & x ,     const vector < pair < int , double > > & sparsevec ) {     double sum = 0.0;     for ( const pair < int , double > & sparseelem : sparsevec )     {         sum += x [ sparseelem.first ] * sparseelem.second ;     }     return sum; } As usual, always verify the speed of your code with benchmarks and profiling. It will help if you can read the disassembly and determine if the generated code matches what you would have expected. 2. Use Data Parallelism, and ignore the savings from sparsity Examples: SIMD (short-vector parallelism) or Multi-core programming (OpenMP, etc.), or GPU programming (such as OpenCL). Because SIMD is able to process a lot more elements at once, it may reap better performance even if one does not try to exploit sparsity. Again, always verify your code with benchmarks and profiling. 