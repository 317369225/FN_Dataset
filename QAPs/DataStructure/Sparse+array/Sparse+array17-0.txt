Do forEach(), every(), each(), and map() do the same thing?
According to the ECMAScript specification, for the examples you've given... [].forEach.call([1, 2, 3], function(e) {    console.log("forEach: " + e);});[].every.call([1, 2, 3], function(e) {    console.log("every: " + e);});[].map.call([1, 2, 3], function(e) {    console.log("map: " + e);}); ... Only one of them is being used correctly. .forEach() will iterate all items in an array (that actually exist, ie it will skip "holes" in sparse arrays), executing the given callback for each one. forEach does not directly mutate the array it is iterating over and ultimately it returns undefined. var originals = [ 1, 2, 3 ],   modifieds = [];originals.forEach( function( item, idx ) {  modifieds.push( item * 2 );});console.log( modifieds );// [ 2, 4, 6 ] .every() will iterate all items in an array (that actually exist, ie it will skip "holes" in sparse arrays), executing the given callback for each one, expecting a returned boolean value. It will stop once it has reached an evaluation of false. every returns true if no false evaluation has occurred. var originals = [ 1, 2, 3 ],   isNumeric;// Test that _every_ item in this array is numericisNumeric = originals.every( function( item, idx ) {  return typeof item === "number"; });console.log( isNumeric );// true// With a different array...var originals = [ 1, 2, "a" ],   isNumeric;// Test that _every_ item in this array is numericisNumeric = originals.every( function( item, idx ) {  return typeof item === "number"; });console.log( isNumeric );// false .map() will iterate all items in an array (that actually exist, ie it will skip "holes" in sparse arrays), executing the given callback for each one and constructing a new array with the values returned from the callback. var originals = [ "a", "b", "c" ],   converteds = [];// Convert each array item to char codeconverteds = originals.map( function( item, idx ) {  return item.charCodeAt(0); });console.log( converteds );// [ 97, 98, 99 ] Lastly, there is no native "each" method - I suspect that is added to jsFiddle by Mootools 