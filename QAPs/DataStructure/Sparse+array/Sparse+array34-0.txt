Natural Language Processing:Â What is the way of dealing with textual valued feature vectors for classification task?
At Datumbox.com we avoid using sparse arrays of features as much as possible on our Machine Learning Framework. By doing so you can squeeze down the required memory and be able to handle more features. Also it is better to assign an ID to every word instead of using the original word as feature. Finally make sure you select appropriately data structures to store the features in memory during training. There are good and bad options but this heavily depends on the computer language that you use. For example in PHP you should avoid using Arrays with lots of dimensions since this can increase the memory usage exponentially. By following the above tips you can develop a classifier implementation which uses as less memory as possible. Be aware though that some memory optimizations might affect the training times negatively and vise versa. Hope this helps! 