What algorithms and/or data structures would you expect a senior developer to know during a job interview?
It depends on what you were doing. But here are some basics that you have to know when you want to get a bachelors degree at Karlsruhe Institute of Technology: Data structures: Trees: - B-Trees - Binary (search) trees - Red-Black-Trees Heaps, Stacks, Arrays Hash maps Algorithms: Search: Breadth / depth first search, A* search Sorting (heap sort, quick sort, merge sort, insertion sort) Hashing: Knowledge what hash algorithms are, eventually name a few, what problems are and how they can be solved (MD5, collisions, linear probing, ... see: Category:Hashing) A senior developer should be able to name at least 5 data structures from his mind. He should also be able to implement a binary tree from scratch within 30 minutes (insert, search, delete). The knowledge about red-black trees does not have to be that detailed. But at least he should know that there are self-balancing trees and have an idea how they do so. Very important: He should be able to apply proper data structures / algorithms to problems. See also: Category:Algorithms List of algorithms 