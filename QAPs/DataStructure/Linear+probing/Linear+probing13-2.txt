What is the difference between an array and a hash table in a programming language?
If you think about it, hash tables can be implemented using arrays. They shall work like a associative arrays or dictionaries, commonly seen in high level languages. So you only need a constant time to look up any element within the hash table. In an array, the data is entered sequentially. The first element shall go to the first index, the second element shall go to the second index, and so on. That is not the case with a hash table. First a suitable position for the element in the hash table is first calculated using a hash function, and then the element is stored at that position. The advantage here is that, like I have already pointed out, you can get that element in O(1) time, since you already know the position. In a normal array, you may actually have to search through the entire array before you find the element.. In case of a hash collision, methods like linear probing or chainingÂ  shall be employed. Collisions shall not occur with normal arrays. 