What are some problems with hash tables?
This is honestly a fairly misleading article.  While the writer does make some good points about poorly designed hash tables or hash functions, in any real production software systems, hash tables will scale immensely better than balanced trees.  Certainly you have to make sure that you don't write a slow hash function or one that easily collides with non-equal values, but this is actually not hard in 99%+ of cases.  IDEs like eclipse will actually help you write reasonable hash functions for your objects that are extremely cheap and quite good.  If you are actually searching for values, eventually you are going to have to check for equality.  If your hash function is not awful, checking for equality should not be much slower than hashing, while you will probably be doing quite a few comparisons.  It's also somewhat expensive (another O(log(n))) to keep your tree balanced.  Overall, I would strongly suggest using hashtables over trees when you just want insert, get, and remove. 