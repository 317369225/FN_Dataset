Given an array of integers of size N, how can we find the most frequently occurring element in linear time?
Using Hash structure to track the frequent count will be an efficient solution. For hashing, one can use Fowler–Noll–Vo hash function  or MurmurHash. Both hash functions provide good randomness, less collision and fast computation. Here is a nice comparison analysis - Which hashing algorithm is best for uniqueness and speed? I prefer MurmurHash for this scenario. However, if N is very large, maintain a hash structure will be space consuming. Hence, one can use sketching algorithm to track the frequent element based on this paper  "Efficient Computation of Frequent and Top-k Elements in Data Streams" (Page on Ucsb). For more details refer the answer : http://www.quora.com/Programming-Interviews/How-can-you-find-top-20-queries-of-the-day-on-Google/answer/Prathab-Kali 