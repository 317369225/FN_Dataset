What are some concepts/algorithms/data structures that every computer science student should know?
Some of the data structures which I think are crucial for a computer science student to know would include: Queues - Priority Stacks Heaps - Fibonacci Heaps - Binary Heaps - Ternary Heaps - Treap Trees - Binary Trees - B+ Trees - Red Black Trees - Dancing or Self Balancing, with B+ it should be a breeze. Dynamic Arrays (Vectors if you're a C++ guy) Linked Lists - Singly linked Linked Lists - Doubly linked Hash Tables (Most Important one) Graph - Directed Acyclic Graph - Cyclic Graph - Adjacency Matrices. Graph Structured Stack.In terms of Algorithms, I think Changqi has covered a lot of it, I would add that you could also create programs that mimic applications which we use for games, example would be a sudoku puzzle, scrabble board, monopoly (if you want to tear your family apart). A couple of other algorithms would be breadth first search, Recursive and Loop only implementation of basic algorithms, quicksort, mergesort,etc. Also creating and manipulating a matrix based off of two-dimensional arrays, or using a data structure that uses two single arrays would be interesting. These data structures and algorithms are what you would need to know if you want to call yourself reasonably proficient in Computer Science. But in all honesty, the list is in-exhaustive, you could create a version of a priority queue that uses two vectors and that would be a new way of implementing it. The concept remains the same, but the methods of implementation are endless. Good luck OP! Updated 9w ago â€¢ View Upvotes