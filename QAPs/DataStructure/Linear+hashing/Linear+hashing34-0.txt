Where does the "consistent hashing" ring come from?
You're confusing consistent hashing with the Chord protocol.  Consistent hashing is a very general concept that can apply to a number of namespaces, not just a linear, 1-dimensional namespace.  You're thinking of Chord, published at SIGCOMM 2001, which applied ideas of consistent hashing to a single linear namespace, which is easily represented as a ring. Four structured peer-to-peer protocols came out around the same time in 2000.  Tapestry and CAN both did not use a ring organization.  Chord and Pastry both used a linear namespace organized as a ring.  Tapestry organized the namespace as a hierarchical tree with prefix/suffix digit matching, and CAN organized the namespace as an D-dimensional geometric space.  They are all similar in the functionality they provide, sublinear routing and name-based storage/routing. But they do so in what look like very different ways. Here are links to the first few protocols: CAN: http://www.eecs.berkeley.edu/~sy... Chord: http://conferences.sigcomm.org/s... Tapestry: (we wrote things in several papers, most of it was in a highly cited tech report, which eventually turned into a journal paper once I got around to it) Distributed Object Location in a Dynamic Network An Architecture for Global-Scale Persistent Storage 2001 TR: http://www.cs.ucsb.edu/~ravenben... Journal paper: A Resilient Global-scale Overlay for Service Deployment Pastry: research.microsoft.com/~antr/PAST/pastry.pdf Finally, several of us that created these protocols eventually got sick of the "who's better and why should I use system X over system Y" question, and came together to write a uniform API that basically connected all of them together: Towards a Common API for Structured Peer-to-Peer Overlays 