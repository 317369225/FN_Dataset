Given a stream of n integers between 1 and n find one number that repeats in linear time using less than O(n) space and traversing the stream sequentially O(1) times?
Traverse the array once. While traversing, use absolute value of every element as index and make the value at this index as negative to mark it visited. If something is already marked negative then this is the repeating element. int getMissingElement(int arr[], int size){    int i;         for(i = 0; i < size; i++)    {        if(arr[abs(arr[i])-1] > 0)            arr[abs(arr[i])-1] = -arr[abs(arr[i])-1];        else            return abs(arr[i]);    }} Time Complexity: O(n) Space Complexity: O(1) 