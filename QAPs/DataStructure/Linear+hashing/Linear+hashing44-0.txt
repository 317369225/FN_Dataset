Given a stream of n integers between 1 and n find one number that repeats in linear time using less than O(n) space and traversing the stream sequentially O(1) times?
In trying to be complementary to other answers, let me point out the possibility that this is a poorly-formulated version of a well-known question. You are reading a stream of N+1 numbers from 1..N, where exactly one value repeats. Find that value using O(1) space. One of possible solution is to first compute the XOR of all values 1..N, then compute the XOR of the input values, and XOR the two results to produce the number sought. EDIT: There are many variants of this question and at least two different approaches to solving them. The value(s) may be missing rather than repeated. For example, one can be missing and one can be repeated. If you XOR the stream with the XOR of 1..n values, you will get the XOR of the two special values. This will tell you the bit-positions where the two values differ. So, you can then repeat the whole thing, focusing on numbers that have bit 0 in one of those positions, and do the same for bit 1. An entirely different line of solutions uses symmetric functions (sums, products, sums of squares, etc) and the algebra that describes them. I guess, you could use error-correcting codes too. 