Given a stream of n integers between 1 and n find one number that repeats in linear time using less than O(n) space and traversing the stream sequentially O(1) times?
I'll solve the question of n+1 numbers in a stream of numbers between 1 to n in two passes and O(sqrt(n)) space. Split the numbers from 1 to n in sqrt(n) ranges so that range i corresponds to [sqrt(n) * i .. sqrt(n) * (i + 1)). Do one pass through the stream of numbers and figure out how many numbers fall in each of the ranges. At least one of the ranges will contain more than sqrt(n) elements. Do another pass and process just those elements in the oversubscribed range. Using a hash table to keep frequencies you'll find a repeated element. This is O(sqrt(n)) memory and 2 sequential passes through the stream. 