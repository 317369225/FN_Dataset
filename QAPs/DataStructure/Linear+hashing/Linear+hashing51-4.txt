Given a file of 2 billion 64-bit integers, how can one be  found that appears at least twice?
Assuming you don't care how many times (after the second) the number appears, this is pretty straightforward, if slightly big on memory. Allocate one bit per possible value. Set the bits to zero. Read each number   Find the index for its bit   Report the number, if its bit has already been set   Turn its bit on, otherwise   If you only want one number that appears twice, quit Edit:  Steven Hao caught the obvious, pretty much catastrophic, error that we need one bit for each possible value, not each actual value, so no, not 250MB.  Many orders of magnitude more than that.  My fault! That's obviously going to take almost 250MB (two billion bits), but has the virtues of: Linear run-time, since it's just the loop reading the numbers Blindingly obvious code Much smaller than memory on most modern systems, and the final data would fit onto a CD with room to spare, if necessary Easy to modify for certain cases (like numbers that are not found). This is technically a Counting sort (because you might look through your counts to quickly output what you've seen in sorted order), though the counting part is clearly pretty stupid, here. 