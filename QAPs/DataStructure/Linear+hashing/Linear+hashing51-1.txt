Given a file of 2 billion 64-bit integers, how can one be  found that appears at least twice?
Assuming we have 1GB of ram, here's a solution that doesn't assume anything about the input. We will partition the file into 20 buckets; the first bucket will contain the first 100 million numbers, the next bucket will contain the next 100 million, etc.   To solve the problem, we solve 20 subproblems: Does any number in the i-th bucket appear at least twice in the file? We solve this subproblem with the following algorithm: 1. Load the i-th bucket into an array. 2. Sort it, and check for duplicates within the array. 3. For every other number in the file, binary search for it in our array. This takes 20 passes through the file [for each bucket, we only compare it to buckets occurring later in the file]. Excluding input time, the algorithm will make about 50 billion comparisons. Of course, this can be sped up if we have more memory available. For example, using a hash set instead of a sorted array will use slightly more memory but also run a bit faster. 