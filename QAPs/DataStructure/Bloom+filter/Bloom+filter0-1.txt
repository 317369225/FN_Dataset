What are the best applications of Bloom filters?
This may not be the best application, but it is one that users of Yahoo mail will be familiar with. When you log into Yahoo mail, the browser page requests a bloom filter (a.k.a. BF for the rest of this post) representing your contact list (a.k.a. email address book) from Yahoo servers. The BF is compact and easily fits in your browser cache. When you send an email to say 3 people (e.g. bob@denver.com, fred@flinstone.com, and harry@houdini.com), the browser-side javascript quickly checks the BF in the browser cache for those 3 email addresses. Why is this good? Well, it avoids making a round-trip to Yahoo's back-end servers to verify whether or not these 3 email addresses are already in your contact list.  As you know, bloom filters are excellent at telling you what is not in a set. In this case, it is excellent at telling you which email addresses are not in your contact list. Say, for example's sake, that fred@flinstone.com is missing from your email contact list and the other 2 are present. The bloom filter will realize that fred@flinstone.com is missing and display a pop-up form for you to enter the first name and last name of this new entry into your contact list.  Once you fill out the form and submit it to the back-end servers, a new bloom filter will be computed and loaded into your browser cache. Now, bloom filters may sometimes encounter false positives -- usually a low rate of false positives. In this case, if may think that harry@houdini.com is in your email address book, when in fact, he is not. Well, they goal of BFs are to make cheap guesses. In the case of a few false positives, you will need to detect those missing entries yourself. 