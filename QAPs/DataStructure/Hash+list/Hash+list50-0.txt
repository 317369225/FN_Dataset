How does Twitter implement hashtags?Looking for details on technology stack, high level database schema, scalability limitations, etc.
Basically they're just search queries. My knowledge of the infrastructure is out of date, but what I remember is that it was never anything especially complicated. Hashtags were just considered as another token in Twitter Search, and the only thing really special about them was that tweets that contained hashtags were rewritten so that tokens matching "#{token}" linked to the Twitter Search results of that hashtag. Given that, the architecture and the limitations are almost the same as the limitations that a typical search engine would face; in fact, it's usually a lot simpler. Hashtags are always single tokens, so you only ever have to do one postings list lookup. Twitter Search results (in 2009) were typically time sorted, and so there usually wasn't a need to go too deeply into the postings list either. Now that there's "top tweets", the problem becomes a little bit more difficult, but it's simpler because there's no need for search to be comprehensive. That means the search index doesn't have to store nearly every tweet that matches a hashtag, only ones that received some number of RTs. Very popular hashtags, like trends, are very easy to cache in memory. Since everyone is accessing the same trends, these lookups are really fast. You can find a basic writeup on Twitter's Search architecture here: Twitter's New Search Architecture | Twitter Blog 