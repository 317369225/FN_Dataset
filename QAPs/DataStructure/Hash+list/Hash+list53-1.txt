What uses are there for Skip Lists?I've recently been trying to choose a data structure to implement an internal dictionary/index for a project I'm working on. I've read all about Skip lists, Hashtable implementations etc. and can't figure out where a Skip List would be a good choice. Seeing as you can easily use Hashtables at an efficiency of O(1), why use Skip Lists, who'se best performance is O(logN)?
Skiplist is a data structure used to store sorted list of items, very much like Binary Search Tree. The main advantage of using Skiplists over BST is that it is best suited for concurrent access. One of the most common implementations of BST is Red Black Tree. The problem of accessing this tree concurrently comes when a data element has been modified and tree needs to rebalance, which would require mutex lock on large part of tree. On the other hand, when inserting/deleting/updating a node in a Skiplist, only nodes directly connected to the affected nodes needs locking. Herb Stutter once wrote a wonderful article on concurrent friendly data structures: http://www.drdobbs.com/parallel/... 