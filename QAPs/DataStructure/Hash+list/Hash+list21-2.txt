What is a good hash function to use given the following constraint: you have a list (of potentially hundreds of thousands of words), and, given a word, you have to find all other words that are an anagram of the given word?
The general goal is to have a good hash function which minimizes the number of collisions. So i would try taking the approach with any strategy that let's me choose keys from among the available space with FEWER collisions. This means i would have some strategy to store multiple fields with SAME key along. But that is fine as long as collisions aren't the majority. E.g. using your original method how about instead of multiplying, just summing up all primes to generate index. True - there would be collisions i.e. same index might be generated by different sums (i.e. different alphabets - but it doesn't look at that common to me). Simply store the collisions in a linked list might be okay. Even if this strategy doesn't work well - you got the idea. Think of another way which keeps your hash range but gives fewer collisions. 