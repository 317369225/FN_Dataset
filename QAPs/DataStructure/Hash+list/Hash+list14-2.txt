What are the advantages and disadvantages of using MongoDB vs CouchDB vs Cassandra vs Redis?
Let me attempt to answer this from a few different perspectives, which are different from all the others below. I will assume you've read and understood the basics about each. If you're planning on adopting something seriously, I like to know three things: Do I have the expertise to run it? Personally, I am not an expert in running things on the JVM stack. Can I fix things if they break or won't get fixed? For me, this means two things: it's written in a language I know, like, could learn, or hire for easily. For me this alters the rank of which database I'd rather use the license isn't closed-source or egregious if I don't wish to share things back to the wider community. (p.s. mostly I do) Is the project thriving, active and shipping fixes and new features often. I don't want to jump on a sinking ship and have to move to another database; it's painful. Documentation and community - I'm going to have to learn this, and fast. I don't want to have to read source code or necessarily bug the core developers. So: 1. Licensing wise (which you should care about if you may want to change things) they're all open source: Cassandra and CouchDB use the Apache 2.0 License MongoDB uses GNU Affero General Public License (v3) Redis uses the BSD license For the differences, please checkout: Affero GPL version 3 vs. Apache Licence 2.0. The short version is, the AGPL license is significantly restricts your rights; you are forced to share patches even if used privately. 2. From an operational and maintenance perspective (i.e. can you keep it running or fix anything inside it): CouchDB is written in Erlang and runs on the Erlang VM (see: Just how scalable is the Erlang VM?) Cassandra is written in Java (programming language), therefore runs on the Java Virtual Machine (see: JVM Performance) MongoDB is written in C++, C and some JavaScript. It also doesn't require a VM Redis is written in ANSI C and therefore doesn't have a VM 3. Activity wise, which you should care about for longevity of the project, is as follows (obvious this is only accurate as of today 25-Nov-2015): CouchDB hasn't had a stable release since 1.6.1, which was September 3, 2014. Over a year, which is worrying Cassandra released 3.0.0 on November 9th, 2015 MongoDB is on a regular release cycle and it's last stable release was 3.0.7 on the 13th October 2015 Redis released 3.0.5 on October 15th, 2015 4. Documentation and community: MongoDB have a vast, vast, vast amount of meetups. They killed it early on with community efforts, with great effect. They're documentation is pretty good, CouchDB feels worse off for having lost Damien Katz, but their mailing list (see: user@couchdb.apache.org Archives) is still active. Docs are good, there is even a cool open-source book - oreilly/couchdb-guide Redis has great docs (see: http://redis.io/documentation), active mailing list and github community Cassandra's docs I personally find the most confusing, but they exist. In summary, I'd only be majorly concerned about using CouchDB today, due to it's seemingly slow / dead release cycle. MongoDB's license might be a problem (edit: though, as Leif Walsh pointed out, I omitted that this only applies to the server, not the drivers)Â  depending on how core changes to it are to your business. Other than that, it's personal preference on the above. Hopefully, this is an interesting take on this! Russ 