Is MongoDB a good replacement for Memcached?
Like most scenarios requiring the use of databases, the answer is "depends on what you are using it for." Although some will try to shoehorn MongoDB into a memory-only key-value cache in order to do a direct comparison to memcache, that is comparing apples to oranges. Just like folks trying to make memcache compete with MongoDB as a database (which it is not). What are you using memcache for? If all you are doing is caching your database queries, then you're actually not getting much benefit out of memcache anyway, and migrating to MongoDB won't buy you much either. If you're using MySQL (or most other modern RDBMS) then you should be relying on the query cache for that function, and caching higher-level objects at the application tier instead. Are you caching data that would benefit more than just a key-value store? Now we're talking. This plays directly into the strengths of MongoDB, and takes memcache where it wasn't really intended to go. A general answer would be mostly incorrect, as everyone might have different expectations out of what they are using memcache for, or what problems they are attempting to solve with it. 