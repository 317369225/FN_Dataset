Which database should I use for a killer web application: MongoDB, PostgreSQL, or MySQL?I'm working on killer web application, and I am really interested and worked with MongoDB. Is it a choice to choose MongoDB as a premier database? Or Is it better to use MySQL (with MongoDB/Redis as secondary)?
Recent addition of JSON data type support (as well as indexes on JSON columns) in PostgreSQL turns MongoDB into the least attractive option among these 3. Overall, PostgreSQL is the most feature-equipped and consisted in terms of how it supports different features among listed DBMS. It has the most advanced query optimizer; on contrary, MySQL doesn't have a query plan cache at all -- this means its optimizer relies on relatively simple heuristics to be fast. On the other hand, MySQL has much larger community. So: Personally I'd choose PostgreSQL - mainly because of JSON support (so it's in both relational and NoSQL worlds now), better replication features and full support of group commit / distributed transactions. MySQL is a very good option too - it powers Facebook and many other large sites on the web (including this one), so it's definitely a safe option. I didn't put it on the first place mainly because popularity, proven stability and scalability are comparable for these databases, but PostgreSQL seems a better option for me because of few features I listed above. IMO, MongoDB is the least attractive option: lack of transactions means a huge headache in cases you really need this. Also, there are many reports (see e.g. A Year of MongoDB) showing it has a set of other serious issues. So it's definitely the most risky option. Related questions: What are pros and cons of PostgreSQL and MySQL? Why does Quora use MySQL as the data store instead of NoSQLs such as Cassandra, MongoDB, or CouchDB? P.S. I didn't use MongoDB (although played with it), but used MySQL, PostgreSQL, and a set of other DBMS for about 10 years. Updated 27 Apr 2014 â€¢ View Upvotes