Redis vs Memcached: which one should I use for a web-based application?I'm starting on a project and I'm considering choosing between Redis and Memchached for caching purposes, and I wasn't sure which one would be better. I have a feeling that Memchached is faster than Redis (not entirely sure), but Redis allows me to run code against it in Python as opposed to C++. Does Memchached also have this feature? If not, then is there any reason why I should one over the other?
Redis Even if you don't plan to use any of its differentiating features, it's a good choice.  This is purely because you can configure Redis to behave exactly like memcache by disabling persistence (disable all of the "save" entries in redis.conf). It speaks a superset of the memcache protocol, so you can use memcache client libraries to interact with Redis, even.  No one has to know. From there, you can expand your uses of it as you see fit: Rather than storing serialized lists of values in a given key, convert it into a Redis list or set.  Blammo, you now have access to appending, set intersections and a wealth of operations that can be offloaded to the cache. Who doesn't like specific support for hashes in their data store!? Recent versions of Redis added support for LUA as an on-server scripting language.  Don't go nuts with it and move business logic into your cache, but it can definitely help with some more complex edge cases. And a lot more. 