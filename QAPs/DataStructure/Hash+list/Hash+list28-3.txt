How much does a web developer have to know about data structures and algorithms?
If your aim is to be able to make a standard CRUD applications, you should be able to use data structures. You don;t have to know the internals. You probably won't be building new algorithms. If you are going to be architecting solutions, which includes selection of hardware and making decisions about technologies, then you should be very familiar with computer architectures to be able to understand how those technologies and hardware work together. You need to know enough about algorithms so people don't pull the wool over your eyes, and also to assess risk. You will probably not build algorithms on your own. You will probably need to know how to design databases, though. You will need to come up with your own algorithms if you are going to do something that no one else has done. FOr 95% of people, you can either buy or borrow something that works for you. I was working in a company that was building search engines, and there were couple of people who were always brainstorming algorithms. I never did it myself, although I created enough of an understanding and appreciation of building algorithms. Eventually, the whole project died because Apache Lucene had enough features that we could just use Lucene instead of coming up with our own stuff More or less, you need to know enough to be able to appreciate what goes into algorithm development. It gives you the nose for it. 