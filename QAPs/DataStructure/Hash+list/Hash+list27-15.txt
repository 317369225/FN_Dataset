Is MongoDB a good replacement for Memcached?
We built a caching solution for hotel rates using MongoDB in a sharded setup. The primary issues we ran into were IO performance in an EC2 environment and the way sharing was handled with a high turnover of documents in the database. We were already using MongoDB in our application and wanted to leverage the ability to do map/reduce across our cache. In 1.8 and I believe 2.0 MongoDB stores metadata about where the various chunks of data are stored in the config servers.  This data is not updated as documents are deleted.  As we deleted old data in our database the balancer was still making decisions of how to split and move chunks as if all data was in the system.  This could probably have been mitigated by using a random shard key but ultimately we decided it wasn't a great solution for us. We ended up replacing it with a cluster of Couchbase/Membase servers.  That solution has been very stable for us and we were able to take advantage of the TTL options available and in future versions give us map/reduce ability across multiple servers. 