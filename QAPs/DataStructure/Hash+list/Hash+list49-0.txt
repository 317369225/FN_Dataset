How can we create MySQL shards?
In all seriousness, with the CREATE DATABASE command.  This is because shards are merely multiple MySQL schemata (aka databases).  Each schema contains a portion of the data in sharded tables, while duplicating the entirety of lookup tables in each schema.  These schemata may exist on one machine (if, for example, you simply want to scale up OLAP queries by taking advantage of the MPP query of Shard-Query), or they can be spread over many machines should you prefer to scale out.  Both techniques can be used together to ensure each node is able to achieve a high degree of parallelism.  To utilize a sharded database in an OLTP workload, your application layer must be able to determine which shard contains the data necessary to answer a query, route the query to that server, and then results.  Rather than writing your own router, you should consider using a publicly available framework like MySQL Fabric, or Vitess.  Queries in these frameworks can not cross server boundaries, that is, if "select COUNT(*) from table" is used to count the rows in a table, only the count from a single node will be returned.  This does not give you the results that you wanted.  On the other hand, retrieving a small resultset or modifying data on a single node is extremely fast, as queries run on a single node synchronously in these systems, which adds no additional overhead, as opposed to system which access more than one shard, which necessitates an asynchronous query mechanism for performance. OLAP on the other hand, can be handled with Shard-Query.  It handles queries which span shards (such as select count(*) from table), but it does not supports cross-shard joins (select * from table_sharded_on_a join table_sharded_on_b an a.shard_key = b.different_shard_key).  The complexity of queries which span shards is extremely high, so high in fact that there are no other sharding tools which operate like Shard-Query, except commercial databases which internally partition data over multiple nodes (which is another word for sharding), such as Vertica.  Not even Facebook's Presto tool can do this as it can not push down aggregation or subqueries. 