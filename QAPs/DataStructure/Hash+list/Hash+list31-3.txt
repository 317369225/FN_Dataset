Which database should I use for a killer web application: MongoDB, PostgreSQL, or MySQL?I'm working on killer web application, and I am really interested and worked with MongoDB. Is it a choice to choose MongoDB as a premier database? Or Is it better to use MySQL (with MongoDB/Redis as secondary)?
Originally Answered: In which case should I use MongoDB instead of MySQL or PostgreSQL with Rails?MongoDB solves some specific issues and difficulties over MySql or PgSql. It's good to have an idea what challenge you are looking at as a developer or builder of a solution. MongoDB can help with some of the following scenarios: Expecting a high load of writing to the database: There are security measures in data transactions, however Mongodb can do really well with high insertion values of data. High demand per less reliable sources: The idea of having replica-sets of data gives very interesting options for the developer to work with. Mongodb can do well with Master-Slaves scenarios. Specially having instant recoveries from dropped connections or similar cases. Sharding databases can become cumbersome after a while when using MySql. Well initially the idea of having limits of performance is an issue with a single table of database on MySql reaching 5-10GB per table. MongoDB has a built-in solutions for this scenario. In earlier point I mentioned the options that MongoDB opens up for Master-Slave scenarios. Well the database can be location based, for example in situations of having different versions of the product running per locations, Mongo have built in stuff for this as well. Large dataset where the Schema is unstable. Sometimes the developers start with 1Gb of data, while still not sure to the initial dataset. Perhaps this is going to be a good time to choose MongoDb a schema-less datastore over any other RDBMS.Keep in mind, dealing with Big data is still an issue, that doesn't mean just diving in using MongoDb will solve every problem. Personally I have decided to use both PostgreSQL and MongoDB in same solution sometimes, each for it's own work load. I usually don't compare solutions like these, because like I said each does it's own thing, but it's just good to have an idea how it benchmarks: There are other things can do better thatn MongoDB as well, but each comes at it's own cost: Source: NoSQL Performance Benchmarks: Cassandra vs HBase vs MongoDB vs Redis vs MySQL | Planet Cassandra Here are few talks that might help with understanding better about your choice: Introduction to MongoDB - O'Reilly Webcast Also, there is an AMA going on with the CTO of MongoDB, Eliot Horowitz, right now [Feb /5th /15]. Perhaps you can ask him personally your questions :) 