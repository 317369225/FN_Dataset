What is a good explanation that can help programming beginners understand the concept of compounding key data structures like arrays, linked lists, hash tables, and binary trees?
Most data structures can be expressed with very simple box/line diagrams.  Boxes are data, lines are pointed pointers.  I use a schematic "ground" symbol to represent a null-pointer, and a line between boxes, emanating from the inside of the "pointer" and terminating on the outside of the "pointee".  Operations on data structures are easy to represent in this way.  Singly-linked list, for example, is a train of two-box 'boxcars' with the second box in each being a pointer to the next one to the right (or left, your choice).  Insertion into this structure can be seen as a simple operation.  Take the pointer between the two 'boxcars' you want to insert a new item between, set the pointer of the new item to the item on the right (or left, your choice), set the pointer of the item to the left to the new item. 