Is MongoDB a good replacement for Memcached?
The straightforward answer to your question, as stated by others here, is no. MongoDB is not a drop-in replacement for memcached, nor AFAIK is it optimized for some of the cases memcached is - pure key-value lookup, timed expiry, or smart expiry at memory limits. However, With some code and appropriate provisioning, I believe MongoDB could be a good and fast enough substitute for memcached, while offering some useful features the latter does not, such as wildcard query/deletion of keys, querying into stored objects, and a store that starts "warmed up" instead of empty. Tangentially, I think some of these answers which say "MongoDB is fast, you don't need a cache layer" fixate only on cache as a layer over a local datastore and ignore the need to cache results from slow or quota'd remote services. For me at least, it hasn't been a case of "move to Mongo, and you'll never need a caching layer again". Updated 17 Mar 2011 â€¢ View Upvotes