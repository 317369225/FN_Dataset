How do I prepare for a software engineering job interview?This is a follow-up question to What's the best way to prepare for job interviews?
One of the things that's least talked of is the effective use of whiteboard during the interviews. Here is one way that worked for me: Split whilte board into two columns Use the left to list test cases Use the right to write the actual code It has to happen in this order.Â  Why does it work? Clears ambiguities in the problem: Before starting to code, listing the input and output for a few cases clears ambiguities. Also called as test driven development, it's really about establishing a common ground by making sure we both are on the page w.r.t the problem at hand. Buys me time: Most often it takes a bit of time before one can start writing code even if one has seen the problem before. It's best to write a few cases relevant to the problem instead of staring at the blank screen and looking dumb. It's looks as if I'm making progress which is often the case. This is especially helpful while solving new problems. Makes checking code (in)correctness easier: I just walk through the code for each of the cases on the left. Most often this is not needed because the interviewer would've worked the test cases by then. At times, one could get lucky and get away with a little buggy solution that works for all the cases listed. I've seen it happen. Makes problem solving a little more explicit: Interview questions of almost every company are now available online. Who would you chose? One who engages you in a problem solving conversation and arrives at the solution or one who just produces the solution. In summary - like others noted - practice a bit on white board too. 