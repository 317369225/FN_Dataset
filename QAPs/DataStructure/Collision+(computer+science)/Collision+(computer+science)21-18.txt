Why do many software engineers not like Java?
I agree with others who think that Java has too much boilerplate. As Shahar Roth said, the boilerplate is necessary when you have many engineers working on a large codebase, and people need to be able to do their jobs without knowing how to do everyone else's jobs. But I've always found this quote by Joe Armstrong to apply accurately to Java: "You wanted a banana but what you got was a gorilla holding the banana and the entire jungle." It's a language, and it has its strengths and weaknesses. There are no perfect programming languages. For any language, you can find engineers who hate it for reasons that are entirely understandable. But in my experience, what prompts people to gripe about languages is this event: Try to program something in a language I'm not an expert in Only get it working after much more time and pain than was expected. "In my old language I could write this in half the lines and a quarter of the time!" Conclude that the problem is the language, and not me. Given that for any task, some languages will be better than others, this is always going to occur. And of course, some languages will be bad at all tasks, and become the butt of programming jokes. 