Why do so many CS graduates flunk simple interview questions in algorithms?
Do you have any idea how many algorithms a person might have been exposed to during their academic or post-academic careers?  They don't keep all of them "in cache" as it were.  It might take them a while before they remembered an algorithm for a specific problem, and even then it might be a different one than you had in mind.  Considering that, are you giving them sufficient time?  Are you accepting answers that aren't what you expected?  Would you yourself have remembered these algorithms if you hadn't used them for the last interview or looked them up in a book an hour ago?  The first question is reasonable, the fourth is borderline, and the rest are just too specific. Some time, just for fun, invite them to grill you the same way.  I'll bet most of them could think of an algorithm you had forgotten (or never knew), and you'd be the one "failing" the interview.  Ditto for me, and for everyone else reading this.  The purpose of an interview is not for you to prove how you're smarter than the candidate.  Anyone you could hire that way would be interviewing for their next job in only a couple of months.  Get off your high horse, and try to concentrate on what the candidates do know instead of what they don't. 