How do I prepare for a software engineering job interview?This is a follow-up question to What's the best way to prepare for job interviews?
Like Paul Bryant very eloquently says: Everyone wants to win, but very few want to prepare to win. Ironically though, the best way to prepare for a software engineering job interview, is to not prepare for it explicitly.Â  What I mean, is that you should always be prepared. Software engineering is a field that changes very rapidly, companies come and go very fast (relative to many other industries) and what's lucrative today may not be so tomorrow. If you've built a career in the field, you will want to switch jobs every 3-4 years and hence you always have to remain interview-ready. To remain interview-ready, practice every week/every day, even when you are not looking. Practice real interview problems, even when you're not interviewing. Practice alone or with friends, on paper or on a computer, hard problems or easy problems, code in one language or five, this website or that bootcamp - it doesn't matter, as long as you keep practicing without making excuses. If you need to practice in a limited amount of time, then: 0. Have a clear idea of which companies you're targeting Not all interview processes are created equal. Not all companies believe in same processes. You should have a shortlist of companies you want to try first. Then find out as much as you can, about their interview processes. 1. Pick and stick to one programming language in your practice Get good at one and stick to it. Throughout the practice and your interviews. Don't hedge your programming language bets. 2. Get structure Depending on the time, your geography, budget, inclination and learning style, there are many options in the market: Coding (Data Structures and Algorithms questions): Books: Elements of Programming Interviews, Cracking the Coding Interview Websites: Leetcode, Interview Cake, InterviewBit, GeeksforGeeks Bootcamps: http://interviewkickstart.com (Yours truly runs this one) Systems Design/Architectural design/Object Modeling questions Books: Elements of Programming Interviews, Cracking the Coding Interview Websites: HiredInTech (not for Object Modeling though) Bootcamps: http://interviewkickstart.com (Yours truly runs this one) Behavioral questions Countless books, websites and coaches, and of course, the obligatory http://interviewkickstart.com . 3. Prefer to do multiple rounds breadth-first, instead of depth-first e.g. Do a few problems in each topic (assuming you have the structure from above) in round robin manner. e.g. do a few on Linked Lists, and then on trees, and then come back to Linked Lists. Why? Because everything builds on each other. 4. Get feedback from practice interviews Two things about practice interviews: 1. Don't do them without preparation 2. Do them only with experienced interviewers e.g. practice some 20 problems with binary trees, and then go do a mock interview who knows this stuff inside and out. Feedback received after focused preparation from an experienced interviewer, is far more actionable than feedback received with random practice. 5. Get a support system and believe in practice Realize that learning is a step function; not linear i.e. you won't be twice as good at 10 problems compared to what you were at 5 problems. Unless you're born with an IQ of 140+, your only way to get better is with practice. If you stop believing in practice, you'll give up easily and not reach your goal. It's a patient climb, often up-to 400-500 problems. There is no shortcut. Get a support system of like minded folks, and mentors. Try to get multiple mentors with different backgrounds, in order to avoid group-think. 6. Make sure you're preparing to be a good engineer, not just a good interviewee Because any experienced interviewer will be able to tell very quickly, which category you fall into. In other words, practice every problem with the intent of learning, and not performing. With proper intent, you will be able to ask better questions, learn better and hence perform better. Good luck! [See some of my other answers on similar topics here: https://www.quora.com/Soham-Meht...] 