What are some uses of hashing algorithms?
Hashing algorithms are core to many computer science concepts. With the advent of distributed computing in modern internet applications, they have become increasingly important. Whether it is associating machines with incoming requests or horizontally distributing data to particular machines, the use of hashing algorithms might be internal but very pervasive. All languages use some sort of hashing algorithms for storing key/value pairs in map or hashtables. In any use case, where you need to identify a value based on some sort of key, system will inadvertently fall back on hashing. Understanding the concept behind hashing algorithm has certainly helped me in multiple ways. I have come to appreciate the concept of prime numbers, have learned quite a lot about bit operators & idea behind key spaces and associated overflows etc. I have also come to appreciate the effect of birthday paradox. I was so infatuated with this idea, that I spent many days doing variety of tests on the effect of hashing algorithm on collisions. With basic algorithms (not naive) the collision ratio was always between 30-40% for relatively small input. Think about this when the input size becomes larger and how the hashing algorithm becomes key to the performance of the system. In Java, if you have a use case where you need to override hashcode method for a custom object and don't have a solid idea behind hashing, it might land you in trouble if the object is used as a key in some map. Almost all modern string comparison algorithm will internally use a hashing algorithm to increase the efficiency. I have done quite a bit of work on plagiarism detection and found the concept of rolling hashes to be extremely useful. For my work I had used hash algorithm based on Horner's method (You can read my answer related to rolling hashes: Pawan Bhadauria's answer to What is a rolling hash and when is it useful?). I think its worth spending time on learning the intricacies of hashing algorithms and appreciate their usefulness. Just to wrap up :-) EDIT: I saw someone mention Merkle Trees in other answer. Merkle Trees are actually a great example for illustrating the power of hashing. If you want more details on how Merkle Trees are used, take a look at my blog post: Distributed Systems Part-3: Managing Anti-Entropy using Merkle Trees by Pawan Bhadauria on Love for Programming Updated 29 Apr 2014 • View Upvotes • Asked to answer by Mubashra Safder