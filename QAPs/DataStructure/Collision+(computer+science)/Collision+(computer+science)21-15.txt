Why do many software engineers not like Java?
Java has its downsides, but many "reasons why Java sucks" given here are nonsense. It's the people, most of the times The mess you find in other people's projects is in most cases 1: not due to how Java works 2: nor due to the limitations ,  but 3: how people have been taught to code. I have worked in projects using several different languages, including Java, C# and ActionScript when Flex was still fashionable. You recognize the work of (poor) Java-coders by the insane amount of layering, the insane code verbosity for even simple solutions and how things simply do not make sense. Does Java forces you to work that way? Nope. Things can be done simple, in a simple way, with simple structures and a limited amount of code and classes in Java as well. It's the fashion In the end it is mostly about fashion. Somebody cooks up a certain approach that solves a very specific problem, then tells the world how awesome it is. In some cases this then becomes a "Standard" that "everyone will understand" and that "will streamline the development process". In most cases these fashionable solutions are crap.  Dynamic Typing? Is a fucking bloody nightmare Been there, done that and it is one of the reasons I hated going back to JavaScript. The key-word here are: 1: Code refactoring 2: Pre-compiler 3: Finding stupid mistakes on pre-compiling Dynamic Typing lacks the possibility to pre-check the code-sanity and code-coherence using  simple rules. These simple rules allow the pre-compiler of your IDE for quick checks in your code, without you having to test every single part of your code by unit tests or manual testing: 1: I put this thing into that other thing. Is that allowed? Or will it break my code? 2: I made a change in my code here. Will that change break something else, eslewhere? Dynamic Typing just allows for anything anywhere, until you want to use whatever you put somewhere. And is fun until something somewhere put a stone brick instead of a banana there, causing the code to break its teeth. Which will happen at some point and a complete nightmare when your solutions become complex and your team counts more than 1 person. The one thing I miss: Event Handling the C# way C# allows you to add event listeners in a very simple way: object.myEventHandler+= myEventHandleMethod public void myEventHandleMethod(SomeClass someStatusObject) In Java, you need to jump through several hoops for this. 