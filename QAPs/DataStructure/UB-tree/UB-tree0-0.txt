What are the data structures used in data warehouse? In what way, they differ from data structures used in relational database?
Traditional relational databases typically use B-trees and heaps to store indexed and non-indexed data. This is due to the fact that traditional RDBMS is optimized for workloads which consist of frequent insert/update/delete operations and wide schema selects (i.e. count(*)). This is something that B-trees handle really well and there is probably no better data structure for that use-case. Data warehouses have different use-cases and serve different query workloads. Data does not change as frequently and is mostly added (as an endpoint to the hot-warm-cold data pipeline), while queries against the warehouse typically involve only a few columns and some form of aggregation (analytic queries). Because we usually operate only on a small number of columns (i.e. rarely retrieve all row data per row) and handle a lot of data, table data is typically stored in a compressed, column-major format, rather than a row-major format (commonly used in B-tree based clustered indexes). This way we conserve used space (as we implement concepts like run-length, Huffman encoding, generic and specialized compression algorithms) and provide the ability to access individual columns, as dictated by the nature of the workload. Such data structures are typically referred to as Columstore Indexes. The use of word 'index', here, is misleading, as the structure is not really an index, in the traditional sense, so it does not provide the ability to do fast point look-ups, filters, or range queries. The structure is typically accompanied by bitmaps and Bloom filters which facilitate hash joins, so add these to your data structure list. Of course, this only applies to tables which contain fact data. Tables which hold dimension data (i.e. a relatively narrow, discrete set of widely used values) are still stored as B-trees. There are plenty of different data warehouses and plenty of different technologies used. Relational ones usually use what I have described. 