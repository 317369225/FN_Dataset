How can you count all the duplicates in a binary search tree in O(n) time and O(1) space?Traverse the tree in-order (Tree traversal). Then use the same algorithm you would for a sorted list. To do this without using DFS, BFS or even IDDFS, that all use logarithmic memory, we need to have the following ingredients: each node in the tree must have a parent pointer there must be a way to compare two branches for equality Then we have the following algorithm: v = root prev = root loop:  if v.right == prev and v == root: done  if v.right == prev: prev = v; v = v.parent  if v.left == prev or v.left == null:  process v;  if v.right != null: prev = v; v = v.left  otherwise: prev = v; v = v.left 