Is array [] and array* one and the same thing while using as parameter inside a swap function? For eg. int swap (int array[]) works same as int swap (int array*).Not addying much I agree with all the other answers here, Simply stating array[k] is equivalent const *array=malloc(k*sizeof(whatever)); Meaning you can't change the reference in array[] nor can you free it. From the point of view of how it is converted to assembly, there are certain differences *array in the memory would allocate 4 bytes by the tag name array with the value if you have initialized any while array2[] would make a tag with 6 bytes having the actual content there and not the address of where the contents are stored. Here is the example source code 12345 char *array=0x00; char array2[6]="Hello"; int main(){ } would go to (in nasm format) 12345 array2: ; fword  db 48H, 65H, 6CH, 6CH, 6FH, 00H ; 0000 _ Hello. array: ; dword  resd 1 ; 0000 But yeah while using they will be absolutely the same. 