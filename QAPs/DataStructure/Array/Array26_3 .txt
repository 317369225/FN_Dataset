You can wrap the array around a struct and pass the struct from the function.  1 2 3 4 5 6 7 8 9101112131415161718192021 #include <iostream> using namespace std; typedef struct{ 	int array[10]; }wrap; wrap func() { 	wrap w; 	for(int i=0;i<10;i++) 		w.array[i]=i; 	return w; } int main() { 	wrap b=func(); 	for(int i=0;i<10;i++) 		cout<<b.array[i]<<" "; } However passing array by value is not a good idea as copying the array contents to another memory location is an expensive operation. Define the array in the caller function instead and pass the pointer to that array. Passing array by value is generally unnecessary and should be avoided. 