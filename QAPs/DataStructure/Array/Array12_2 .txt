Is array [] and array* one and the same thing while using as parameter inside a swap function? For eg. int swap (int array[]) works same as int swap (int array*).A2A. Yes, they are one and the same thing. Arrays are always passed by reference. When you pass an array as an actual parameter, the called function receives the base address of the array (ie. address of array[0] in your case). Also, point to be remembered here is that arrays are allocated contiguous memory locations, ie. array[1] will be physically located right next to array[0] in the memory. So, when you write array[a] in the function, all you are doing is writing *(array[0] +a). Here, the value of a will depend on the type of array. If the array is of type char, a will be 1 byte. if it is of type integer, a will be 4 bytes and so on. 