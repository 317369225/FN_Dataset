Given an array of size n, how do you find all the possible subsets of the array of size k?Would appreciate if you could explain your code/solution a bit and also mention its time complexity.Run this code in Turbo Prolog to get subsets of an array of length k  1 2 3 4 5 6 7 8 91011121314 domains i=integer l=i* predicates subs(i,l,l) succ(i,i) clauses succ(X,Y):-X=Y-1. subs(0, [], []). subs(Len, [E|Tail], [E|NTail]):- succ(PLen, Len),PLen>0,subs(PLen, Tail, NTail) ;NTail=[]. subs(Len, [_|Tail], NTail):- subs(Len, Tail, NTail). Example: 12345678 Goal: subs(2,[1,2,3],X) X=[1,2] X=[1,3] X=[1] X=[2,3] X=[2] X=[3] 6 Solutions (note: This still gives subset of length<k as output, suggestions appreciated) 