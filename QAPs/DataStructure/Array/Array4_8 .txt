Why do we need arrays when we have vectors in C++?I want to know in which scenarios arrays will serve a better purpose than vectors. Can I stop using arrays at all ?In principal , vectors(Internally) need a dynamically allocated array to store their elements. This array may need to be ( logarithmically ) reallocated in order to grow in size when new elements are inserted.[1] compared to arrays, vectors consume more memory in exchange for the ability to manage storage and grow dynamically in an efficient way. This also means that compared to arrays, vectors consume more memory in exchange for the ability to manage storage and grow dynamically in an efficient way. Compared to the other dynamic sequence containers (deques, lists), vectors are very efficient accessing its elements (just like arrays) and relatively efficient adding or removing elements,but only when the item added/removed is to/from its' last/first position,otherwise they have less consistent iterators and references than lists. [1]Sameer Gupta's answer to In languages like C and C++, why do arrays have to be of constant size? 