How are NPCs programmed?
The typical way of doing this would be to have a dialog tree of sorts that looks something like (pseudocode): delegate bool IsVisible(); delegate bool MyEffect(); class MyDialog {   string text;   MyDialog[] children;   IsVisible visiblecheck;   MyEffect effect; } And then you have one of these as the root of a tree of dialog options. Basicly for each element you display it's string and then check each of it's children to see if it's supposed to be displayed given the current game state (by calling it's visibility delegate which checks for example what objects you have in inventory or whatever). If yes then you display it, and allow the user to click it. When he clicks an option it calls that child's "effect", to for example give objects, remove objects, play sounds, etc.. and switch to that child as the current node and do all the above again. When you reach a node with no children you display the string and close the dialog. That's the typical Monkey Island / Star Control / adventure game type dialog for you. It works a lot better if you are using a scripting language of some sort because in that case you can store your conditions with your data so you don't have to recompile each time you change a NPC's dialog. 