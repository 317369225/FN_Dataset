How do you write dialogue trees for video games?
If you've ever read a "chose your own adventure" book you already understand the basics principles of a dialog tree. Unlike the beloved books from childhood however video game dialog trees aren't bound by the physical limits of the paper nor the simple choices afforded from a lack of memory of previous choices. A dialog tree is a kind of Directed graph with the nodes representing dialog content and the edges representing player choices. There implementation under the hood is simple enough that anyone who's taken a Data Structures class should be able to simple build one.  A smart implementation is one that doesn't encode the the structure or content of the graph directly, merely references that can be dynamically loaded as data files encoded as XML or JSON by an external tool and then imported at run time. This makes managing and authoring the content easier and eases localization. Authoring and managing the content for dialog trees is another challenge altogether as the amount of content in a naive implementation quickly balloons exponentially. It's important to have the major story elements and decisions thoroughly planned out before you even start building up the structure of the graph. From there I would start by defining the major story decisions first since they will define the overall structure of the graph. At this stage I wouldn't be writing any actual character dialog, simply describing the gist of the story content in the nodes and summarizing the choices in the edges. Once the most important stuff was out of the way, I would work backwards, fleshing out the structures of the graphs for conversations in order of highest to lowest importance to the overall story.  As you do this you will come up with ideas that feed back important details to the main choices, and you should make adjustments where you feel it's best. I wouldn't try this in the opposite order however, or you will have too many things to consider and the major choices will be cluttered with too much context. I wouldn't write a single line of actual dialog until the graph was fleshed out such I could manually walk the entire graph following the different possible threads and I was comfortable that it was complete and made sense. Once the overall structure is complete, I'd start writing the content for individual dialogs. Here I'm more likely to proceed from front to back through the story so it's easier to keep track of who knows what. It's a lot of work, there's a lot more content than a novel of comparable length due to the branching. This isn't something I would attempt without some kind of tool to make managing and visualizing all that information easier. This is a screen shot of ChatMapper: the Non-Linear Dialogue Editor, a commercial program for managing dialog trees. I could also see creating your own using WindowsForms and C#, WxPython, or Cocoa if you have customization needs an existing tool couldn't meet.(1)   (1) I generally consider it a great idea to buy tools like this instead of making them myself. The $200 it takes to license it seems small in comparison to the amount of wages it would take for me to make it myself and then someone else is responsible for the maintenance. That last part could also be a bad thing however. 