What are good ways to find all the possible paths between two nodes in a directed graph?
I'm going to assume that you're talking about simple paths. There could be infinitely many non-simple paths if the graph has cycles. An algorithm that runs in O((V+E)2 V +PV)  O((V+E)2V+PV) , where P  P is the number of paths, does the following. We'll compute a function f(v,S)  f(v,S) where the two parameters are a vertex v  v and a set of vertices S  S . We define f(v,S)  f(v,S) to be 1  1 if there is a path from the start vertex to vertex v  v , going through exactly each vertex in S  S once, and 0  0 otherwise. We know that f(s,S={s})=1  f(s,S={s})=1 , where s  s is the start vertex, and we can do a BFS to compute which pairs give a value of 1  1 . From there, we can then backtrack from each pair (e,S)  (e,S) where e  e i... (more)