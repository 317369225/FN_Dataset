What are some uses of hashing algorithms?
Hashing really has one primary use: speed. As a secondary function, it is also parallel capable. Few storage mechanisms are. Hashing requires some form of record locking or director type operation (I use a director with workers where the director prevents two workers from working on the same record). And expansion of a hash table is **NOT** parallel capable since it changes all the hashes. Arrays and hash tables are two of the best rapid use storage machanisms that are parallel capable. Vectors have most of the same properties of arrays and hashes except expansion and add/erase/insert must also be controlled. Hashes can be interchangeable with many tree based storage structures except that a hash always uses a planned amount of memory where-as a tree is "built-up" and easier to expand. STL's <map> template can be used as either a binary tree or a hash with similar results. The hash has deterministic access times, whereas the tree does not since it relies on tree depth to determine access time. Thus hashes are very popular in real-time deterministic operations. 