If advanced algorithms and data structures are never used in industry, then why learn them?I and people I know have never used any advanced algorithms or data structures in industry and some of us have 20 years of experience in industry. How do you motivate yourself to learn advanced algorithms and data structures or, for that matter, go for Programming contests etc..
Horrible answers, mostly from academics... The idea is to first learn some good solutions others have come up with to common problems then start to mature with things to where you can think and approach problems in a way that you can come up with valid custom solutions. The stuff you encounter academically is a tool for attacking the real hard shit you are going to hit professionally. About "never being used in the industry", this isn't the point. You may or may not be able to use the pre-canned sort algorithm you learn. Professional programmers will say you won't, and they will be right. Academics and hiring managers will say you will, and they will be wrong. Neither of these are the real questions that need to be answered. The better question is "is learning this of any value?". You are learning ways to think and to break down problems. You demonstrate that and you are going to get hired where it matters. You don't want to work at the places looking for people who can memorize the encyclopedia of algorithms. They are the mature mega-shops that are there to extract every ounce of talent out of you for the benefit of themselves and their shareholders. Your career upside is very limited with such endeavors. So the motivation for me to learn such things is the shear beauty one can find. I was looking over an algorithm last night to code just for fun (from a book over two thousand years old, Elements) and seeing it's implementation in modern code put a smile on my face. 