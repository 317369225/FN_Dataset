Why did innovation on persistent data structures come from Clojure before Haskell?
Haskell definitely had persistent data structures long before Clojure existed. Clojure didn't pioneer them, but it has made them more popular just due to its own popularity and Clojure is more popular than Haskell so therefore folks working in JavaScript are more likely to have tried it. Haskell didn't pioneer persistent data structures either, by the way. That credit goes largely to Lisp. Both Clojure and Haskell and most modern languages for that matter, owe a huge amount of credit to Lisp for a lot of the ideas they are built on. Further credit for immutability advancements goes to ML which existed before Haskell. Updated 14 Oct â€¢ View Upvotes