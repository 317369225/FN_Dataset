What are the most important concepts in C and C++ that should be learnt and understood before a programming interview?I don't have much time left for my interviews. So please suggest to me the concepts I must know before going for the interview.
Not really a feature of either languages, but I'd suggest trying to learn some parallel programming concepts - e.g. threads, mutexes, etc.  Some interview questions ignore parallelism, but if you do get thrown a parallelism question, it'll be good to be able to talk and reason intelligently about it. In C (on linux), I'm most used to working with the pthread library; I don't know of a C++-style threading library, so most likely would use pthreads there as well. Of course, I should add that multithreading / parallelism is really on worth learning once you have the basics down - pointers, references, const, object-oriented programming, etc.  But assuming you're pretty comfortable with those concepts, I think multithreading is a logical next step.  One of the advantages here, is unlike some more advanced C++ concepts (e.g. templates), parallel programming concepts tend to be more universal - you can apply them to Java, python, etc. 