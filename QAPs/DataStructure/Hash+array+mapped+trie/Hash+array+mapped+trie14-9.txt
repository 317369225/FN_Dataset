If advanced algorithms and data structures are never used in industry, then why learn them?I and people I know have never used any advanced algorithms or data structures in industry and some of us have 20 years of experience in industry. How do you motivate yourself to learn advanced algorithms and data structures or, for that matter, go for Programming contests etc..
Here is a question I saw yesterday on a Chrome programming message board: "I am trying to compare a dozen urls against a list of 10,000 urls, but it is very slow", followed by some code that did a sequential search in an unordered list. Clearly this is someone that could have benefited from some basic understanding of algorithmic complexity, and needed binary search and hash maps in his tool box. These are not advanced by any means, but often, people who deride "advanced" algorithms really mean why do I have to learn algorithms at all. Don't be that person.... Update Even in the most mundane, corporate applications, knowledge of algorithms is helpful. For example, I had to implement a system to define an approval hierarchy for a process. It was a seven step or more approval process, with hundreds of possible people (nodes). I had to make sure that the graph had no cycles when it was edited (did not have any loops for the untrained). This is a problem that is easily solved by someone who has completed an undergraduate algorithm course, not so easy for someone who has not. You will even have a problem googling for an answer. Let's say it has been a few years since that undergraduate algorithm class and one is a bit fuzzy on how to do it. They at least know to search for terms like "directed graph no cycles" or "check if a graph is a DAG", and quickly find multiple solutions involving more basic algorithms, like DFS. Someone who did not know the lingo  would search for "hierarchy no loops", leading to very poor results... If they eventually did luck up on a result, they will find more algorithms they do not know, like DFS. Which one will be more productive, and be better compensated as a result? Updated 19 Sep • View Upvotes