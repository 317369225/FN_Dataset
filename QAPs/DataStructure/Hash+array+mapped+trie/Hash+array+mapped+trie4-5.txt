How does functional programming knowledge improve imperative programming, software engineering, and system architecture?How does knowledge of functional programming improve one's skills even when it is not used directly?
If you are writing code that do not support functional paradigm at all, it does not improve anything in the actual product. If it is Java, you may start overusing interfaces as function parameters to make you feel like having functions as parameters with the expense of ugly inner class definitions. The real improvement is that now you know how to make your code/product much better if you were using a language that includes functional paradigm. This would at least result in advocating use of such language for the next projects or looking job at somewhere else. Now you are one step ahead of many programmers. People that do not have an alternative view on something can not realize the barriers around themselves. For them, it is the only world that can be lived in. Having functional programming knowledge puts those barriers for you quite further. 