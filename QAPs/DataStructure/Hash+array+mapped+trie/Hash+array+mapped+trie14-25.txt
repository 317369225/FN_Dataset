If advanced algorithms and data structures are never used in industry, then why learn them?I and people I know have never used any advanced algorithms or data structures in industry and some of us have 20 years of experience in industry. How do you motivate yourself to learn advanced algorithms and data structures or, for that matter, go for Programming contests etc..
When I hire people, I ask them to write a function, in Java, reversing a string. Half the people flunk that question. Some people even say they already studied and they don't need to know and leave angrily. Then I ask them to write the same recursively. Half the remaining people say they forgot because in real applications recursivity is never used. Databases exists because BTrees+ exists. Somebody has to create them. Somebody has to solve the bugs. If you invent a better data structure that the BTree+, you could take the database market by storm. Not if you try to sell it to Oracle, but yes if you develop your own database engine. The fact that some engineers accept to work at jobs that don't require their abilities means that there is an overpopulation of engineers so that they replace programmers, or that engineers can solve things the engineering way, but they prefer to create bad programs because no one really cares within the company. The first one would be a market problem and probably you are defenseless against it. The second one is when engineers don't take pride on what they do for a living. One caveat though: Take into consideration that whenever you decide to apply a data structure or algorithm, a better one might come up. You need to make sure that users of your data structures or algorithms see only an thin interface that explains what is being delivered, but they don't know how. This is important because too many times I've seen APIs that show the internals of the algorithms and data structures. When you need to change them, they have been used thousands of times, and you need to change all that code, which makes it almost impossible, or at least incredibly expensive. 