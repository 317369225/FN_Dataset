Can you optimize the Kruskal algorithm for a complete graph, which runs in O(E+V) logV to O(VlogV), where E is the number of edges and V is the number of vertices in the graph?The complexity of Kruskal algorithm is bad when the graph is very dense that means it will beÂ  O(v^2 log V).
The Kruskal's runtime can be achieved to O(VlogV) by following procedure. It exploits the fact that MST (minimum spanning tree) is subgraph of Delaunay Triangulation, and you can calculate Delaunay Triangulation in O(VlogV). The size of Delaunay Triangulation is linear i.e. O(V) so the edges which you will sort is linear or O(V). Since the sorting is dominant in Kruskal algorithm, you can achieve the time bound O(VlogV) for Kruskal. 