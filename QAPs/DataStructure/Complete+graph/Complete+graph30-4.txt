How do programming contest problem setters make test cases ?
Originally Answered: Competitive Programming: How are the test cases for problems developed on CodeChef, Topoders, Codeforces, HackerRank, and HackerEarth?Test-cases can be divided in 3 main categories: Corner cases: These are to check your solution if it is working for all cases. The corner cases are always generated manually. And has to be done manually. Corner cases here I mean, are the Exceptional cases where a little carelessly written code may fail (whereas same code works for other cases and it happens, really.) For example: We can assume that primes are odd, but corner case is 2. Boundary Cases: These are to check if your solution has considered all the constraints. These are the cases where maximum and minimum limits of each input are considered and created. If you don't consider these constraints in your solution, then your code fails at these cases. These can easily be generated manually or by some program Huge Test-cases: These are to check your solution is optimal enough and produces answer within time limits. These are always generated by program because doing them manually will be quite difficult and of huge pain. The simple program can be written for generating the random numbers, strings etc. To give you a rough example, if you want to generate n which is no. of elements in array a, followed by n no.s which are elements of array. n<10 and A[i]<1000 for each i. The program can be: n = random_number(10) //get random no. from 1 to 10 for i in range(n): //do n times       a[i] = random_number(1000) And once n and a[] will have values, you can simply print them in files and you get a test-case. Additionally, boundary cases and huge cases can be combined. Or multiple classes of testcases can be generated. For example, if constraint on values of a[i] is 0<=a[i]<=1000, then a test-cases with all values of a[i] >900, another with a[i] < 100, another with 400<a[i]<600 and like that, are also generated. 