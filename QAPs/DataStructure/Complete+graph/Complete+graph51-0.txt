What are some unsolved problems in graph theory?A basic explanation of the problem with pointers to its current status would be appreciated.
All-pairs shortest paths (in truly subcubic time) Suppose you are Google Maps, and you want to find how long it takes to get from any point to any other point.  We can model this as a graph problem, where the vertices are addresses, the edges are roads, and the weight of an edge is the time it takes to traverse that road.  To solve it we'd have to compute the shortest distance between all pairs of vertices. How fast can we do this?  Dijkstra's algorithm lets us find the distance from one vertex to all the others.  Running it from every vertex gives a runtime of O(VE+V 2 logV)  , which can be O(V 3 )  if the graph is very dense. Surprisingly, this is pretty much the best known solution.*  There are algorithms that shave off subpolynomial factors, but we don't know any truly subcubic algorithms - ones that will solve our problem in O(V 3−ϵ )  , for some ϵ>0.    (Even O(V 2.99 )  is beyond us right now!)  We're pretty sad about this, since all-pairs shortest paths has a lot of applications, and O(V 3 )  is slow when the number of vertices is large. For more information, see Lecture 3, Algebraic Graph Algorithms * When the problem is more tightly constrained (for example, if the graph is unweighted, or the weights are small integers), we know more efficient solutions. 