What is the most esoteric programming language that you have tried?How did you learn about that programming language? What made you try programming using that language? Did you like programming using that language? Describe your experience.
For me it was the PRAM programming language.  PRAM was the name of a pattern generator option for the old Tektronix 3200 series of digital integrated circuit testers.  While SSI and MSI chips could be tested with stored patterns, the testing of RAM required so many rows of data, that it was more efficient to generate them on the fly.  While another program written in another language was used to set up drive and comparator voltages, timing generators, etc., the PRAM language was specific to generating rows of data in real time. Each 96 bit instruction consisted of a 32 bit instruction word, and a 64 bit data word.  The bits of the data word could be fed to the pin electronics, as could the individual bits of two registers. The language itself was not unlike microcode.  Each statement was created by stringing together a series of phrases.  Each phrase controlled a specific segment of the hardware, and would execute in one of five event times within each clock cycle.  INC RA for instance, would increment Register A. The 12 bit registers would typically be used to generate address bits.  It was possible to write a useful loop in just one instruction.  A program segment to load a 1K RAM with all ones might look like: LOAD 1023 to RA LOAD FAIL to TRAP CLEAR ERROR, TEST, TRAP ON ERROR, IF RA NEZ GOTO @, DEC RA In the example above, FAIL is the label to another instruction, NEZ means not equal to zero, and GOTO @ means repeat this instruction. A complete program of course was much more involved.  There are standardized tests for memory chips such as Checkerboard, Walkpat, Galpat, etc. to test for address uniqueness, surround disturb, and so forth. I used this language from 1982 thru 1992, when I worked as a Component Test Engineer. 