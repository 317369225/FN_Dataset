How do I find the Hamiltonian cycle of a given weight in an undirected complete graph?
The problem is clearly NP-Hard. I don't know any reduction from this problem to TSP or any other NP-complete problem. It's easy to see the N*N! solution. Just guess any permutation of the nodes and verify in O(N) that its weight + the path from start and end equals the given weight. The following solution has complexity O(N^3 * (N-2)c(N-2)/2 * (N/2)! * log((N/2)!)): 1. Let's fix a central node and start/end node(there are N*(N-1)/2 such points): 1. a. Now for each subset of size (N-2)/2 (excluding the start and center point): 1. a. 1. For all permutations of the subset (setting the start as the first node and the center as the last node) 1. a. 1. a. Store the weight of the permutation in binary search tree or what-so-ever support look-up in Log(size) or better. 1. a. 2. For each permutation of the complement subset (the subset of the rest nodes, setting the center as first node and start as last node): 1. a. 2. a. check whether the given weight - the length of this permutation is found in the binary search tree or not. I think this is good enough complexity for NP-hard problem + it's better than N*N! solution, for N higher than or equals 8. 