What is the most esoteric programming language that you have tried?How did you learn about that programming language? What made you try programming using that language? Did you like programming using that language? Describe your experience.
Probably the most estoeric I've ever programmed in is LRLTran.  This was a language used on Supercomputers (Cray's for me) that was a combination of Fortran with "C"style pointers, but semantics that allowed for more powerful compiler optimizations. I was on the compiler writing team and handled the backend code generation portion for this language which is how I was exposed At the time, most programs utilized heavy mathematical and physics algorithms, and due to the nature of the work at the National Lab (I worked on Magnetic Fusion Energy research support for scientists) we didn't have the major companies supplying libraries optimized for those apps. The semantics of LRLTran (i.e. you are not allowed to overlap memory segments in parameters passed to routines) allowed for powerful scheduling and vectorization optimizations to occur.  So in C, for example, you can do the following: void dostuff ( int * array1, int * array2, int length) {    int i;    for (i=0; i < length; i++) {       array1[i] = array1[i] + array2[i];    } } But you don't know if array1 and array2 contain the overlapping portions of memory, so you're ability to utilize vector operations (which work on arrays of data simultaneously) is not allowed or you'll get wrong answers. In LRLTran, that is "illegal", i.e. if you do send overlapping data to array1 and array2, you'll get random results based on the level of optimization you choose for the program. As you can imagine, most of the issues we ended up with were scientists breaking the "rule" and it would only show up in production/highly optimized runs :( 