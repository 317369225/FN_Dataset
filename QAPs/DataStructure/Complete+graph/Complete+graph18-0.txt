What is an algorithm for scheduling a tournament to finish in the shortest possible time, given a round robin tournament (where every player plays against every other) among n players (n is even) that can be represented by a complete graph?
If n is not divisible by 4, draw all the teams in a circle. For every match cycle, draw a line that cuts this circle directly in half so that both sides are mirrors of each other. Pair up the teams that mirror each other, and if there are any, any teams that intersect the line (There will either be 2 or zero). These will be the first cycle matches. Then, rotate the circle clockwise by one team, and do it again. Stop when the pair of teams that was originally divided by the line is divided again. Next, if n is divisible by 4, draw all the teams in a circle again. The first match cycle will be assigned adjacent pairs of teams, label them "a" and "b". Then, treat each of these pairs as a single node for the n/2 case. Calculate all the pairings you would do with the n/2 case. For each of these calculated cycles, there will be two replacements for pairs of nodes: the first one where the link represents a of the first node going to a of the second, and b of the first node with the b of the second, and then the second replacement will be linking a of the first node with b of the second, and b of the first node linking to a of the second. 