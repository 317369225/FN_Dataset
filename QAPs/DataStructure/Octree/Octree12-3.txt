Under what conditions would a slow algorithm run faster than a fast algorithm?
There may be many conditions where an usually slower algorithm works faster than an usually faster algorithm. For example insertion sort is faster for small inputs compared to quicksort. However in terms of average running time complexity of quicksort O(nlogn) is better than that of insertion sort O(n^2). Similar thing also happens for a data set where most of the data is almost sorted. Generally speaking no algorithm is fastest algorithm for all possible scenarios and mostlyÂ  there exist exist an otherwise slower algorithm for the subset of the problem which works faster than the supposedly faster algorithm. 