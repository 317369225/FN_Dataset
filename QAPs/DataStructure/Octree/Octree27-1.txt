How do I build an approach to understand any data structures and algorithm problem?
Like others, I suggest you take the obvious classes. However, I suggest that you focus on a higher level: not just understanding the algorithms and structures themselves, but understanding their classifications.  For example, there are an entire class of algorithms that boil down to 'divide and conquer'.  There are a number of other algorithm design paradigms (e.g., greedy algorithms). Once you start to observe these classifications, your thoughts will immediately turn to these paradigms when you encounter problems. 