Computer Graphics:Â Are modern game engines threats to traditional renderers?
Speaking from a VFX perspective: No, not yet, and I doubt they will be for some time and certainly not without some kind of collaboration. Essentially, any studio would have their workflow built around renderman/arnold/mental ray/mantra etc, it would take a large pipeline redesign to accommodate or switch to something like Unreal or CryEngine. In VFX, you'll be frequently dealing with geometry with astronomical poly counts, requiring complex shaders applied to them, or undergoing a complex simulation (rigid-body, fluid). Even with a real-time engine, you'll experience huge performance hit - you're not going to be getting 60fps. Even for use in layout or for testing procedural effects, you need to make sure that the shaders applied in the real-time engine match those in the offline renderer, and that's difficult at the moment (different shader engines/shading languages). Also, objects undergoing physically based simulation need to match what happens in the simulation engine that runs offline (usually Houdini/Maya/Naiad/Realflow) etc. If the our tests won't resemble what the final image looks like, what's the point in using it, regardless of speed up? I'm excited by what these offer in terms of previs/motion capture (more disposable elements of production), but they won't be replacing arnold or renderman pipelines anytime soon. 