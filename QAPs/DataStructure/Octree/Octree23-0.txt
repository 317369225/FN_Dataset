What are the best resources for writing voxel (block-world) 3D graphics engines?
Notch has blogged quite a bit about Minecraft's implementation. Minecraft uses standard rasterization. There would probably be performance advantages in shader and engine code if every voxel is axis-aligned since it makes ray intersection very cheap. This is how I would do it: Start by drawing everything each frame and worry about content over performance. When things get slow, implement an octree with pre-calculated LOD at each node, and search the web for a way to determine which node to draw depending on the view frustum. The Morgan Kaufmann engine books would probably be very useful, even if they aren't specific to voxel engines. 