How do I derive the best and worst case height of a B-Tree?
In a B-Tree, each node has at least B/2 and at most B values, where B is the number of values per block. The number of values stored in the leaves is clearly no more than N, the total number of values in the data structure. Therefore, there are no more than NB/2   NB/2 leaf nodes, no more than N(B/2) 2    N(B/2)2 parents of those leaf nodes, and so on. In log B/2 N  logB/2⁡N levels, we're down to one node. That's the worst-case height. The best case is if each node is completely full. Each node can hold up to B values, so you have at most B  B values at height 1, B 2   B2 at height 2, and B h   Bh at height h  h . We have to have to hold at least N values, so we need h≥log B N  h≥logBN . In summary, log B N≤h≤log B/2 N  logBN≤h≤logB/2N . Thank you for your feedback! Your response is private. Are you satisfied with this answer? YesNo 739 Views · 3 Upvotes · Answer requested by Rupjit Chakraborty