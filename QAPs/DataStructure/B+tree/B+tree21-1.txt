In which situations is using a hash index faster than using a B-tree index for an equality search, and why?
A hash table has a O(1) average search and an O(n) worst case search.  The O(n) case can be avoided by proper choice of hash function.  A B-tree has a O(log (n)) average and worst case search.  So if you are only concerned with strict equality testing, a hash index will win most of the time.  As Victor Peng pointed out, a B-tree excels for range based searches.  As an example, I want to find all people whose last names start with H.  A hash index doesn't support this type of query, whereas a B-tree does. Thank you for your feedback! Your response is private. Is this answer still relevant and up to date? YesNo 7.1k Views · 5 Upvotes