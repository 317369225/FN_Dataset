What is the importance of this algorithm?
Yes, the word transformation problem is the same as the LinkedIn problem.  Good job thinking like a computer scientist!  That's the right level of abstraction. This problem actually shows up quite frequently in different applications.  It's known as the single-source shortest path problem.  There are multiple algorithms to solve it - you can easily search for them, now that you know the name of the problem. You seem to be using something like the breadth-first search algorithm, which is usually taught near the start of a CS degree.  That is enough in a setting like yours, where all allowed steps have the same cost (i.e., a path of 5 steps is always worse than a path of 4 steps, no matter what the particular steps are).  An A* algorithm will generally be faster, though.  It is based on your intuition that you should start by exploring paths that bring you "closer" to the desired output word. By the way, you might enjoy Lexical FreeNet for finding various kinds of paths between words.  And The Oracle of Bacon for paths between actors. Updated 25w ago • View Upvotes