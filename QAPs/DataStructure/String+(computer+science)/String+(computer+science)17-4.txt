How does one become a great coder?
Actually, there is a guide, which is understanding and writing software systems of significant size and complexity yourself. Examples include search engines,  operating systems, file systems, distributed systems, browsers, compilers and countless others. Great coders are not exceptional because they have been really good at doing what they have been told to do. Instead, they independently picked something of sizable size and complexity and came up with a novel and interesting solution, carrying it through by themselves, or leading a team, from start to finish. For example, writing a file system sounds like a daunting task and it is indeed challenging, but is certainly doable by a single motivated person. More conventional file systems are based on low level details of storing data in operating systems such as Linux, Windows etc.  More recently, they have become much broader to the point that data organization schemata in a novel large scale systems are called file systems. In my previous startup, Wowd, we created a distributed hash table (DHT) based file system (DHTFS) (we patented it, Google owns the patent now). I have seen recently torrentFS, a file system based on torrents, which makes a lot of sense (our DHTFS was similar in spirit). Google File System (GFS) is another great example. Writing a search engine is a terrific way IMHO of getting on your way to be a great coder. It may not be necessarily novel, but doing it yourself , including all major components of crawling, indexing, ranking and result serving will teach you a lot. Take a look at DuckDuckGo and Gigablast. A motivated person can do it initially in about 6-12 months of intense engagement. Start thinking  bigger about software systems and build one yourself. You will be surprised how it turns out. 