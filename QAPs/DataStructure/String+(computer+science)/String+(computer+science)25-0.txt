Why do most top tech companies give more priority to algorithms during the recruitment process?
Algorithms form the basis of popular interview questions for the following reasons: Algorithms are domain neutral, so that you can interview people from different backgrounds. Algorithms are examples of tests that can be administered to an interviewee in one interview slot, and have objective results. They are good for observing how a candiate thinks. Many good algorithms interview questions will have multiple solutions, so they can be a good way to peel the onion with respect to seeing just how a candidate ranks. They are a class of questions that can exercise abstract thinking as well as coding skills. They are a convenient class of questions you can ask both industry hires and fresh college graduates, so you do not have to denormalize based on years of experience a candidate has. I'll add the footnote that I used to be really fond of asking algorithms questions, but despite their advantages I have found out the hard way that they pale in comparison to a referral from a trusted source. All too often they do not test tenacity and attitude, and the way real life works, these attributes can trump any algorithmic capabilities you might have. I have interviewed over a thousand engineers, and while I used to have interviews which were entirely algorithmic, over time I feel my instincts have become more honed towards recognizing candidates that are superlative despite their algorithmic abilities, and likewise sometimes recognizing a candidate is not going to work out despite them being good at algorithms. So treat algorithmic capabilities as a data point, but watch for cues of poor attitude, people skills, tenacity or limited design skills. These are some factors really hard to gauge in an interview from a long term perspective and working on real projects. Good referrals are likely to be far and above the best sources of your hiring. Updated 174w ago â€¢ View Upvotes