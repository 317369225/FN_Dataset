What are some interesting puzzles asked in computer science programming technical interviews?
1.Dining Philosophers: Five philosophers sit around a circular table. In front of each philosopher is a large plate of rice. The philosophers alternate their time between eating and thinking. There is one chopstick between each philosopher, to their immediate right and left. In order to eat, a given philosopher needs to use both chopsticks. How can you ensure all the philosophers can eat reliably without starving to death? 2.Travelling Salesman(P=NP): A salesperson has a route of cities that make up his or her beat. What's the most efficient sales route that visits each city exactly once, and then returns to the home city? 3.Eight Queens(Algorithm Design): Given eight queens on a standard 8 x 8 chessboard, how many unique  positions-- exclusive of rotations and mirror images-- can those eight  queens occupy without attacking each other? 4.Towers of Hanoi(Recursion): You have a stack of discs, from largest to smallest, that slide on to the first peg of a three peg board. Your goal is to move the entire stack of discs from the first peg to the third peg. However, you can only move the topmost disc of any peg, and smaller discs must always be placed on larger discs. How many moves will it take? 