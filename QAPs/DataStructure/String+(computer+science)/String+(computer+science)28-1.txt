What are some interesting puzzles asked in computer science programming technical interviews?
You are given a sequence [math](c_0,\dots,c_{n-1})[/math]. Here, [math]c_i[/math] will be the cost of a ton of grain i days from now. (On day i, you can either buy or sell grain at that price. You can buy/sell arbitrary fractional parts of a ton.) You have $1000. Write an algorithm that will compute the largest amount of money you can have at the end of day n-1 if... ... you can only buy once and sell once. ... you can buy and sell arbitrarily many times. ... you can only buy at most k times and sell at most k times. 