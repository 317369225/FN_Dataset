What is the difference in knowledge of a language (say JavaScript) between a non-computer science background programmer and a computer science engineer/scientist and how does it help?
In addition to Jessica Su's answer:  someone with a computer science degree is going to have a much deeper mental model of what a language like Javascript ought to do (and how it ought to do it), and how that language interacts with the machine.  This can be particularly important when  you're looking into second-order effects like performance.  Someone who does not have a CS background may think the code is running slowly, but they probably don't have a good way to judge if that's a problem with their algorithm, their operating system, their hardware, or some strange combination of the three.  A computer scientist should be able to think beyond what the Javascript is doing.  Is the CPU oversubscribed?  Is there a disk I/O bottleneck?  Are packets getting dropped in the network buffer?  Am I inadvertently setting up and tearing down a socket for each message? 