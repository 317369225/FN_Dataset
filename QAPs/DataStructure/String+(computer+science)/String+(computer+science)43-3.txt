What are some of the most ingenious algorithms in computer science?
I'm a CS professor and I teach Algorithms.  This question has a great list of answers, and I'm going to bookmark it just as a reference for following up on those I haven't heard of. I'm a little surprised that KMP string matching hasn't made this list, so I'll toss it into the mix.  The letters stand for Knuth, Morris and Pratt, so you gotta figure it's ingenious, and it is.  Perhaps it's the "string matching" that makes it sound prosaic, but the strings it matches these days are mostly comprised of the letters GATC -- it's a core algorithm in bioinformatics.  A representative implementation is just a dozen lines long, but it takes about two hours of careful lecture to fully explain and comprehend. And I'll echo another poster's vote for the Simplex Algorithm.  It's such a quiet behind-the-scenes workhorse that it gets overlooked, but it optimizes all sorts of combinatorial economic and industrial processes.  It also has an interesting historical origin, having first been used to optimize the Berlin airlift.   And the geometric concept underlying it is breathtakingly beautiful.  Walking the edges of an N-dimensional polytope by successive rebasing of your vector space -- doesn't get much cooler than that. :) 