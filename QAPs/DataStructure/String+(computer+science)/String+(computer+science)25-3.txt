Why do most top tech companies give more priority to algorithms during the recruitment process?
Though they are called algorithmic question, interview questions generally don't test candidates on some big algorithm. At least i haven't heard of an interview question where a candidate is asked to implement some "aho corasick algorithm" (It is a very interesting and useful algorithm, i didn't scribble some random string). Interview questions mostly are made to test the candidate's problem solving capability. Coming to your question "why is it given priority over other areas of computer science", in short "knowledge is more prone to become obsolete (in a field like computer science which is rapidly changing) than the candidate's thinking ability" Take mechanical discipline as example, the basics that you learn like thermodynamics, that is not going to change, there will only be new concepts on top of it. There it makes sense to give more importance to knowledge that one has in his field. But consider computer science, every thing changes, we all have learnt programming with c/c++/java, which is iterative way of programming which runs in a single thread unless it is explicitly broken down into different threads, while functional programming is inherently capable of running in parallel. With technology improving so fast, devices with multiple core, and access to cloud, I'm not saying it will, but functional programming might become dominant, completely changing the programming paradigm. Trust me, both are programming, but switching from iterative to functional is not as easy as learning a new programming language. So, it makes sense to give more priority to a candidate's logical thinking or problem solving capability, in computer science, than his knowledge. 