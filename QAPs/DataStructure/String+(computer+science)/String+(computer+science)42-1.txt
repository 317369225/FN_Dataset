Why is the time complexity of the Knuth-Morris-Pratt algorithm O(n)?
The way I recommend thinking about it is this. Say you're looking for "evanescence" in a long piece of text. If you do this very naively, you would proceed as follows:   - Check if the first 11 letters are "evanescence". - Check if the 11 letters starting at the second position are "evanescence". - Check if the 11 letters starting at the third position are "evanescence". ...and so on. In each of those steps, you are scanning the eleven locations in the text and comparing against the desired pattern. If it matches, you're done. Otherwise, you keep going. As you can see, with this method you are checking each letter of the text (except the first and last few) eleven times. You are scanning and rescanning the same location as many times as there are letters in the search pattern. What KMP does is eliminate the need to do that: you scan the letters of the text one by one, and when there's a mismatch you use the precomputed lookup table to know where inside the pattern you are, and you can proceed to the next letter of the text.  For example, after scanning "evane", you know you're five letters in - pretty good. Now looking at the next letter: - if you find an "l", namely the text contains "evanel" at that point, you need to start over. You move on to the next letter of the text and start searching for the first E. - if you find a "v", that's interesting. The text has "evanev", which isn't what you need, but you don't have to completely start over: you already have "ev", so you're two letters in. You can move on to the next letter of the text and hope that it's another an "a". - if you find an "s", that's even better: you're now six letters in, and you proceed in the hope that the next letter is "c". You always keep track of "where you are" within the search pattern, but you never ever have to backtrack as you move through the text. You just keep going, and that's why the time complexity is just O of the length of the text. The preparation step costs a bit more, but once it's done you can look for your pattern very efficiently in oceans of text. 