What is the funniest thing you have ever coded?
It's not about something I have coded. But it was fun back then when it was fun. :-D Our college's CSE Department offers students with shell accounts on a Redhat Server. They have no systematic way to ensure that the accounts get to the students. I and a friend of mine asked them to make accounts for the whole CSE Department and the passwords they chose as default ones were the same as the usernames. So I wrote an expect script that changed each and every password to something else before anyone could login. If I am not wrong, they used to have disk quotas for every user. Now with all the accounts, we had like infinite storage. But I don't think we could ever use a single user's quota completely. I managed to have my ssh public key into my roommate's ~/.ssh folder. I would kill firefox/chrome once in a while and look at him. :-D To get better Internet in our hostel, we have done like a thousand tricks with ssh forwarding. We installed startup scripts that would run on our Computer Centre's PCs and forward ports on the Red Hat Server to the proxy server that was serving Internet to the Computer Centre's PCs. This was after they changed the proxy server's config files to allow only Computer Centre's PC have access to Internet. I don't know what they did exactly with the squid configuration, I am just guessing that they added access lines to allow only the Computer Centre's PCs. Before they did this, the Redhat Server had access to the Internet. This little script helps me focus. It's stupid and silly I know. It only prints focus on my screen. I do it once a while. awesome-client - <<EOFlocal naughty = require("naughty"); naughty.notify({ text = "<span foreground=\"White\" font_desc=\"Comic Sans MS 200\"> FOCUS</span>",                  timeout=10,                  width=1600,                  position="top_right",                 margin=100 }) I want this to pop up automatically when certain kind of behaviour is observed on my system. I haven't yet thought about how I would go about doing it but someday. Would looking at the currently available entropy in the system be useful?  cat /proc/sys/kernel/random/entropy_avail Addendum: I am using the focus script in conjunction with the chrome extension Be Limitless. It keeps track of my productivity on web based on the sites that I visit. If my productivity falls below 80 percent when I have activated the function that monitors me, the focus notification pops up! Here is the script that reads my productivity from the database that the extension uses. I will improve it to include more factors. #!/usr/bin/env python3# Limitless Productivityfrom time import strftimeimport sqlite3import json# be_limitless chrome Local Storage database filedb_file = '/home/nj/.config/google-chrome/Default/Local Storage/chrome-extension_jdpnljppdhjpafeaokemhcggofohekbp_0.localstorage'# query to perform db_query=' select value from ItemTable where key="productivity" '# connect to the databasedb = sqlite3.connect(db_file)# get the datacursor = db.execute(db_query)# I expect just one row.prod_json = cursor.fetchone()[0].decode('utf-16')# convert the json string to python object, a dictionary in this caseprod_object = json.loads(prod_json)# Now that we have the python dictionary.# We need the key to get todays productivity.today = strftime('%a %b %d %Y')now_hour = str(int(strftime('%H')))# get productivity for current hourtimespent = prod_object[today][now_hour]['timespent']productive = prod_object[today][now_hour]['productive']# percentage productivity for current hourif (timespent != 0):    prod_percent = (productive/timespent) * 100    print("%.0f" % prod_percent)else:    print("100") Note:: There are no checks for the presence of the keys in the dictionaries. This may cause exceptions at times. They probably will go unnoticed on my desktop. Let's see  what happens when I get them. P.S> Use awesome. It's awesome. Updated 85w ago • View Upvotes