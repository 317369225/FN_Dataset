Should code efficiency be favored over code simplicity in a software project involving several team members?Should code efficiency (e.g. x>>1, (x&1) ==0) be favored over code simplicity (e.g. x/2, (x%2) ==0) in a software project involving several team members?
I've had an interesting code review once. I had something like int age; for (int i = 0; i < n; i++) { age = person[i].age; // do something } The feedback was to declare the "age" variable when it is needed. for (int i = 0; i < n; i++) { int age = person[i].age; // do something } I said I didn't want to be creating a new variable in every loop iteration. I got a reply like "prove it makes a performance difference or change it". It didn't make a difference. The compiler is often smarter than we are in optimising code. In short, always prefer code readability and maintainability. If there is a performance bottleneck, use profiling, measure, and make decisions accordingly. 