How do you judge a JavaScript programmer by only 5 questions?
Most answers seem to focus on JavaScript the language itself. But usually I would (and I think they would as well) ask something else than JavaScript to judge a JavaScript programmer. Here would be my set: What's your understanding of event loop? Some people would mix this up with event bubbling. And if they do, you'll get a range of their JavaScript level. Then I will downgrade this question to executing order about setTimeout(handler, 0) and the understanding of asynchronous. What are the differences between HTTP GET and POST? The answer could be on vary aspects, and if I'm satisfied with their answer, I would continue asking something like multipart form data for request and chunked transfer encoding for response. What's your understanding of MV* frameworks? I am now working for a start-up company, and actually we don't have many chances recruiting experienced JavaScript programmer. But this question can tell whether the interviewer are interested in newer techniques and pushing their boundaries. If they can not even name a few, then they might have no interest learning new stuffs and improving themselves at all. How do you like TypeScript and what do you think we may gain from a static type system? This might not be a well-asked question as TypeScript hasn't become the main stream. (Or will it?) But we have migrates our projects to TypeScript, and we at least would need our teammates being okay with TypeScript. If the interviewer knows what the static type system could offer, then even better. Are you familiar with regular expression? If so, please write one that matches string literals. This is my reserved question. Actually I asked this question every time until I found most of the people who said they were familiar with regular expressions literally can not write regular expressions by their own at all. The short answer could be like this: /(["'])(?:\\[\s\S]|[^\\\r\n])*?\1/. If you are interested in the full answer, you may check out a demo of my regular expression tool. I don't have a list for questions I would ask when I do interview, so most of the time when I ask questions, I'll follow how the interviewer answers and adjust the level or direction. These are also important questions/topics to my opinion: closure apply/call and functional programming related features of ES5/6 performance (understanding of common bottlenecks, and if node, the difference they handle concurrences with some other languages like PHP) basic algorithms the understanding of design pattern node (and it would be a heavy part of the interview as we are looking for full-stack engineer or who want to become a full-stack engineer) and related tools unit tests and so on Updated 26 Jul â€¢ View Upvotes