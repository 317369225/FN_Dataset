If Redis is already a part of stack, can it replace a need for Memcached? Or do we still need Memcached for object caching?
Since I've also answered your question at SO (If redis is already a part of the stack, why is Memcached still used alongside Redis?), I'll add it here for completeness' sake: Habits are hard to break :) Seriously though, there are two main reasons - to my understanding - why Memcached is still used: Legacy - there developers that are comfortable and familiar with Memcached, as well as applications that support it. This also means that it is a mature and well-tested technology. Scaling - standard Memcached is easily horizontally scalable, whereas Redis (until and excluding the soon-to-be-released v3) requires more work to that end (i.e. sharding).However: Re. legacy - given Redis' robustness (data structures, commands, persistence...), it being actively developed and clients in every conceivable language - new applications are usually developed with it. Re scaling - besides the upcoming v3, there are solutions that can make scaling much easier. For example, Redis Cloud offers seamless scaling without data loss or service interruption. Another popular approach to scaling/sharding Redis is twemproxy. 