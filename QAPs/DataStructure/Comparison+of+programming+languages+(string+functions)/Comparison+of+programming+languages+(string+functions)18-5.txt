As a starting Python programmer I see a lot of praise for the Python language (and so far I can only agree). Isn't there anything bad to say about it? What is a real con?
The biggest weakness of Python for me is also its biggest strength: the dynamic typing. That is excellent for one man, quick files: you always know what all your objects are, you have your own naming conventions and construction style, and it all makes sense. But when you get large, multi-person projects this falls apart. You want to update, or just understand, a function that is passed an object on which it calls one or two functions with slightly familiar names. But where was this object created? What is it for? What other methods does it have? Ot looks like an X, but maybe it is a modified X? Of course, this can be solved by extensive documentation. But Python doesn't encourage documentation, and typed systems sllow you to back-track code much easier. And, as others have said, it is very slow compared to compiled languages. 