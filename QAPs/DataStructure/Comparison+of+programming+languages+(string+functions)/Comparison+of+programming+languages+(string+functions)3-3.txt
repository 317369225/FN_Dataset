PHP (programming language): For building a website, which programming language is easier to learn: Python or Java?
Python. TLDR: Making a website in Python python -m SimpleHTTPServer First, lets agree on the definition of  Website and programming language: (This is important because it seems like a lot of answers are focusing on building Web applications with web application frameworks.) A website is a set of documents hosted on at least one web server accessible via a network (generally over the Hypertext Transfer Protocol or HTTP).  So basically, you need: 1.) A set of more web browser renderable documents -- typically HTML 2.) an HTTP Server Creating an HTTP server is important because browsers can encounter difficulties serving files if they are just being "opened" vs served on a web server. (stackoverflow.com) Although both languages are great for what they are supposed to be used for, Python is characterized as a glue language (useful for prototyping): (python.org) For example, you don't even need to create a Python file to create a web server and begin building a website, you can actually create it from the command line. Unix/Linux/OS X (I rarely use Windows) python -m SimpleHTTPServer You will then see: Serving HTTP on 0.0.0.0 port 8000 ... or something similar. Visit http:X.X.X.X:Y in your browser where X is the IP address and Y is the port. In this example, http://0.0.0.0:8000 You now have a web server running in that one line of code.  Thats easier than anything I've seen.  No downloading.  No installing. While some may laud this as "magic", its actually one of the reasons why python is so great and a native part of the language. -- the ability to run code as a "module" in this case the SimpleHTTPServer module. This is the primary reason I use Python -- e.g. Write Less, Do More. In my case, as a full stack developer, this one line command has saved me more time than I can count. When I am first scaffolding out my apps, it's as simple as creating a new directory, tossing in a new static HTML template (such as Bootstrap), then typing that command. I will then begin changing the website, and chopping it up into templates for use in a dynamic web application.  When it gets to that point, I typically continue with Python because: 1.) Portability - I'm usually pretty confident that no matter what system I'm on, there's a natively-installed Python compiler. 2.) Speed and Readability of Code. 3.) Extensions - I like the easy availability and installation of the Python packages (see pip) and rapid prototyping frameworks (web2py, Flask, Tornado, Django). In terms of learning to create a web application, you will probably want a framework, which teaches you about MVC, routing, role based access control, and multiple types of responses. My favorite web application framework is written in Python.  Its called web2py (bias/disclaimer: I use web2py all the time) 1. It was written by a computer science professor to teach web application programming. 2. The book is available free online. 3. Its open source -- so you can literally dive into the source code of web2py.py and  follow how it works all the way through. 4. I have never been able to get any web framework running faster (literally just click download -- please try it) . Lastly, FWIW, I have heard the average productivity of a Python programmer > a Java programmer.  Do a search for Python vs Java productivity for more on that question. Updated 25 Nov • View Upvotes