Why is type checking important in programming languages and how should one choose between dynamically and statically typed languages?
Type checking always helps in production environment. In general, if any type of coding mistake can be caught at compile time, life is better when it is. If it takes slightly longer to compile or requires to write slightly longer code, it's a price that is well worth it. The cons of using a strongly typed language are: Longer code is less readable. Stricter code takes more time to write. Often times it is easier to write a non-generic solution, which will then have to be refactored. Modern strongly typed languages -- think C# -- have successfully resolved the issues outlined above. 