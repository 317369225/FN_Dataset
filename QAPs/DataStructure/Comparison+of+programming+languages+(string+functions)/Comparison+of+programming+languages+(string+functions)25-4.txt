Why are Java 8 lambda expressions regarded as a big change in the Java programming language?
I believe lambda expressions is a big change. The lambda feature is bringing the latest bytecode opcode invokedynamic which was added in Java 7 to the mainstream - the Java language. Before Java 8, you couldn't write Java code that generates invokedynamic and now with Java 8, it what makes lambdas tick. It's a big step from "Enterprise Java" concepts of traditional OO into a more modern, dynamic, 'hacker-friendly' language which is more than needed against the claims about Java's death. Another way to look at the addition of lambdas is to fight Scala, Java's biggest rival, rising popularity. This new addition to Java is gonna win some battles in 'Java vs Scala' debates a lot of engineering teams are having. My co-founder has written a great post on Compiling Lambda expressions: Scala vs. Java 8 There will be many more benchmarks coming before and after the GA of Java 8 (Scheduled for Mar 2014). I personally believe it is the biggest evolution step since Java 5. I also believe it's gonna win back some lost developers who turned to more dynamic JVM languages. 