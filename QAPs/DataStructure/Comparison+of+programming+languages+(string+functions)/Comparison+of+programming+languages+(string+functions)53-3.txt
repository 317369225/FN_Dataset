What bad programming/architecture habits can a self-taught PHP coder develop?
I'm quite certain that in any language, bad habits can develop. Almost any language will allow you to write crap code. The reason PHP gets a bad reputation is probably not so much the language as it is the tendency for PHP developers to be less educated in computer science and programming than the practitioners of other languages like C, C++, or Python, and to hack solutions. It doesn't help that there is a crap ton of bad advice out there on the web from less than qualified people, either. The best way to overcome bad habits is to not develop them from the start. Read a reputable book on PHP-based design from a recognized publisher. Learn design patterns (there are web sites that teach them in the context of PHP) -- this will teach you canonical ways to structure code to solve problems faced by nearly ever developer, eventually. If you know another language, try and replicate their principles in PHP. Download and read the code from well-respected PHP sources (e.g., frameworks), and try to adopt their coding conventions and style. It's sorta like music. The best guitar players aren't great because they are great on the guitar, it is because they are great musicians who happen to make guitar their instrument. Same with programming, good programmers understand design patterns, object-oriented design, etc.. In the end, it doesn't matter so much the language as much as knowing the concepts of good software design. Updated 258w ago â€¢ View Upvotes