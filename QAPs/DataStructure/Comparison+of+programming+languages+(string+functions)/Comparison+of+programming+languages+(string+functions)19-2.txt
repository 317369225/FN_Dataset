What bad programming/architecture habits can a self-taught PHP coder develop?..and how to get rid of them?
Being a "PHP coder" is the worst: don't limit yourself to only a single language, as your ability to design programs (as opposed to string pieces of code together) will suffer even in that one language. In other words, learn languages besides PHP: by doing so, you'll have better grasp of PHP itself (e.g., the object oriented features) and ability to solve problems which PHP is ill suited for. Learn Computer Science in general, in order to get an understanding for programming (algorithms, managing complexity, designing systems) as a whole rather than coding (syntax, libraries). [Edit: to be clear, this isn't meant to be picking on PHP in particular. This is an issue specific to only knowing anyone single language without learning the language-neutral design patterns that Syd Logan mentioned in his post. Learning multiple languages, with different idioms helps get a feel for these patterns] 