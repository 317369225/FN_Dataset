Is PHP dead?What is the job outlook and future of PHP in the next 5 years?
Originally Answered: Should we let PHP die?Php was a horrible language a few years ago, not a good language. It's only getting started and we should let it breathe and live, not die. It still is the fastest way to churn out an enterprise-worthy dynamic web application and as long as it remains unchallenged in that area, PHP has a bright future. What I see it desperately needing, however, is a fixed PHP namespace with well named functions. No more stripos(). Instead, \PHP\String::pos(), and all other string functions in that one core class as well. Same for all other core components. Being so openly developed by the community is what PHP's biggest downside is, as it caused a huge rift in naming conventions and polluted the language with silly aliases and deprecated functionality that should never have been there in the first place. I see a good opportunity to leave all this legacy trash behind in PHP6. If PHP6 abandoned backwards compatibility with PHP<6 the way Python 3+ did with Python 2.x, that would be one of the language's saving graces. 