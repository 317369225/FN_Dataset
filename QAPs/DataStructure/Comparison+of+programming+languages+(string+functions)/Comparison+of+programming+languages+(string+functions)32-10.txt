What is the difference between a compiler and an interpreter?
An interpreter reads some source code and does what it says to do. A compiler reads some source code and produces some other code that does what it says to do. There are hybrid systems (in fact, most are these days). A compiler reads some source code and produces some other code that an interpreter reads and does what it says to do. ETA (because I'm still suspended from replying): No; compilers are faster overall. It actually would be, if the code were just a long list of stuff. However, most code has loops and recursion. So an interpreter would have to go back and re-read parts of the source code, and this takes time (generally a lot of time) whereas a compiler need only do it once (older compilers had multiple passes but mostly because memory was limited, and that's gone pretty much by the wayside). If what you want to parse and execute is something simple like, say, algebraic calculation with parentheses, then an interpreter is in fact faster. 