What is the difference between a compiler and an interpreter?
Probably the best analogy with real life is the following: Compiler: A meticulous translator. He speaks your language (programming) and the language of the computer (binary). He carefully listens to what you say, asking for clarification if the idea isn't well thought out. He then turns to computer and carefully tells him everything you mean, in its own language. The computer then takes notes from the compiler, and then processes what he wrote down. Interpreter: just like an interpreter, he listens to one or two phrases, you pause, then he either uses a dictionary or his memory to tell the computer what you meant (hey, this "write" means 10001010 in computerish). Now you see the differences. It might very well be the case that if you talk to someone who doesn't speak your language via an interpreter, you can do it pretty much on the spot, but it will take a longer time with this back and forth to finish the conversation. Whereas with a translator that writes everything down, it might take longer to get each reply from the other guy, but the discussion will finish way faster. 