What is the difference between a compiler and an interpreter?
Firstly let us know the difference between the compiled and interpreted language. Interpreted Language Example: JavaScript Consider we are executing a file with name “add.js”. To run this file. This file is given to a software called Interpreter. Interpreter does the following. Read the first line of add.js. Convert the first line of add.js to binary. Now execute this binary. Read the second line of add.js. Convert the second line of add.js to binary. Now execute this binary. Like wise do the same thing till the last line of the program.So read a line of the program. Convert the line to binary. Then without storing the binary somewhere, execute the binary immediately. The programming language which requires an interpreter to execute. That programming language is called an interpreted language. Compiled Language Example: C, C++. Consider we are executing a file with name “add.c”. To run this file. This file is given to a software called Compiler. Compiler does the following. Create a file with name “add.o”. Read the first line of “add.c” and convert this line to binary. Store this binary in “add.o”. Read the second line of “add.c” and convert this line to binary. Store this binary in “add.o”. Like wise do the same thing till the last line of the program. This “add.o” is called the object file. It contains the binary code of each line in “add.c”. Now first line of “add.o” is executed. Then second line of “add.o” is executed. Like wise the last line of “add.o” will be executed.So read a line of the program. Convert the line to binary. Store the binary somewhere. Continue this process till the last line of the program.Then execute each binary line by line. The programming language which requires a compiler to execute. That programming language is called a compiled language. Java is both compiled and interpreted language Consider we are executing a file with name “add.java”. To run this file. This file is given to a software called javac. javac is a compiler. javac does the following. Create a file called “add.class”. Read the first line of “add.java”. Convert this line to byte code. Store this byte code in “add.class”. Read the second line of “add.java”. Convert this line to byte code. Store this byte code in “add.class”. Like wise do the same thing till the last line of the program.So read a line of the program. Convert the line to byte code. Store the byte code somewhere. Continue this process till the last line of the program. This is nothing but compilation. “add.class” file contains the byte code of each line in “add.java”. The file “add.class” is given to a software called JVM. JVM is an interpreter. JVM reads the first line of “add.class”. Convert this line to binary. Then execute this line. JVM reads the second line of “add.class”. Convert this line to binary. Then execute this line. Like wise do the same thing till the last line of the program.Byte code is not the binary code. It is not a java code. It is an intermediate code. Java requires a compiler(javac) to convert java code to byte code. Java requires an interpreter(JVM) to execute the byte code. Since java requires both compiler(javac) and  interpreter(JVM) for its execution, java is called both compiled and interpreted language This answer is taken from 1.Is Java compiled or interpreted language? 