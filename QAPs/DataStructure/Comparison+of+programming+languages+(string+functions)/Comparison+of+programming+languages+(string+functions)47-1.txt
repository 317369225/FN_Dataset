Does Swift overcome the limitations of Objective-C?Syntax and readability aside. Instead: how it compiles and performs.
The first huge thing that Swift provides is type inference. In a language that uses type inference, the programmer doesn’t need to annotate variables with type information. The compiler infers it from what value is being set to the variable. For example, the compiler can automatically set this variable to a String: Swift is static typed instead of dynamic. Another huge feature of Swift is generics. If you’re familiar with C++, then you can think of these as being like templates. In Objective-C, arrays and dictionaries can contain any type you jolly well wish. But in Swift, arrays and dictionaries are typed. One interesting thing about collections in Swift is their mutability. Better String Handling Has a switch statement Swift Language Highlights: An Objective-C Developer's Perspective - Ray Wenderlich 