Why are Java 8 lambda expressions regarded as a big change in the Java programming language?
It's a step from Java to move towards functional programming, that's why Lambda expression are termed as the biggest change in Java after the generics. With Lambda expression & streams (which uses lambda expressions) there is a lots of reduction in the boiler plate code. Let's consider one example supoose you have list of cities and you want to remove duplicates from that list. Using Java 8 streams it can be done this way - cityList = cityList.stream().distinct().collect(Collectors.toList()); Another biggest use is implmenting functional interfaces (like runnable, comparator etc.) using Lambda expression - As exp - if you have a list of persons which you want to sort on the basis of first name. Collections.sort(personList, (Person a, Person b) ->a.getFirstName().compareTo(b.getFirstName())); Read more about Lambda expressions here - http://netjs.blogspot.com/2015/0... 