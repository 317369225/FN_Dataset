What is the difference between a compiler and an interpreter?
A compiler takes the source code it's given and outputs executable machine code. This is usually a more efficient method. Â An interpreter takes the source code, and when you tell it to run, it uses JIT (Just in Time Compilation) to compile things as needed. This USUALLY incurs a slight performance penalty. Programming languages such as C, C++, or other high level languages are usually compiled. Languages like Perl, Python, Ruby, are usually interpreted. Overall, compiled languages take some time at first to build the executable bytecode, but the compiled programs usually run faster afterwards. Interpreted languages are more portable (as bytecode usually can only be used on ONE Operating System) but incur performance penalties. 