Why are Java 8 lambda expressions regarded as a big change in the Java programming language?
It's not really a big change to the language. It's a bit of syntactic sugar. It's considered a big change only by those who gorge on syntactic sugar (and develop cancer of the semicolon [h/t Alan Perlis].) This bit of syntactic sugar is very popular feature in Scala, since it shaves a half-dozen mostly empty, highly formulaic lines off of a piece of code. It's a bit easier to read: new Thread(() -> System.out.println("New thread")).start(); than new Thread(new Runnable() { public void run() { System.out.println("New thread"); } }).start(); It's an idiom that Java programmers use a lot (especially in callbacks), and this makes for less cluttered code. It also makes it more convenient for Java programmers to provide functions to Streams, a nice way to compose operations in a functional-ish style. But as I said, all of this is just nice syntax. It's not really a significant change to the language, the way lazy variables or real message passing would be. Updated 8 Jan â€¢ View Upvotes