Why can't binary be reversed to source code exactly as it was before compilation?
Short answer: There is not a bijection between assembly and c code. For instance: for(i=0; i<10;i++) { a++;}; Becomes the same machine code as: i = 0; while(i<10){ a++; i++;}; Long answer: Besides that, programs are often compiled with optimisations and without symbols. The first greatly changes the structure of the code, ranging from reordering expressions to take advantage of the processor pipeline to inlining whole functions and generating code that takes advantage of faster instructions  i = 5*i becomes  i = i<<2 + i . The second one removes the function names from the binary. So, in the end, you can decompile a binary to C code that's functionally equivalent to the original source code(IDA Pro and Hopper do this), but you will not be able to recover the original code. 