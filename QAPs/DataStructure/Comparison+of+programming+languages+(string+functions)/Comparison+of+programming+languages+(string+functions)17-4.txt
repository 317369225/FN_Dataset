Why is type checking important in programming languages and how should one choose between dynamically and statically typed languages?I asked this question because , I don't know how type checking helps in production environment , because what dynamically typed language like python can do , can also be done by statically typed language like java. I have heard people talking about various trade offs but I don't know when to use which one. What will be the scenario in which one will be favored over another ?.
Type checking doesn't necessarily help you during run-time, although implementing a generic type is costlier. Type checking does help the productivity of programmers. This is because even in type-loose languages, "1" is different from 1 - and it's how it should be, because otherwise integers would always be strings and strings are really really expensive. Also, type-checking helps because you know exactly what sort of data you have there. You know how large the data is, and you can easily group them, copy, compare, or anything else. I would extend the type-checking to also include compile-time checks, which also help a lot. Perhaps it's harder to understand until you actually write some code in both types of languages (as long as they are at the same level) to compare. 