Why is C++ so complicated?
You trade simplicity for control. Although C++ is harder to use, it gives you absolute control over the machine resources, and if you are a good C++ coder that usually means noticeably higher speed: There are tests were C++ is 7 times faster than Java, and 20 times faster than PHP, unless you heavily tweak Java and PHP compilers and interpreters, or run exceptional tests where Java and PHP perform better than usual. Novel, easy to use programming languages are good for simple use cases, like the small practices in a computer science course. However, real world applications (artificial intelligence, real time systems, compute vision, videogames, profesional software development, operative system development, driver development, etc.) have extreme requirements simple programming languages can't meet. You start coming across such cases when you try to develop harder software. Ever tried to make a remote-screen-control application using .NET? It's too slow to work, unless you activate a special "unprotected" mode that looks a lot like C++. Ever tried to create heavy search algorithms that need millions of iterations to work? I was in a class where everyone used their favorite language and I used C++; their algorithms took minutes and mine took less than a second (even though all of them were accurately implemented). You think Halo, Angry Birds and other AAA games were made in simple languages like C# and Swift? Think again, there's a reason why 90% of AAA games are written in C++ (and bits of C for optimization). It's laughable how some Python scripts for doing biology-related simulations take days to run (in a distributed processing environment) when the same script would take hours in C (real life story). And don't get me started with machine learning algorithms... None of this would be possible if the language took care of all the memory-related work for you, if it had the need of a garbage cleaner, if it needed you to have a framework or runtime machine to interpret it, or if the program wasn't compiled to binary before running. C++ is hard because you need to do stuff that other languages do under the hood. C++ is hard because it's similar to the way machines speak, not to the way humans speak. C++ is hard because the result should be easy to compile, instead of easy to debug/mantain. It's a trade, and it's the programming language that was used to build the operative system you are using right now, the internet browser you are using right now, the OS in your phone, the Desktop Office Software you probably use, many of the videogames you have bought, and of course the compilers of the other programming languages. It works when you understand it and the world is full of capable C++ programmers for hire. And it will never become easier to use, since that would be against the current purpose of the language. 