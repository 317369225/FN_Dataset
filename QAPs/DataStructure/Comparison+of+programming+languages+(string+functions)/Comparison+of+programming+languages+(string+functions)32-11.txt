What is the difference between a compiler and an interpreter?
Originally Answered: What is the difference between a compiler and the interpreter?A compiler takes one computer language and translates it into another. e.x. Fortran, Pascal, C/C++, Ada, and many others are compiled languages. The compiler takes the program instructions and turn them into machine code suitable for running on a particular family of processors. Interpreters take code and execute the instructions as they read them. e.x. TCL, Lisp, Scheme, Bash, AWK, Brainf*ck, are mostly pure interpreted languages. There is a third class that has become very common that falls in-between the pure distinctions. They are compiled languages but the result of the compilation is a second interpreted language (Sometimes refereed to as byte-compiling). e.x. Java, Python, Ruby, Scala, C# (All the .Net languages) and others. You can also make compilers for interpreted languages and interpreters for compiled languages. The list I have given is just how they tend to be used in the real world. 