As a starting Python programmer I see a lot of praise for the Python language (and so far I can only agree). Isn't there anything bad to say about it? What is a real con?
Comparing Python to Bash is like comparing Perl to Bash.  Both languages are a hell of a lot better for large projects than Bash is.   It's like saying that nails and screws are sharper than river-smoothed rocks. The designers and implementers of Python went through language incompatibilities between Python 2.6, Python 2.7, and Python 3.x.  (Perl did the same kind of thing between Perl 4, Perl 5, Perl 5.8, etc. ) Python tried to be more cross-platform than previous scripting languages.  As far as I can tell, it's succeeded about as well as Perl has - which is to say cross-platform (*nix vs. Windows) development is clumsy in both cases. One of the faults I have with both languages is that too many modules have version dependencies - with some modules entirely unavailable (either because the developers didn't bother for older versions, or because the developers have lost interest in the modules.)  This leads to fragility when moving applications between systems or upgrading software on some systems.  (My experience with compiled code is that it's less fragile this way.)  As a result of this (perceived) fragility, I avoid using modules where possible - if a module feature is trivial to implement, I will implement it in the app rather than bring in a module for it. I like that Python tried to solve one of the problems of software maintenance by enforcing a certain (minimal) programming style - but I find the style dreadful. I'm still new to Python - so there are a few things about the language I dislike that may be due to not having fully embraced certain concepts.  Currently, one thing that bothers me is the (apparent) ease with which a typographical error can create a new variable. EDIT: To remove an unsupported assertion about the influence of Perl on Python. Updated 16w ago • View Upvotes