Why do many software engineers not like Java?
I keep wanting to like Java, and failing.  Java has a nice degree of platform independence, and a graphics/windowing API which is reasonably consistent. And Java applets had great promise. (But they appear to be dead now.)   But Java put off or still doesn't have features which other languages had for years. It took until version five to get string formatting! FORTRAN 66 had better string formatting than the earlier versions of Java. Java still doesn't have complex numbers. (C++ stream I/O is also horrible, but you can still use the old printf family of functions in C++. )   And yes, if I'm going to writing something in a strongly typed language, I'd like the option of compiling down to the metal without bounds checking sometimes. Speed is useful.   I personally dislike Eclipse. It is way too complicated. But maybe if I had to use it long enough I'd grow to like it.   But I personally like a language which allows me to throw something together quickly, and write big code. I like evolving quick and dirty code into something more robust as it grows. Java forces too much error checking too early. It kills the creativity.  I find the tuple returns which include an error object in Go to be far easier to deal with than catching exceptions.   You'll note that my answer is full of first person opinion. Consider it a sample data point of why so many people dislike Java. 