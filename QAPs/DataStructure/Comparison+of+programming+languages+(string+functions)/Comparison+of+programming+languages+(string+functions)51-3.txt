Why is type checking important in programming languages and how should one choose between dynamically and statically typed languages?
Statically type language before generating the machine code checks for the type checking and ensures that the program abide by the type discipline allowed in that language. Advantages of type safety: 1. You can often pretty much deduce what a function does purely from its type signature 2. When you do significant refactor, the compiler automatically tells you everything you have to do to keep everything working. Dynamic language vs Static language programming are really two different animals. They both require a fundamentally different approach from each other. You can mostly port a method of approach between static and dynamic, but you'll lose out on the advantages of the other. You have to get over the hump of knowing how to a language works to really it work for you. For more details please click on the link given below it is really helpful: Is type safety worth the trade-offs? 