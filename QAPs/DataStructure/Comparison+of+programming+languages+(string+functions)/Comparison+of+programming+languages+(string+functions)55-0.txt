What are the advantages and disadvantages of having case-sensitive identifiers in a programming language?
So far as I can imagine, all the advantages and disadvantages of using case-insensitive identifiers are pretty trivial. The Compiler's Perspective Lexical analysis wouldn't really be all that much easier, since it still has to read in both cases of letters. It would just take an extra (trivial) step to convert it to all lower or uppercase every time a token is scanned. Of course, you'd have to preserve case when you see a string literal, but that doesn't exactly require any added logic because strings will be processed in a different lexical context anyway. Nothing else about the compilation process really changes after that, really. After scanning, exactly the same logic would apply for redefined or shadowed identifiers, since by that point all the identifiers would be in the same case. The string comparison functions certainly wouldn't be any faster or slower just because they could ignore a case. And it's not like you could use a faster hash function for your single-case symbol table (if implemented as a hash table). And when the intermediate or native code is emitted, your linker and your debugging tools that process the symbol names won't care whether the names have the 0x20 bit on or not; there are no optimizations to be made either way. The Programmer's Perspective For clarity, it'd be a good idea to continue to use case to help make long variable names easy to read (if that's your style). I think it's probably extremely unlikely (unless you have terrible programming practice) that you'll use two variable names which are identical when normalized on case (e.g. you use both an expertsExchange and an expertSexChange variable). One thing that could get annoying is compiler errors that give long single-case variable names ( unknown identifier: EXPERTSEXCHANGE), but that's a pretty minor annoyance. Yeah, I've got nothing that isn't trivial. Oh, maybe when you compress your code (e.g. with gzip), lots of same-cased identifiers could save you a couple hundred bytes? Yeah, no, I've got nothing. 