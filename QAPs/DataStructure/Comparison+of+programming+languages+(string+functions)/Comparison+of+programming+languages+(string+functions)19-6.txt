What bad programming/architecture habits can a self-taught PHP coder develop?..and how to get rid of them?
Some bad habits that any developer in any language can develop, and why: Starting out by writing code instead of drawing things out on paper. Why? Your mind works differently when you actually write things. Slow it down and map things out. Draw pictures and justify it. Only then start with unit functional modules. Even object design comes later. Thinking in or relying on only one language. Why? Each type of language was made for a different reason and each has its pros and cons. Learn about the different paradigms and types. It's not only educational, but it may give you the disruptive edge you need. Don't be dogmatic about libraries du jour either. Not talking to others and getting out. Why? Learnings and mistakes others have made are amazing education. Not only that, exposure to other contexts reveals and illustrates larger principles in action. Otherwise all you'll know is anecdotes and no concepts, and you will have very little big picture inspiration outside an immediate requirement. More specifically, you'll learn the importance of proper design and documentation and how they are actually related, and how, when done well, they can yield incredibly elegant and powerful tools. Not learning subjects other than coding. Why? Algorithms and mathematics had their foundations in the real world, and were aimed at building models and tools. Eg. Wonder how prolog came into being and why it's still pretty useful? It'll truly make you smile. 