Should code efficiency be favored over code simplicity in a software project involving several team members?Should code efficiency (e.g. x>>1, (x&1) ==0) be favored over code simplicity (e.g. x/2, (x%2) ==0) in a software project involving several team members?
In this case, no efficiency is gained whatsoever in the former code. C compilers have optimised the obvious cases to equivalence, where possible, for at least 30 years. In general: Always favour clarity & maintainability over cleverness. For an demonstration of why, we need look no farther than the question itself, which mentions x >> 1 ⟷ x/2. As User points out in comments, these are not necessarily equivalent, and the compiler knows it. So this kind of unnecessary "optimisation" can introduce new bugs. And consider the maintainer of this code. Do you want them to be questioning every expression, asking themselves, "now, are they actually pushing bits around, or are they meaning to divide?" Write as if you really care what the maintainer thinks of you. Earn their trust and good opinion. As the saying goes, it might even be you... Updated 29 Mar • View Upvotes