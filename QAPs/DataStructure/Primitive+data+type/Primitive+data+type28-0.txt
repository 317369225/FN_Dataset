Why were bitwise rotations never added to C?
Since the PDP-11 does support bit rotations of a word, I suspect that it is because They were not called for in many real programs. If the people writing Unix and utilities had noticed that this operation was frequently needed, I am sure they would have exploited it. (Crypto is a likely exception, but even today(!!!), people expect to write crypto inner loops in assembler per platform.) Rotations are often through the carry flag, and the condition codes and flags are not exposed in the C programming model. This prevents full exploitation of the PDP-11 instructions. Once C escaped the PDP-11, though, two other problems soon arise: The operation is word size dependent; different word/register widths would be a major portability problem (noting that << and >> are largely independent of the word size) Some architectures may not offer rotation as a primitive operation (and C tends to steer clear of operations which aren't reasonably primitive). Updated 91w ago â€¢ View Upvotes