What exactly is "print it modulo 10^9 + 7" in competitive programming websites?
WHAT IS MODULO OPERATION : The remainder of the division is also known as modulo operation.You can use modulo operation by using ' % ' operator in most programming languages (including C/C++/Java). If a modulo b is c, it means that the remainder when a is divided by b is c.  So, 7 % 2 = 1 , 2 % 5 = 2 etc. WHY DO WE NEED MODULO : The largest integer data type in c/c++ is unsigned long long int which is of 64 bit and can handle integer from 0 to ( 2^64 - 1) or integers as long as 10^19 can be stored in long long int. But in some problem where growth of the output is very high, this high range of unsigned long long may be insufficient. For example when we need to calculate the factorial of a number, the output can go very high for a small input Eg, for n = 22 output is 22! which is about 10^21 and it is too large for unsigned long long int. So, instead of asking the actual exact value the problem setter asks the answer modulo some M,  so that the answer can be stored in a variable. ( 10^9 + 7 ) can fit into int data type and is a prime number so we take it as M. HOW CAN YOU USE MODULO : Some properties of modulo .. 1. ( a + b ) % c = ( ( a % c ) + ( b % c ) ) % c 2. ( a * b ) % c = ( ( a % c ) * ( b % c ) ) % c 3. ( a – b ) % c = ( ( a % c ) – ( b % c ) ) % c 4. ( a / b ) % c NOT EQUAL TO ( ( a % c ) / ( b % c ) ) % c 5. (a / b ) % c = ( a * b^ -1 ) % c and the answer ( a % b) always be less than b. Now I will show you how to use modulo in a problem.. Take a simple example of finding factorial of a number in cpp. unsigned long long factorial(int n){    unsigned long long fact = 1;    for (int counter = 1; counter <= n; counter++)    {         fact = fact * counter;     //value of fact can exceed the limit    }  return fact;} Use modulo in the above problem. unsigned long long factorial(int n){    unsigned long long fact = 1;    const unsigned int M = 1000000007;    for (int counter = 1; counter <= n; counter++)    {         fact=(fact*counter)%M;  //now fact never can exceed 10^9+7      }                                               return fact;} But never use modulo in the following way.Use modulo at each intermediate step or you may get overflow. unsigned long long factorial(int n){    unsigned long long fact = 1;    const unsigned int M = 1000000007;    for (int counter = 1; counter <= n; counter++)    {         fact = fact * counter;  //WRONG APPROACH    }                                               return fact % M;} 