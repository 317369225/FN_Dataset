How do you judge a Java programmer with only 5 questions?
Situational vs. Q&A are always more telling.  A lot of people can memorize interview questions, while obvious to some, it can skew opinions.  A few questions that are centered around strategic approach to code and implementation will show a candidates skill set more cleanly. Some examples: How do you test your code? What is the difference between an integration and unit test? Use object-oriented design to model a simple zoo consisting of a lion, giraffe, and elephant (believe it or not 90%+ failure rate; when they do it shows areas you can follow and discuss). What happens when you mark an variable final?  (Answer: yes, it becomes immutable but ask why.  If you are not familiar with the memory organization of the JVM; final variables are managed in PermGen vs. the heap.  Another way to ask this is: why are method local variables or parameters accessed in anonymous inner classes required to be marked final?  (note: Java 8 no longer has a PermGen; hello Metaspace! Where Has the Java PermGen Gone? ) How does a HashMap work?  Is it O(1)?  How are the keys calculated?  What are some other collections you use NOT including List! I hope this helps! 