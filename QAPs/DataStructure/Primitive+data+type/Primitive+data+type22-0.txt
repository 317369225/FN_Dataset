What are some common beginner mistakes in Java programming?
Coming from python, the following points took me some time to get used to. Much of it is possibly generalizable to object oriented programming languages Coding as you go: Java was designed to build scalable software, part of which involves a certain discipline around thinking about the program architecture before actually coding it up. Diving into the code straight away results in clunkiness that makes it difficult to swim later on. Code duplication: This takes a few forms. Not using base classes to abstract away common methods is one. More importantly, not making use of interface inheritance is more common. e.g. different classes in the code having a similar method for writing the object to file. Partial understanding of interfaces: Related to the previous point, functions (methods) that abstract common logic from different classes can be implemented through interfaces and static methods. Beginner programmers often just make one gigantic class with all related methods thrown in. e.g. the Collections class [1] in java has a number of utility functions that operate on objects implementing the collection interface. Also, the way to multiple inheritance in java is through interfaces. [2] Lazy use of access modifiers: Defaulting to public methods and attributes and not having a full understanding of packages and private, protected, public and default modifiers. [3] Not adhering to encapsulation: Making properties public and directly modifying them externally through other classes instead of using getters/setters. [4] Use of (non-static) inner class where static nested class would suffice [5] Calling non-static methods from a static context: This involves either not creating an instance of the object or not declaring the method as static when it may not require access to class instances. [1] Collections (Java 2 Platform SE 5.0) [2] How do Java Interfaces simulate multiple inheritance? [3] Controlling Access to Members of a Class [4] Why use getters and setters? [5] Static nested class in Java, why? 