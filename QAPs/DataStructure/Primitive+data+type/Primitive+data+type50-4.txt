As a programmer, how big is the advantage of knowing a low-level language like C even when you don't use it?
Basically, the best reason would be so you'll learn how to use the underlying techniques of higher-level languages. My personal knowledge goes even much deeper into Assembly and machinecode. Assembly is fun because you still use mnemonics to write code. Machinecode is more complex because you need to read and write binary data and understand how each instruction is made. That's as low-level as you can go in programming! But Assembly and Machine code knowledge is too specialized these days. These methods are very processor-specific and thus very platform-specific. You better use some language that isn't platform-specific and as it happens, C has a compiler available for almost every processor and operating system! So code you write for your Mac would also compile for your PC, your mobile phone or maybe your decades-old Amiga. (Look it up!) Of course, you'd still need additional libraries for your project and those libraries can be platform-specific, but the C code itself is not. (For example, writing to the console is not supported if you write a C application for the Arduino boards. The Arduino has no console!) Actually, as a programmer I started with Arduino boards just to keep my low-level language knowledge up-to-date. These devices are very limited in basic functionality but can be expanded into quite large projects. It teaches you how the hardware interact with the processor and how multiple processors and other hardware communicate. It also forces you to work with limited resources so you'll learn to optimize code. And optimize it using a low-level language, since C is basically the main language for the Arduino. (But C++ is supported too!) - With languages like C# and Java, you'll have to learn what to use to get the best performance but it's not likely that you can explain why, because the underlying technique is unknown. In low-level languages you have to generate those underlying techniques yourself, thus you learn how it works and why. 