What are some real world examples of primitive data types in Java?
I use primitive for numbers most of the time, but that's probably just a holdover from C. I know about primitive numbers and how they behave, so on the rare occasion I have to do a little extra work to make them do something that may be built into a higher level extension its not a big deal. And the primitives are lower overhead at both compile and run time. String objects are just much easier to deal with in java than char[]. But I still use char[] when dealing with string buffers and stuff like that. For example, on an embedded device communicating over Bluetooth, the Bluetooth is the bottleneck. You may only be able to communicate at 14.4 bps, which essentially means messages come in 1 character/byte at a time. So you append incoming bytes to a char[] and look for a terminating character (usually a newline). In that case I'll actually use the bytes to compress the data being transferred. I'll use bitmasks and tiny ints to shrink the data down to what i need. For example: "k1Bob's Device\n" (ASCII) k = (bin) 01101011 = (split) 0,1,1,0,1,0,1,1 = (interpret) false, true, true, false, true, false, true, true (ASCII) 1 = (bin) 00110001 = (split) 0011,0001 = (pad) 00000011,00000001 = (int) 3,1 = (interpret) type 3, status 1 And "Bob's Device" I just read as ASCII. In that way I can send the maximum amount of data in the minimum amount of bytes, to keep the transfer fast, since transfer is the bottleneck and byte-level operations are fast on both ends. But I still let the end be an open ASCII field so I can pass friendly names. You have to use primitives to do all this, including the byte array that actually gets transferred between the two devices. I picked up most of this early in my career working on online games, where latency was the devil and packing as much data into the smallest possible package was paramount. 