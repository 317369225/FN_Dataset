Why do we need to declare default constructors in Java classes?
Due to maintaining the order of constructor calling in Inheritance.but for getting  this explanation you should have depth knowledge of Inheritance.   1.  In a class hierarchy constructors are called in order of        derivation means from super class to subclass. So when you are creating an object of subclass then then its constructor must(suppose you are not going to use "this" keyword for calling current class other constructor) call the constructor of  super class  anyhow either by explicitly using  super() or implicitly calling the default constructor of super class before executing any statement of it own body,so in this case there must be a default constructor in the super class otherwise  compilation will cause error.I am showing this through my program compilation trial.//.................................................................. class Box {    double width;    double height;    double depth;    Box(double w,double h,double d)     {       System.out.println("In super class.");       width=w;       height=h;       depth=d;     }   /* Box164()    {       width=height=depth=-1;    }*/  /*i have intentionally disabled the default constructor by above multiline comment.which is producing error,as soon as you will remove the above multiline line comment it will work fine.*/    double volume()    {       return width*height*depth;    } } //.................................................................. class BoxWeight extends Box {    double weight;       BoxWeight(double w,double h,double d,double m)    {        System.out.println("In sub class.");       width=w;       height=h;       depth=d;       weight=m;    } } //.................................................................. class DemoBoxWeight {    public static void main(String args[])    {       BoxWeight mybox1=new BoxWeight(10,20,15,34.3);       System.out.println("Volume of mybox1 is "+mybox1.volume());       System.out.println("Weight of mybox1 is "+mybox1.weight);    } } //.................................................................. **********************************************************************  javac DemoBoxWeight.java DemoBoxWeight.java:--: cannot find symbol symbol  : constructor Box() location: class Box    {  System.out.println("In sub class.");    ^ 1 error Dhirajs-MacBook-Pro:Schild dhirajchandra$  ********************************************************************** Explanation. Since as soon as object of subclass is created constructor of subclass is called but its first statement is not super()  so it is not explicitly calling its super class constructor so implicitly it will call default constructor of its super class so its super class must have a default constructor which is not there(that we have disabled by multiline comment ),thats why compilation is producing error. So now if you are creating  a class then you may feel the need of extending this class in future but if this class will not class contain default constructor then the same as above error will be shown. I hope now its clear to you the necessities of default constructor. 2.Next  point i want to tell you that obviously it is not necessary in case of default initialisation of  instance variables since java is already there to  initialise all types of  instance variables ,we actually declare default constructor in this case just for our convenience so that if we don't initialise the instance variable  explicitly then our default constructor can initialise it for a  customised default value so that we can have a response from this default constructor that we have not initialised our instance variable. e.g. class Box {       int  width,length,height;       Box( )       {          width=length=height=-1;        }       Box(int w,int l,int h)        {             width=w;              length=l;             height=h;        }        int volume()       {            return width*length*height;       } } class Volume {     public static void main(String args[])     {         Box mybox1=new Box(4,6,3);         Box mybox2=new Box();         System.out.println("Volume of mybox1 is : "+mybox1.volume());         System.out.println("Volume of mybox2 is : "+mybox2.volume());     } } This is output of the above code. Volume of mybox1 is : 72 Volume of mybox2 is : -1   Now from the output you can see that since in the second object creation we did not pass any value for the explicit initialisation for the instance variable  and so we found its volume -1 which is unusual since no volume can be negative,however if we would not have customised width=length=height=-1 then default value set by java would be width=length=height=0 so volume would be zero. Thus by setting the unusual response we can tell the user that you are doing something unusual wrong. 