As a programmer, how big is the advantage of knowing a low-level language like C even when you don't use it?
You can get by without it for simple programs, but the depth you gain from it enhances your ability to write better programs. In most general terms: it is always a good idea to have a thorough and fundamental understanding what layers of code are below any code you write. Likewise, it is always a good idea to make it clear to any users of code that you may write as to what key invariants and performance characteristics are. Understanding the invariants and the big O complexity of whatever key abstractions you are using can make the difference between having a viable or non viable product, especially for an application that is performance critical and/or has to run at tremendous scale. I'll also add that I have yet to see any serious application (web, desktop, console mobile or server based) where performance tuning didn't contribute to making the product experience significantly more useful. Finally, one of the most fun parts about being an engineer is that the discipline is deeply rooted in doing things better than what they were in the past. It gives you a good kick to get things running better than the way they were before, and again understanding the layers below you is very useful. Updated 257w ago â€¢ View Upvotes