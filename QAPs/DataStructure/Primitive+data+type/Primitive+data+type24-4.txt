How do you judge a Java programmer with only 5 questions?
I don't think you can make a very good judgement about a programmer in only 5 questions, but you can get some idea. In interviews I used to ask a lot of detailed Java-specific questions like "what are the 8 primitive data types" and "what's the difference between method overloading and overriding" but have found they're not really that useful. Everyone could answer the second one and almost nobody could answer the first (most people forget short). Nowadays I'd focus more on finding out what kind of programmer they are, but without losing sight of the aim of making sure they know some Java. Here are 5 examples: Have you read "The Pragmatic Programmer"? What's your view on checked vs unchecked exceptions? What's the problem with static singletons? Can a Java object instance exist without any of its constructors having been called? If yes, in what situations? Give a Java example of an Adapter, a Proxy, a Facade and a Visitor. My reasons for asking, in case it's not clear: If they've read it (or similar books), it tells me they care about programming as a craft, not just as a living Something every Java programmer will have encountered, and so should have formed some sort of view on - bonus points for being aware that there has been debate on this for some time in the Java community and what the consensus is - extra bonus points for their opinion agreeing with mine Tells me something about how much testing they've done - bonus points if they've used a mocking library - more bonus points if they explain the problem in terms of general principles like encapsulation and contracts An esoteric corner of Java, but anyone who's learnt Java really thoroughly should know of one. Bonus points for understanding reflection as well, extra bonus for having encountered multiple contexts where something like this happens. Tests whether they're aware of GoF patterns which are an important communication tool between Java programmers. Bonus points for accurate Java examples, especially of Visitor which is necessarily more complex than the others. These questions test not just some Java knowledge, but how much Java code the programmer has really worked with, and whether they understand some important principles, and whether they are going to be able to communicate well with other developers. Updated 40w ago • View Upvotes • Asked to answer by Rajaguru Ganesan