Why is Java not considered a pure object-oriented programming language?
Java is not a pure Object oriented language, but so called a "Hybrid" language. For any language to be pure object oriented it must follow these 6 points strictly... 1) It must have full support for Encapsulation and Abstraction 2) It must support Inheritance 3) It must support Polymorphism 4) All predefined types must be Objects 5) All user defined types must be Objects 6) Lastly, all operations performed on objects must be only through methods exposed at the objects. Now, java supports 1, 2, 3 & 5 but fails to support 4 & 6. In  java we have some predefined types as non-objects (primitive types).  Although we have wrapper classes for the same but a Pure OOL can't have  anything other than Objects strictly. And  regarding point 6, In java we can have communicate with objects without  calling their methods for e.g. using arithmetic operators. String s1 = "ABC" + "A" ; These 2 points stops java from being a pure OOL. Why java doesn't design primitive data   types as object way ? Back in the 90's there were Performance reasons and at the same time  Java stays backward compatible. So they cannot take them out. Also James Gosling answered this. He said that they'd liked to have totally  abstracted away from primitives - to leave only standard objects, but  then ran out of time and decided to ship with what they had. 