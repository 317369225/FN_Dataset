As a programmer, how big is the advantage of knowing a low-level language like C even when you don't use it?
Depends on your goals. If you love programming and one day you hope to be an expert, then devote some time to understanding C. Here's why: 1. You will understand more about OO. C doesn't have any classes. You use primitive data types (like int, char) for storing data and maybe a struct when a group of data is relevant. You write functions and call them blindly. You can't do things like operator overloading. What is really happening when you do a == on an item on a list. If you do this long enough you start to understand why you need encapsulation (the origins of private, public methods in higher level languages). 2. Doing complex things in C forces you to understand pointers. Most beginners don't have a good grasp of pointers. If you think you do, try a thought experiment of how you would explain it to a 7 year old. And pointers are everywhere. They are used in the underlying data structures like linked lists, trees etc. They are used when you are doing inheritance and calling virtual functions in c++. They are used to pass information easily so you don't have to copy a whole set of data (just the address). The best way to understand pointers is to draw them and visualize how they work.  Once you think you understand pointers, try to come up with a valid use case of pointers to pointers. If you can't then you haven't understood pointers :) 3. It will make you understand low-level things that you take for granted. If you don't use any libraries, try reversing something like a string in c. You can't suddenly just call a function to do this. You have to pass, as you guessed it, a pointer to a character array. Then you have to copy each character into a temporary location and do some swapping. Then you realize how do you know it's the end of the string. Either you keep track of count or  every string must end with a NULL character '\0' in order to be able to do funky string manipulation. This goes back again to why classes came into existence, to be able to simplify operation for the developer without having to understand the underlying magic. 4. If you spend enough time in C, then you will become an efficient programmer. You will know when to do things locally (on the stack) vs. using a heap (everytime you call new on a class). In java you don't have to worry about memory management but in C you have to explicitly free the memory that you reserve in heap otherwise you get a memory leak and those things aren't fun at all. 