Do engineers need to know Fourier analysis?
Fourier analysis is essential to electrical engineering, particularly audio, sensor, and RF engineers. Any design activity that requires dealing with continuous time signals requires an understanding of bandwidth limitations and the performance criteria that affect such signals such as group delay, inter symbol interference, ripple, etc. In other words, the frequency domain becomes the area of investigation and manipulation as opposed to the time domain. This impacts engineers in two ways. Most modern analog circuit design is based upon the performance improvements made available through digitally compensated non-linear circuit topologies (for example a Doherty power amplifier). The performance improvement is implemented through spectrum manipulation and the design engineer is constantly using a Fourier transform to look at the spectra and verify he/she is getting the desired performance. The engineer doesn't calculate the Fourier transform by hand (although this certainly does take place from time to time), but uses a tool like matlab/simulink or one of the industry standard design tools like Agilent's ADS simulators. They all translate seamlessly between the time and frequency domains through an FFT and its inverse. In the prototype and test phase, a spectrum analyzer is heavily used. Most modern spectrum analyzers are FFT based. Interpreting the results and the impact of considerations such as windowing requires deep knowledge of Fourier transforms. I am constantly dismayed at how many newly minted engineers can't tell you what the spectra of a square wave looks like and why it looks all crappy when band limited. As a minimum, commit to memory the spectra of a square wave (odd harmonics only and the amplitude falls as 1/n). For extra credit, understand the sin(x)/x response. 