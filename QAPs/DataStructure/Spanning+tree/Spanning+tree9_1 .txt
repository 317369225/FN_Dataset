What is the dynamic programming algorithm for finding a minimum spanning tree in a graph?I know cool algorithm like kruskal,prims and brokuva exist with pretty well running time. I am still curious to can dynamic programming paradigm can be used for solving mst problem.Minimum Spanning Tree(MST): (When Greedy works) Prim’s Algorithm: Prim(V, E): RETURN T Select (u,v) with min weight \(u,v)ÎE, uÎS, vÏS S¬SÈ{v}; P¬PÈ{(u,v)}; E¬E\{(u,v)}; REPEAT        Select (u,v) with min weight \ (u,v)ÎE, uÎS, vÏS        S¬SÈ{v}; P¬PÈ{(u,v)}; E¬E\{(u,v)}; UNTIL S=V Return P;                      Kruskal’s Algortihm: 1.  A ¬Æ    // initially A is empty 2.  for each vertex v Î V[G]    // line 2-3 takes O(V) time 3.        do Create-Set(v)    // create set for each vertex 4.  sort the edges of E by non decreasing weight w 5.  for each edge (u,v) Î E, in order by nondecreasing weight 6.        do if Find-Set(u) ¹ Find-Set(v)       // u&v on different trees 7.                 then  A ¬A È{(u,v)} 8.                          Union(u,v) 9.  return A Total running time is O(E lg E). O(N1.5) divide-and-conquer technique for Minimum Spanning Tree problem Step 1: Divide the graph into  ÖN(Square root of N)sub-graph by clustering. Step 2: Solve each sub-problem separately using Prim's algorithm (quadratic complexity) Step 3: Merge the sub-solutions: Construct a meta graph where each node corresponds to one cluster Solve MST for the meta graph Add links from the meta graph to the original graph to complete the solution Notes: Symbols indicated- Î(Belongs to)   