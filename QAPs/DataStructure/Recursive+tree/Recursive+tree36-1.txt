Are you expected to write perfect code on your first attempt in tech interviews?
Syntax errors shouldn't matter much unless they are fundamental. If you feel that the biggest reason you are rejected is that you would have needed to debug the code, then I would say the most important thing you need to work on is experience. You need to know how the language behaves in order to know what will happen when executing a piece of code. I've compiled a list for you of things you can do to improve your code writing skills: Experience – As I mentioned earlier, you have to know how the language you're writing behaves. Write a bunch of small hobby projects to get the feel of the intricacies of the language so you know how to avoid common pitfalls that your interviewers will be looking for. Look at other people's code to see how they solved common problems. Readable code – Unless they specifically want you to write very performant code, write code that is more verbose and easier to follow rather than trying to make it appear more efficient. Logic – Read through your code several times to verify that it does what you intended. Try to think of possible side-effects of running it to avoid logic errors. Standards – Try to follow (one of) the accepted standards for the language you're writing for rather than writing original code that may make sense to you but could be considered confusing to others. Before the interview, read up on code standards for the language in question. Remain calm and focus – Go through everything slowly (as time allows) and think everything through properly rather than rushing. Our brains easily get distracted, so try not to start solving another part of the problem until you're done with what you're currently writing, or you run the risk of forgetting important details. 