Competitive Programming:Â What do working software engineers think of competitive programming if they are not competitive programmers?
Here's another sports analogy. Some non-competitive programmers think about competitive programmers the way some non-sports fans think about college athletes: they get all the attention and money, recruiters are always dropping by to check them out, and they're always going on about how important it is that they win the big game. Meanwhile, non-athletes are doing important work that no one notices because it isn't as flashy. Competitive programming gets a lot of attention on Quora, and that seems to generate more extreme opinions than one might expect if it was just a niche hobby. People read the stream of (duplicate, not always well thought out) CP questions and their blood pressure starts to go up. It's like a non-sports fan sitting in a bar during the last game of the NCAA basketball championship. They might have been able to ignore it at the office, but now they're getting a headache and remembering why they can't stand it. I work for a large software company that does lots of hiring, and we use those dreaded coding interviews. We don't go out of our way to look for competitive programmers, but they certainly have an edge on that type of interview. I haven't heard any interviewers or hiring managers express an opinion one way or another. It just isn't as big a deal as it is on Quora. Also, what does it mean to be a competitive programmer? If I submit a few Project Euler solutions, or occasionally participate in a TopCoder SRM, does that make me a competitive programmer? That describes a lot more people than the few who end up at an on-site contest. When people say they would avoid hiring a competitive programmer because of one reason or another, they're probably thinking of that tiny percentage of programmers who are serious competitors. A lot of other programmers are just using it to prepare for an interview or practice a new programming language. 