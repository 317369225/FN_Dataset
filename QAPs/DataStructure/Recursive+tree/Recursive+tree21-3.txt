What is tail recursion? Why is it so bad?
Tail-recursion is basically an implementation of an iterative process written as a recursive procedure that does not grow with the number of procedure calls. Iterative processes offer an advantage over recursive processes in that there is a possibility to not grow with the number of procedure calls as all state is encompassed in the program variables and hence no state 'needs' to be maintained by the runtime. The problem is that certain languages do not make use of this fact and instead of utilising the current stack frame, they keep growing with the number of procedure calls. Languages that do support this optimisation though are said to implement Tail-recursion. Basically, the fact that a Tail-recursive 'looking' method might not really be tail recursive in some languages, is what makes it bad. When that happens, you resort to loops. 