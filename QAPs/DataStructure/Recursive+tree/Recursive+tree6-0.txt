How do I give a tight asymptotic bound to the recurrence [math]T (n) = 2^{n/2} T(n/2) + 2^n[/math] and how to draw a recursion tree?
In terms of algorithm, I think it will be[math]\log n[/math] in the base 2. Assuming that your base case is [math]T(1) = k[/math] Since you have only one recursion term in [math]T(n)[/math] that is [math]T(n/2)[/math] you will descend the recursion tree, that in this case will be a straight line with [math]\log n[/math] elements, and each time you call it you will use one assignment, then we have [math]1 * \log n[/math] in the base 2, as asymptotic bound 