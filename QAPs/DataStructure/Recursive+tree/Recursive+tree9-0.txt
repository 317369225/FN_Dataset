How can I solve the recurrence of [math]T(n)=2T(\sqrt{n})+ n[/math], and [math]T(n)=1[/math] for [math]n<2[/math], by the recursion tree method?
Doing this via summation might be a little difficult. Currently I am thinking on terms of, assume [math]A(n)=T(2^n)[/math], so new sequence we have is [math]A(n) = 2*A(n/2) + 2^n[/math], which can be evaluated as [math]2^n[/math] using Master's theorem. Basically, we see how much work is being done at the leaves, which is [math]O(n)[/math]. So, majority of work being done is at root, so we can say [math]A(n)=2^n[/math]. So, we have [math]T(2^n)=2^n[/math], put [math]n = log_{2}{N}[/math], we get [math]T(N)=N[/math]. 