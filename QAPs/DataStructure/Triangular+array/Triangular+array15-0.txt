Arrays (programming): "An array/vector of size [math] n [/math] has exactly [math] \dfrac{n(n+1)}{2} [/math] total number of subarrays / sub-sequences" - Is this theory valid for all n?
Yes. You can prove it as follows. For an array with length [math]n\in\mathbb{N}[/math] with indices [math]1[/math] through [math]n[/math], we wish to find the number of possible subarrays. Note that each subarray can be uniquely identified by a starting index [math]a\in\mathbb{N}[/math] and ending index [math]b\in\mathbb{N}[/math], where [math]1\leq a\leq b\leq n[/math]. "For each starting index [math]a[/math] from [math]1[/math] through [math]n[/math], for each ending index [math]b[/math] from [math]a[/math] through [math]n[/math], we uniquely identify a new subarray." So we can write an expression for the total number of subarrays simply as: [math]\sum_{a=1}^{n}{\sum_{b=a}^{n}{1}}[/math] [math]=\sum_{a=1}^{n}{(n-a+1)}[/math]. The above expression agrees with the fact that there are [math]n-a+1[/math] subarrays with starting index of [math]a[/math], which can be verified easily. Anyways, continuing the simplification: [math]\sum_{a=1}^{n}{(n+1-a)}[/math] [math]=\sum_{a=1}^{n}{n}+\sum_{a=1}^{n}{1}-\sum_{a=1}^{n}{a}[/math] [math]=n^2+n-\frac{n(n+1)}{2}[/math] because of Triangular number [math]=\frac{n(n+1)}{2}[/math]. Updated 14w ago • View Upvotes