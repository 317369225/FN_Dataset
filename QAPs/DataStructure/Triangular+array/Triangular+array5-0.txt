Why do array indexes start with 0 (zero) in many programming languages?
Many languages don't index starting from zero (MATLAB, for instance), but one of the luminaries of computer science -- Edsger Dijkstra -- actually wrote a note in 1982 advocating for zero-based indexing called Why numbering should start at zero. The full text can be found here: Why numbering should start at zero (EWD 831) To summarize his argument: When working with sub-sequences of natural numbers, the difference between the upper bound and the lower bound should be the length of the sub-sequence.  The indices of an array can be thought of as a special kind of such a sub-sequence. The lower bound should be inclusive, the upper bound should be exclusive.  In other words, the lower bound should be the first index of the array.  Otherwise, we risk having to have a lower bound in the unnatural numbers for some sub-sequences. If we want to maintain conditions (1) and (2), then we effectively have two choices for upper and lower bounds: 1 <= i < N+1 or 0 <= i < N.  Clearly, putting N+1 in the range is ugly, so we should prefer indexing starting from 0. 