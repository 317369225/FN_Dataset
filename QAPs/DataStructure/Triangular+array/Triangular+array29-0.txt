How important is partial differential equation in the field of computational geometry?
I work more with discrete geometry, but from my knowledge PDEs ride backseat to many other more fundamental topics in math. For example, I know Voronoi diagrams are a big topic in computational geometry. Last I read, graphics rendering in video games was primarily done with polygon meshes. (This is why the people/objects in your old N64 video games have squarish heads, triangular noses, rectangular feet, etc.) Voronoi diagrams deal largely with tesselations, or "tilings of the plane". For example, how do you arrange a certain array of polygonal figures to recreate the most lifelike simulated image of what we observe in reality? I couldn't explain much on what's enabled the astronomical leaps in graphics since my N64 but I'd imagine it's almost assuredly a consequence of the tech industry's strides in better/fast processors, graphics cards, memory storage, etc. {Think Moore's Law: Gordon Moore, former CEO and cofounder of Intel, discovered a relationship that has since been equally well applied to a number of different correlated variables. Most notably, his original discovery revealed that the number of processors one could accommodate on a square centimeter of a silicon wafer (i.e., the semiconductor foundation for processors and actually all integrated circuits) doubled every 18 months. Soon, it was found that similar relationships held for things like computing power, inverse price per transistor, inverse for thermal management, etc.} Sorry about that tangential point. But altogether, I'd say that discrete geometry plays a large role in computational geometry on the whole. Aside from tesselations, some other really important things would have to include a lot of linear algebra, coordinate transformations and the like. For example, homogeneous coordinates are an indisputably important element in computational geometry. Homogeneous coordinates, unlike the ordinary Cartesian coordinates so entrenched in Euclidean geometry (most people aren't even aware of the variety of coordinate schemes in existence let alone their applied usages), are an element of projective geometry. For example, the rotation matrix, usually presented as being of the form of a square (n x n) matrix (usualy 2x2 or 3x3), is actually far more effectively applied in computational settings through homogeneous coordinates. Transformation to this coordinate scheme (they're also known as normal coordinates) yields a 4x4 matrix and is inextricably linked to the graphics industry. It's used in something called the 3D perspective transform and is what enables electronic displays to possess such accurate reproductions of real-life, three-dimensional perspective on a 2D, flat display. If you're interested in this, look into the related topics of Plucker coordinates, trilinear coordinates, barycentric coordinates, the camera matrix, incidence geometry, absolute coordinates and a swarm of others I can't think of are out there too. In terms of PDEs, there is that little list of the most historical/fundamental partial differential equations that bothered mathematicians for ages; among them: Laplace's PDE, the wave equation, the heat equation, Poisson's equation and Bessel's too. Laplace's is especially important. The solutions to it are of two categorical "flavors". One being what are referred to as cylindrical harmonics and the other spherical harmonics. Spherical harmonics are vastly important in things like quantum chemistry/physics where they're used in quantum mechanical calculations of molecular/atomic orbitals. They've of course found application in places outside such super technical areas; I believe the spherical harmonics are used in applications relating to lighting. (Most of my knowledge of this stuff is from use in chemistry and crystallography so my ability to tell you of the entirety of their potential application in other fields is biased). The wave equation is hugely important too, as much for acoustic waves as for a large collection of other wave-like/periodic phenomena. In my opinion, the most important outgrowth of it was Schrodinger's equation which gives the solution to the wave function that describes quantum systems. And then the heat equation is applied to diffusion phenomena (e.g., Newton's law of cooling). I would find it hugely shocking if these more analytical maths didn't also surface in the computational environment. Afterall, someone has to write algorithms that model the way we know physical phenomena to occur in reality for computers and I imagine the best approximation to that comes from these equations. 