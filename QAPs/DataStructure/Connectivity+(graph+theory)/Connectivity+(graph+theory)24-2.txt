Theoretical Computer Science: When it comes to real world computing is Theoretical Computer Science essentially useless?
Nope. I live in graph-theory land. Have for decades. Every time I touch just about anything, it turns out to be chock full of graph theory, underneath it. Drives the developers who work for me crazy. They throw out their ideas for how to implement something, I doodle on the whiteboard for a bit and say "well, what about this?" and they go back trying to figure out how they missed that all these pieces are connected, and that by exploiting the connections you wind up with a completely different solution. Theres a ton of theoretical work done - both in pure mathematics, and in computer science - in the area. There's a ton of that which has been influenced by practical applications - that is, work that wouldn't have been done had people not tried to implement "known solutions" at scale, only to have them blow up, in practice. Facebook, and the age of Social Graph, is putting even more light on the area. The Internet, and all the problems that you get when you take algorithms meant for scale of thousands, maybe tens-of-thousands, and blow them up to billions, is doing so as well. That's just the tip of the iceberg. It is, however, my iceberg. 