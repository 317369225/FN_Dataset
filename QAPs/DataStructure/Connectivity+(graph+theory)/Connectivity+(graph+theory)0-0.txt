Graph Theory: How can the k-edge connectivity and k-vertex connectivity be determined?I am looking for the pseudo-code (or good explanation) of algorithms which can determine the k-edge and k-vertex connectivity of a graph and can be implemented in small time. All related suggestions are welcomed.
Both are special cases of the Min cut / Max flow problem - so learn Ford-Fulkerson (and related algorithms). For edge connectivity: each edge has capacity 1, the size of the min cut / value of the max flow is your edge connectivity For vertex connectivity, the mapping is a little harder.  Split each vertex into two vertices (a' and a''), connected by a directed edge of capacity 1 from a' to a''; the edges incoming to the original vertex should end at a', and the outgoing edges from the original vertex should start at a'' - and give all these edges infinite capacity (this isn't strictly necessary, but makes the argument more clear).  Then the min cut corresponds to the smallest subset of vertices that would could be removed from the original graph to disconnect the desired vertices - so the size of the min cut here is the vertex-connectivity (with respect to the two vertex used as source and sink). 