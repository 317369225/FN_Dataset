What is a great way to learn math and computer science concurrently (ideally with one helping another)?Or learning how to program and thinking mathematically at the same time. Engage math in learning how to code and vice versa. I love coding. I feel like I'll be much better at math if I use math a lot in coding. I'm interested in both programming and computer science. I'm looking for solutions when all of it is explicitly tied together.
There are many ways to do this (e.g., see what is written in the other answers), and many different topics that one can learn to do this. I would like to advocate graph theory as a particularly appropriate topic to study to learn important parts of both math and CS.  It is very suitable for learning fundamental principles in both math and CS that apply well beyond graph theory. (1) It's very accessible. One can dive right in at the beginning, and nowadays especially one can use intuition from everyday life. (2) Even though you can dive right in, you quickly find yourself immersed in very deep problems. (3) To study deep problems in graph theory, one needs to develop both mathematical and algorithmic tools (and insights). Indeed, it also helps to develop tools in data analysis, which is a third pillar to help complement the other two. For example, it will be helpful for learning a lot of both theoretical and numerical linear algebra. (4) As I mentioned above, these various tools --- from all three pillars --- also help in other topics in math and CS, so a key step to continuing your studies after trying a focal subject (whether graph theory or something else) will be to then jump into another topic. An important note to add is that graph theory concerns discrete structures.  It is also very important, and in many mathematical situations more traditional, to study continuous structures. A topic I would recommend here to help you learn both a specific topic deeply and fundamental principles more generally is numerical solutions of ordinary differential equations.  You'll need to develop theoretical knowledge to understand what you're doing, and you'll find (for example) your linear algebra knowledge [see point (3) above] to be extremely useful. You'll also develop it further. 