Theoretical Computer Science: When it comes to real world computing is Theoretical Computer Science essentially useless?
I think some aspects of CS could be folded back into mathematics where they came from, as far as I'm concerned. I think having a theoretical CS field around would be useful, just as we have theoretical physics, but the one change I'd make is that it should at least be theorizing over real artifacts, as theoretical physics does with natural phenomena, trying to come up with hypotheses that could one day be tested on an actual computer, or networked system. Several years ago I visited the opening of a new CS building on campus of my alma mater, and I ran into a CS professor who I'd met years ago when we were both undergrads. He asked what I'd been up to. I can't remember exactly, but I mentioned something about wanting to make computers more powerful tools for people to use. He chuckled and said, "I tell my students, 'If you want to do something with computers, don't take CS'." I'd like to see CS try to become an actual science, one that comes up with theories, tests them on actual computers, and measures results, not just making attempts at mathematical proofs. It would also be a field that is fully aware of past accomplishments, and what was learned from them, just as scientific fields are. I don't see CS in most schools fitting this description, except when it comes to the mathematical work. What it teaches are some "good to know" boundaries, as you say, and one computing model, with a few variants on it, and some applied technique. The reason for its irrelevance is that it doesn't try to advance knowledge of architecture, hardware or software. As a consequence, it doesn't try to address issues that people who work with computers face in the real world. Instead, if it's gotten practical at all, it's focused on "developing skills" that are needed by software developers in the workplace, becoming more of a software engineering field that calls itself "computer science." The feedback I've gotten when I've discussed this with others is that there is no interest in going in the direction I describe. There's little to no funding for it. What you see CS departments doing is following what gets funded. That's very practical, and understandable, but what nobody seems to notice is that what's getting funded is a kind of "death spiral." The more it continues, the more CS becomes irrelevant. It seems to me it's funders who are going to have to realize that for the situation to change. Back in 2009 I wrote a blog post that relates to this answer, "Does computer science have a future?" It elaborates on a speech Alan Kay gave that year at Kyoto University, called, "Systems Thinking for Children and Adults." I also included a related speech he gave in 2012, called "Normal Considered Harmful." The point was to talk about computer science, not give a CS lecture, which focused on the goals of the discipline. Updated 23 Nov • View Upvotes • Asked to answer by Anonymous