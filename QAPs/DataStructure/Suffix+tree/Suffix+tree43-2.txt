What is the most difficult algorithm you have implemented?
The code I'm most proud of is a data structure I invented for a Project Euler problem. I later found out from reading the comments that it was essentially the same as a binary indexed tree. For an array of length n, it takes only O(log n) operations to increment any given interval of entries. The downside is that it takes O(log n) operations to retrieve a value. But for this specific problem that turned my O(n^2) solution into an O(n log n) solution, which reduced the running time from weeks to minutes. It took me a couple days of thinking about the problem to finally discover that solution. I remember it fondly, because usually if I can't get the solution within the first hour, I won't get it at all. For once, I persevered, and it paid off. (And please don't ask which problem it was. The point of Project Euler is to figure that out for yourself.) 