What is the most difficult algorithm you have implemented?
In my last year of high school, I successfully implemented Ukkonen's algorithm for constructing suffix tree in linear time. I did this as a preparation for IOI 2010, although suffix tree was not included in the syllabus. My motivation was to solve some national training camp problems that turned out to only be solvable using suffix trees/arrays. (Those problems were chosen by Ilham Kurnia back then.) I printed a copy of the paper so that I could carry it everywhere. Sometimes I even read it while having lunch (really). The algorithm is quite hard and complicated; at first, it even did not make sense at all for me. It took me several weeks to finally understand each of the notations, pseudocodes, and the ideas behind it. Finally, I was able to implement it in C++. Then I tested it to build the suffix tree for a string containing 1 million characters, and it took less than 3 seconds if I recall correctly. I was very, very proud that time! Unfortunately, in the first year of college, someone stole my laptop :( Therefore, I lost my Ukkonen code as well. It has been 3 years; if I read the paper again, I don't think I still remember all the details. I still regret it, until now. Bye-bye, one of the most beautiful pieces of code I've ever written in my life! 