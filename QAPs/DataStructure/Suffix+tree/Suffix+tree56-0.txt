How do I find the substring of length k that is repeated consecutively the most number of times?
Let [math]S[/math] be the initial string, [math]len_i[/math] be the length of the longest substring [math]T[/math] ending in [math]i[/math]-th position of [math]S[/math] such that for any two positions [math]x[/math] and [math]y[/math] in [math]T[/math] with [math]|x - y| = k[/math] the corresponding symbols [math]T[x][/math] and [math]T[y][/math] are equal. The maximum number of times a substring is repeated consecutively then will be equal toÂ  [math]m = \max\limits_i([\frac{len_i}{k}])[/math], and [math]S[i - km + 1..i-km+k][/math] with the best (argmax) [math]i[/math] will be one of such substrings. And the sequence [math]len_i[/math] is very easy to compute in [math]O(n)[/math]. Just go from left to right and compute (example in Python): len = [0] * len(S)len[0] = 1for i in range(1, len(S)):  len[i] = (len[i - 1] + 1) if (i < k or S[i] == S[i - k]) else k. 