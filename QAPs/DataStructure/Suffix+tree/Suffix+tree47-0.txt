How can we find the number of palindromic substrings in a string in linear time?
This can be done in linear time using suffix trees: 1) For constant sized alphabet we can build suffix trees using Ukkonen's Algorithm in O(n). 2) For given string S, build a generalized suffix tree of S#S` where S' is reverse of string S and # is delimiting character. 3) Now in this suffix tree, for every suffix i in S, look for lowest common ancestor of (2n-i+1) suffix is S`. 4) count for all such suffixes in the tree to get total count of all palindromes. 5) You can even go further and get longest palindrome. Look for LCA which is deepest in the tree i.e. one whose distance from root is max. This algorithm takes linear time (Used by Genebank to find biological palindromes in DNA sequences), although for very large strings you can do quadratic time preprocessing of this tree to answer LCA queries in constant time. Constructing and lookup takes linear time. So running time is still O(n). An example: Given string S = mabbax. Shown below is suffix tree for string mabbax#xabbam. LCA of suffixes 3 and 11 will give you one palindrome.      |(1:mabbax#xabbam)|leaf tree:|      |     |       |(6:x#xabbam)|leaf      |     |(3:bba)|      |     |       |(13:m)|leaf      |(2:a)|      |     |(6:x#xabbam)|leaf      |     |      |     |(13:m)|leaf      |      |     |      |(6:x#xabbam)|leaf      |     |(4:ba)|      |     |      |(13:m)|leaf      |(3:b)|      |     |     |(6:x#xabbam)|leaf      |     |(5:a)|      |     |     |(13:m)|leaf      |      |     |(7:#xabbam)|leaf      |(6:x)|      |     |(9:abbam)|leaf      |      |(7:#xabbam)|leaf 7 branching nodes Alternatively, you can also do this using suffix arrays. For the generalized suffix tree built above, traverse the tree lexicographically and populate the suffix array. Single pass over suffix array would give you total number of palindromic substrings in orignal string. Reference: http://algo2006.csie.dyu.edu.tw/... Ukkonen's paper: (does it by maintaining suffix links) http://www.cs.helsinki.fi/u/ukko... 