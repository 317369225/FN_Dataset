What is the most difficult algorithm you have implemented?
In graduate school, I worked out a new theory for the similarity transformation of the 3- and 4-electron  field operators that arise in open shell quantum nuclear physics and quantum chemistry.    I was able to solve the problem of creating a pure unitary transform, whereas the existing theory required the use of spurious integrals that violated the known spin constraints on electrons and had no true physical interpretation.  Indeed, it was just seemed impossible to me that such an unphysical approach was required, and I was only able to complete this work by being completely isolated from my advisor or any kind of micromanagement that I suspect other students are forced to endure.    I can also point out that I did not follow any kind of 'scientific process' or agile methodology here--that would have made the insight impossible.   I can not stress this enough.  I can describe it more akin to a chef tasting a recipe and saying, this just does not taste right, and then working through various spices and herbs until you get the right mixture.  then the real work began.  I worked out most of the conceptual ideas in my head running on the track at 6 am, and spent several weeks working out the mathematical details.  It then took me a few weeks to Implement the code and test it on real world cases.  (Based on this work, and a much larger set of coding problems, such as writing a functional compiler to implement the theory, and combined with its application, I was awarded an NSF fellowship in theoretical chemistry (1 of only 2 nationwide) ) 