What are some of the best algorithms?
A candidate is certainly the Euclidean algorithm for finding the greatest common divisor. It dates to approximately 300BC, more than two millennia before there were any mechanical (much less electronic) devices to execute algorithms. To put this in perspective, consider that negative numbers didn't gain acceptance in European mathematics until the 1700s. More recently, Dynamic programming is a general class of algorithms that continues to surprise us with its power. Many very common algorithms for problems like finding the minimum edit distance between two strings and the Viterbi algorithm used in speech recognition systems are based on dynamic programming. At its core, the QPX search system developed by my previous company ITA Software was a dynamic programming algorithm. Finally, Zero-knowledge proof systems are intuitively quite hard to believe at first. A ZKP allows party A to prove to party B that A knows a particular secret -- without party B either knowing the secret or learning anything useful about it. We use a proof system of this kind in Inky, our mail client, to authenticate you when you log in. Inky's servers don't know your password, but they know when you know it -- weird, eh? 