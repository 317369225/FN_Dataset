What is the method to build suffix tree or suffix array in O(n)?
There are different ways you can achieve this. Although the suffix tree precedes the suffix array and it has been for a long time believed that suffix trees are faster to construct than suffix arrays, currently is not like that. In fact, it is presumably faster to construct a suffix array first and then a suffix tree. To achieve an O(N) suffix array construction, you should use sais. However, often it is better to use other approaches which run in O(NlogN) since they exploit the CPU's multi-parallelism. From the suffix array and inverse suffix array, you can compute then LCP array in O(N) time. Given the suffix array and LCP array, you can construct the Suffix tree in O(N) time. Note that normally the Suffix tree construction depends heavily on how you query,insert children. The alphabet is a factor in this. Using the Suffix array, you ignore this factor. For the suffix array construction, I would suggest: - sais - libdivsufsort - A lightweight suffix-sorting library - Google Project Hosting 