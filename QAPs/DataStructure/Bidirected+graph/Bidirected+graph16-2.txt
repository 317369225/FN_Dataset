What is the difference between tree search and graph search?
This is a weird question. In a tree you usually have some property that tells you something about the subtrees. For instance in a binary search tree, the nodes in the left subtree have smaller keys than the root and the nodes in the right subtree have bigger keys compared to the root. Because of that info, you can know in which subtree the thing you are searching can be. In graphs you have some network of nodes that are connected in some way (there can be back edges that form a cycle, edges can be bidirectional,...) where the edges have some weight (usually 1 or greater). In a graph you don't have any property that would tell you in which direction you should search, that's why you don't see the logarithm complexity. The structure itself is a bit more general and gives you less information about where things are. 