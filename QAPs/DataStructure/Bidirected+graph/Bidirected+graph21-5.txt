I am confused whether to use angular.js, underscore.js react.js, ember.js or backbone.js for my next project. Can someone help me with material which states which type of web apps each library rocks at?
To narrow the search frameworks want to offer a choice of high-level  framework on the basis of which, we hope, will help you select a few  options for trial. I want something flexible, with solutions in minimalist style for the division of tasks in my application. It  maintains a constant connection and REST-synchronization model  representation (controllers), data sharing, event-driven,  standardization and navigation (at anchor in the URL). If you change the model immediately change the view. I would like to himself adequately control architecture. Ideally, if the solution has been used in many large companies for non-trivial applications. Because  I may have something complicated, I would like to see an active  community around the framework, which can always try to put too simple  questions (Marionette, Chaplin, Aura, Thorax). Ideal also have build tools (grunt-bbb, brunch). Use Backbone.js. I want to base the level of desktop applications to the web. This  framework should be high-level, modular, MVC, without the need to  collect everything together by hand, maintain persistence (persistent  objects metaphor file, device), calculated properties and auto-update  templates. It is necessary for intelligent control states rather than manual, compatibility with many related frameworks. This should be a good documentation templates to use, build tools (ember.gem, ember for brunch). Use Ember.js. I  want something lightweight, connecting patterns on the fly, navigation,  integration with major libraries (such as jQuery and Dojo) and fast,  with support for inheritance components of MVC, it may not yet be worked  out in large applications, but it should be. Ideally, if done by people with experience in creating complex applications. Use CanJS. I  want to shell declarative style, use View for collecting data on user  behavior through the customization of the HTML and components according  to the rules of the application. With the support of a simple test system are URL-navigation and division of tasks through the MVC or a variant thereof. This  gives a customized approach to the adjacent library doing a compilation  of HTML, to build its own DSL (domain-specific language) in HTML. It is necessary for the network elements such as a Web platform components; and still need to have the tools assembly (angular-seed). Use AngularJS. I want a good basis for the bulk of applications, with proven and wastewater infrastructure widgets, modules postzagruzkoy; possible  - asynchronous and easy integration with CDN-s, with a choice of  modules and widgets (graphs, charts, tables, etc), with a good  multilanguage (i18n, l10n). Need support OOP, MVC, and the garbage of the blocks (modules) to create complex architectures. Use the Dojo. I want something that are optimized to work with extensions YUI. With  the support of models, views and navigation, which would make writing a  simple application with a variety of ways to display information  display options to the transitions from one to another, and the like. This is - a complete solution with the widgets / components with the ability to describe the architecture of the application. Can be build tools (yuiproject), but can be replaced for others. Use YUI. I  want something simple for asynchronous interfaces, and has no  dependencies, flexible when building applications with support for MVC,  events, navigation, while remaining compact. Optimized for CoffeeScript, with detailed documentation. Use Spine. I want a tool for building complex dynamic UI based on the data model and the declarative style of binding. To update the UI changes to the model, using the bidirectional binding and support dependencies through tracking data. I should be able to use it with any framework or even a ready-made applications. You need to have a built-in standardization and easy extensibility. Use KnockoutJS. I want something for simple Web applications and sites. I do not expect it to have a lot of code, so it will not be much in the way. Cross-browser compatibility to focus on the task at hand. Easy handling of events, the interaction with remote services, scalability and huge set of plug-ins. Use jQuery. 