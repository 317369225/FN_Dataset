What do C/C++ programmers know that Haskell programmers don't?
Compared to Haskell programmers who have not had very much C++ experience, C++ programmers have extensive first-hand experience with the sheer depth of the depravity that a feature set like C++'s can create, and the greater degree of discipline required to stare into the face of insanity itself on a daily basis makes the C++ developer more conscious of safety. A Haskell programmer without C/C++ experience would be blissfully unaware of the hell endured by C/C++ developers. Haskell developers can be told that mutability is "bad", that statements are "bad", that nulls are "bad", etc., but they cannot truly appreciate the misery they are being spared without serving time in the C/C++ trenches. Doe-eyed, misguided Haskell programmers might even question what they have been taught about e.g. the evils of mutability, and they may not have a grizzled C/C++ veteran nearby, with the thousand-yard stare of a developer who has seen too many segfaults, hands stained with the blood of abstract data types he could not save from unsafe concurrent mutation, whose recurring nightmares about infinitely-recursing template instantiations make him too terrified to sleep, to respond with a haunted stare that pierces into their very soul, eyes welling up with tears as the painful memories surface, which communicates how torturous such an experience will inevitably be. C++ programmers fleeing to Haskell would find a language that takes the often-overwhelming burden of ensuring that safety off of their hands. They would finally be able to let their guard down, and to devote their mental energies instead to productivity. And if they end up working with other Haskell developers, they can afford to be significantly less paranoid about their peers' changes. Essentially, what C++ programmers have over developers who started and stuck with Haskell is the joy of discovering this utopia, whereas Haskell developers have never lived anywhere else. Haskell developers might venture out and return with renewed appreciation of what Haskell saves them from, but it is surely more rewarding to find an oasis after decades of wandering the desert than to leave one and confirm that it'd suck to not have it. Curious Haskell developers who willingly depart the safety, the sanity, and the elegance of Haskell to learn about C/C++ are like curious young Jedi being lured by the Dark Side: they will be offered considerable power, but it will come at a tremendous cost and inevitably prove to be an illusion. The arrogant ones will believe themselves capable of making the same assurances GHC can make but that g++ cannot, and mistakenly believe the dubious "power" to be worth the incredible risk, and thereby walk the road to madness. Whereas the developer who put down his weapons of C++ and climbed Haskell mountain to join its monastery has dealt with these devils before and is wary of their false promises. 