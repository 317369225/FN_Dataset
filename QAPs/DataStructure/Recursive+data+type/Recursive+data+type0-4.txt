Why are lists the fundamental data structures in most, if not all functional programming languages?
I think the kind of lists we are talking about are really sequences since indexing is not required. I believe the reason sequences are so heavily used in functional programming is that sequences, like functional programming itself, is rooted in discrete math. The fundamental data types include values, sets, products of sets (relations), tuples (sequences), and functions (a constraint on relations). These are the building blocks of algebraic data types and the algorithms that use them. 