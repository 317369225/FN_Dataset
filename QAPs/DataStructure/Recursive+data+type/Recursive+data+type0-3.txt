Why are lists the fundamental data structures in most, if not all functional programming languages?
tl;dr guess: List is the simplest structure that contains a range of [iterable]objects. Mathematical functions don't require their arguments to be iterable.e.g. for,  [math]f(x) = x^2,f(2) = 4;[/math][math]g(x,y) = x^2 \times y,g(1,2) =2[/math],where arguments are int objects . Unlike that,most elementary functions in a program  are usually implemented s.t. they need to loop[iterate] through a range of [iterable]objects & non-elementary functions frequently call these elementary functions,assuming that the objects are iterable & will throw error if they are not. cf: Sameer Gupta's answer to What does iterable mean in programming? 