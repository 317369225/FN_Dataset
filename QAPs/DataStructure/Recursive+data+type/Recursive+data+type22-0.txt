What are the high level programming languages?
The definition is vague: http://en.wikipedia.org/wiki/Hig... "High-level language" refers to the higher level of abstraction from machine language. Rather than dealing with registers, memory addresses and call stacks, high-level languages deal with variables, arrays, objects, complex arithmetic or boolean expressions Basically anything other than machine code or assembly or something alike. Or(Still wikipedia) The terms high-level and low-level are inherently relative. Some decades ago, the C language, and similar languages, were most often considered "high-level", as it supported concepts such as expression evaluation, parameterised recursive functions, and data types and structures, while assembly language was considered "low-level". Today, many programmers might refer to C as low-level, as it lacks a large runtime-system  (no garbage collection, etc.), basically supports only scalar  operations, and provides direct memory addressing. It, therefore,  readily blends with assembly language and the machine level of CPUs and microcontrollers.So, is C high level or low level? http://stackoverflow.com/questio... You will find that   many of the truths we cling to depend upon our own point of view. For a C programmer, Assembler is a low-level language. For a Java programmer, C is a low-level language and so on. I suspect the folks programming the first stored-program computer with 1s and 0s would have thought Assembler a high-level language. It's all relative. (Quote from Return of the Jedi) I think you need  to edit the question to make it more precise, instead of using such vague term. 