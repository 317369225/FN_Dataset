What math concepts a programmer should know to make things easier?
For general programming: Linear Algebra, for the love of God, learn how to handle vectors, and matrices. Probability theory. Don't take that b.s. "Statistics for Engineers" course to get out of a legitimate probability course. Yes, the probability theory course is harder, but it will make courses like Machine Learning, Computer Vision, and Simulation much easier. Also note that probability, and statistics are not interchangeable. Formal Logic/Discrete Math. You need to understand logical argument. This will be necessary to prove things like run time, and optimality of algorithms. For data analysis, and simulation: Numerical Methods/Linear Algebra. This course should include root finding, interpolation, extrapolation, Runge-Kutta, solving systems of equations, and unconstrained optimization. Modeling, and Simulation. This course should include the spotted owl problem ad nauseam. Monte Carlo simulation should also make an appearance, as well as basic, constrained optimization, and dynamic systems. An optimization course. This can be Linear Programming, or Nonlinear Methods. Time Series. Almost all of the data you deal with in the digital world will be sampled, that's time series. Depending on sampling rate, a sine wave can look like a straight line, or a sine wave. You want to know how to tell if that straight line is actually a sine wave.Â  