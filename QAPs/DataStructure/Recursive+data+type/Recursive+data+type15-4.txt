Why do interviewers care so much about algorithm and data structure?
Interviewers want to know that you have the basics down, or, can at least identify core/basic data structures, respective implementations, and minor optimizations thereof. In the course of employment, you may come across a problem. If you can't even identify the base problem, and how efficiently it can or can't be solved, then you can't even identify the basic branch of optimization to select. If you can't select the base problem, then you may select something (common, from a language platform or framework), and then waste time programming your own (often inefficient) solution, or, not known to go searching for another term in a language framework from common subsets of algorithm or data structure implementations (e.g. common across languages). At a higher level, it may just be which parameters to pass into a function to determine which optimization it will select internally (let's say, in languages that allow function parameter overloads). Therein, you should also be able to glance at documentation and identify which of several class instantiation methods to select (knowing what *should* happen behind the scenes). That's why. ========== BUT, there's one exception to this "rule" -- people who're conditioned to ask technical questions like this, but, who don't really know why or what they're talking about. AND, YOU, AS THE INTERVIEWEE (person interviewing, not the employer), can pick-out bad employers if you know your stuff and they're just running you through the gauntlet, but can't really keep-up. Let's say you know what you're doing and what you're talking about, and, you're interviewed by people who don't... maybe they're just asking tech interview questions from a book (which I've encountered)... do you really want to work with the kind of people who can't keep-up with the pace at which you can recall and act on information? Odds are you're going to be working for the people -- most people don't take kindly to a more experienced person working under them (at least in political or egotistical environments). It benefits both parties to know what they're doing. 