When is the right time to use recursion?
There is two cases in which you should, in professional grade code, use recursion: When you have a interpreter/compiler smart enough that will convert it to its iterative form, or that can find out if there is errors in your code that will prevent it from terminating correctly. And you know it will convert your code. When what you are implementing is by nature exclusively recursive and thus you cannot implement it otherwise (and if you have found something like that please write a paper about it and go collect your Turing award).Now in very complex code a potential infinite loop and a non-terminating recursive function could be as hard to detect and debug. But the iterative implementations tend to have lighter memory footprint in most languages - which means you can go farther into each recursion if you need - that is why they are recommended. 