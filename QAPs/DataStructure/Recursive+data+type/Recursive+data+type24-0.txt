Java (programming language):Â  Which data type is used to store values as large as [math]100![/math] ?
Large numbers such as [math]100![/math] can not be stored within the integer data type (or even long), because the value gets overflowed, and hence incorrect answers are obtained. Java and Python both are equipped with the tools which enable one to calculate and store values of such magnitude (in case you are wondering, [math]100![/math] contains well over [math]150[/math] digits). And since we are talking about Java here, the tool in question is the BigInteger. And here is the approach which can be used to calculate the factorial under consideration, using recursion: import java.math.BigInteger;public class FactorialBigIntegerApproach {	public static void main(String[] args) {		BigInteger large_factorial = factorial(BigInteger.valueOf(100L));		System.out.println(large_factorial);	}	private static BigInteger factorial(BigInteger number)	{		if(number.equals(BigInteger.ONE))			return BigInteger.ONE;				return number.multiply(factorial(number.subtract(BigInteger.ONE)));	}} Output: 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000 And this is not the only thing that BigInteger can do with freakishly large numbers. I suggest you look into some other practical examples employing BI. Hope this helped. </EOA67> 