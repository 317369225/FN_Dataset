Are there any useful recursive functions that do not contain a base case?
If your recursive function has no base case, it will never stop. If that's the desired result, then maybe? I'm sure you can come up with arbitrary situations where this would be useful, like generating branches of a tree or list infinitely based on a recursive rule (ie. fibonacci, even though this can be done much better iteratively). One large reason behind why recursion without a base case isn't very useful in real life is because the structure of recursion demands that a new function is called each time it repeats, which builds up your system stack. A recursive function without a base case will therefore eventually eat up all your system memory, especially if at each step it stores some kind of data to append to the return value of the next recursive call. 