Is it regular to learn Graph algorithms before DP?
I agree with Melissa Dalis's answer, but would go further. They are fundamentally different things. Graph algorithms are algorithms about a particular data structure. DP (Dynamic Programming) is not about any data structure at all (despite the way it is often taught, which is in terms of a table); rather, it is a principle about avoiding recomputation in pure functions by trading off space for time. When you see it that way, you realize they truly are orthogonal. But I would also like this chance to kvetch about a pet peeve, which is that DP is mis-taught in general. DP is typically a bottom-up re-expression of what is fundamentally a top-down computation. Oftentimes, the top-down computation is more natural and primary. And you can indeed obtain a similar space-time tradeoff by using memoization, which has the further virtue of being a mostly black-box optimization you can apply to a computation. It's a real shame that most CS books and courses virtually never discuss this. I will put in a shameless plug for my text, PAPL, which describes memoization and dynamic programming, and their relationship, in the chapter on state (11 State and Change). 