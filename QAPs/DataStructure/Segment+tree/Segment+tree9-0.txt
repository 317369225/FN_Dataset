What are the ways to implement Segment Trees With Lazy Propogation?
This is the code for a similar problem with some comments to explain. Problem-  Sphere Online Judge (SPOJ) Code-  Online C++ Compiler & Debugging Tool To implement this question using segment tree, you have to make a tree and at every node you need to save 2 things- number of 1's in the node ( tree array) and whether this node has to be updated ( fact array, f[p]=1 means this node has to be updated). During update operation, when we are going down in the tree, if the current node is completely within the range to be updated, we swap the numbers of 1's and number of 0's in the node without going to the nodes below it. To keep track that we still have to update the value of the children, we mark both the children of the current node in the FACT array. Another thing to remember is that, whenever you go down in the tree during update or query function, the FACT value should be 0 for all nodes in the path from the node you are on to the root node. i.e. when you traverse down the tree, you have to update all nodes with fact value 1, and lazily propogate the value to the children of the node. So for n=4, the tree will initially be like-                                 (t,f)                                 0,0                                (1-4)                 0,0                            0,0                (1-2)                          (3-4)       0,0               0,0            0,0             0,0      (1-1)             (2,2)          (3,3)           (4,4) After an update query in the range (2-4), the tree will be                                 3,0                                (1-4)                 1,0                            2,0                (1-2)                          (3-4)       0,0               1,0            0,1             0,1      (1-1)             (2,2)          (3,3)           (4,4) To update from (2-4), it goes to the left from the root node and updates at (2,2) which is the leaf node. Next it goes to the right from the root node. This time,   (3-4) is completely within (2-4) so it updates here and sets the fact value of the 2 children without updating there. Further updates- Range (1-4)                                 1,0                                (1-4)                 1,1                            2,1                (1-2)                          (3-4)       0,0               1,0            0,1             0,1      (1-1)             (2,2)          (3,3)           (4,4) Range (4-4)                                 2,0                                (1-4)                 1,0                            1,0                (1-2)                          (3-4)       0,1               1,1            0,0             1,0      (1-1)             (2,2)          (3,3)           (4,4) Some other links for segment tree- Eureka!!: Segment Tree Let us code data mapping and lazy propagation in segment tree 