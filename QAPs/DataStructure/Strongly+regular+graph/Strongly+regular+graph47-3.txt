How can I get a job at Facebook or Google in 6 months?
Probably the most useful thing might be to study algorithms. Not to memorize them, except possibly a few most common ones, but to read them through and make sure you understand them. Go and read about major data structures, and understand when each one is appropriate. Go and implement a few, like a linked list, a heap, a hash table, a binary tree. If you have studied Computer Science, you might have done all of this before. If so, try to do it again anyway and see if you can, without looking stuff up. Try to come up with some combination data structure. For example, can you come up with something that can do O(1) erase like linked list, but also have random access like an array? Why or why not? And then go and try solving small problems. You can use an algorithms textbook to supply with some, you can search for others online. Each problem shouldn't take more than half an hour solve. If you can do well on those, you are basically ready for a large part of a Google interview. To prepare for the rest, just write code, learn to debug it, get other people to read it and tell you whether they understand it and what you got wrong. Contribute to open source projects, if you like. They aren't shy about telling you why your code sucks, usually. Learn about common types of errors, and make sure you don't make those by explicitly checking afterwards. For example, always check corner cases. You should have one programming language thatÂ  you are super-comfortable in and know inside out. If someone asks you about some feature of this language, you should know what it is, what it's for, and when you shouldn't use it. Don't expect to be asked about this, but actually apply the knowledge when you code. There are books like Effective C++ or equivalent for your language that can be very good. Ask experts for your favorite language for recommendations. 