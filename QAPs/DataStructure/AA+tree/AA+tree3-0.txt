What are five problems every programmer should be able to answer?
I would give few mathematical problems like those : (You can dismiss the one which seems the hardest to you) They don't have to succeed at them, but they have to be able to find their way out and explain in a legible way. If the problem is incomplete, the candidate has to explain what is missing and why the information is useful. These problems are ridiculously easy but most people will fail because they don't have the scientific mindset. They are peculiar in the way that you can take the easy approach or start filling pages. 1 hour is more than enough and it can be done "open book". The only prerequisite is basic arithmetic, area of a triangle and Pythagoras theorem. This test is actually a very good predictor of success because it requires the intrinsic characteristicsÂ  that a developer should meet: Problem comprehension : "what has to be done ?"; Data relevance : "What is relevant ?"; Simplicity and "clairvoyance" : "What is the path of least effort and best comprehension ?"; Persistence : "Let do it again..."; Deduction, inference, logic : "And what if ?". To give you a point of reference anyone who completed primary school has the tools to do them! (11 years old) Questions A and C relates to problem breakdown. Questions B and F relates to relational databases. Question D and E relates to feature determination. Bonus: you can see the reaction of the candidate to a test which doesn't seem to be related to the field. Bonus': you can ask how each question relates to computing in general. 