What is the threshold of queue size at which a Fibonacci Heap becomes a good priority queue?
Despite their elegance in theory, I haven't yet found any situation where Fibonacci heaps help in practice.  If anyone else has, please provide details as I'd love to see such an application. In terms of theoretical running time, Fibonacci heaps only help if you do many decrease-key operations.  If you are just using standard priority queue operations like insert and remove-min, it doesn't make any sense to go with a Fibonacci heap.  Perhaps the most common situation involving many decrease-key operations is Dijkstra's shortest path algorithm on an n-node, m-edge graph, which runs in O(m... (more)