Why does CLRS favor red-black trees over AVL trees?Specifically, what instructional value is there in making this quite complex topic the basic material on balanced trees?For instructional purposes, I would prefer doing top-down red-black trees. Red-black trees were invented as a way to represent a 2-3-4 tree using binary trees. If you first see 2-3-4 trees, top-down red-black trees are intuitive, natural, and relatively easy to understand. Instead, CLRS takes a set of rules as if they were drawn from thin air (the rules are a translation of the rules for a 2-3-4 tree into their red-black equivalent) and then maintains these rules in a bottom-up manner. The bottom-up implementation is rather unintuitive even if you are familiar with 2-3-4 trees. The end result is that the CLRS presentation of red-black trees becomes an ugly complicated mess (the code is practical though) when it doesn't have to be. 