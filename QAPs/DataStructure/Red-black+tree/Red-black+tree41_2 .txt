Are there any particular reasons why a powerful language like C++ a) doesn't have a split() function (in any STLs, not like Boost etc.) b) has an implementation of std:map, closest approach to hashtable, under the hood implemented with a red-black tree?I don't know why C++ doesn't have much support for string operations like split, but I can tell you one good reason why std::map is implemented with a red-black tree. Using a red-black tree (or any binary search tree) rather than a hash table allows you to take advantage of the ordering of your stored data. This allows std::map to implement functions like std::lower_bound which binary search down the tree to find the first element greater than or equal to a given element. You cannot do such things with a hash table without searching the entire table. And, as Vivek's answer points out, there is, in fact, an implementation of a hash table in std::unordered_map, which you can use if you want the speed of hash tables but don't need to take advantage of ordering. 