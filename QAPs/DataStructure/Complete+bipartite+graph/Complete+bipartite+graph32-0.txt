What is the significance of universal traversal sequences?
In computational complexity theory, SL (Symmetric Logspace or Sym-L) is the complexity class of problems log-space reducible to USTCON (undirected s-t connectivity), which is the problem of determining whether there exists a path between two vertices in an undirected graph, otherwise described as the problem of determining whether two vertices are in the same connected component. This problem is also called the undirected reachability problem. It does not matter whether many-one reducibility or Turing reducibility is used. Although originally described in terms of symmetric Turing machines, that equivalent formulation is very complex, and the reducibility definition is what is used in practice. USTCON is a special case of STCON (directed reachability), the problem of determining whether a directed path between two vertices in a directed graph exists, which is complete for NL. Because USTCON is SL-complete, most advances that impact USTCON have also impacted SL. Thus they are connected, and discussed together. In October 2004 Omer Reingold showed that SL = L. Origin SL was first defined in 1982 by Lewis and Papadimitriou,[1] who were looking for a class in which to place USTCON, which until this time could, at best, be placed only in NL, despite seeming not to require nondeterminism. They defined the symmetric Turing machine, used it to define SL, showed that USTCON was complete for SL, and proved that where L is the more well-known class of problems solvable by an ordinary deterministic Turing machine in logarithmic space, and NL is the class of problems solvable by nondeterministic Turing machines in logarithmic space. The result of Reingold, discussed later, shows that in fact, when limited to log space, the symmetric Turing machine is equivalent in power to the deterministic Turing machine. Complete problems By definition, USTCON is complete for SL (all problems in SL reduce to it, including itself). Many more interesting complete problems were found, most by reducing directly or indirectly from USTCON, and a compendium of them was made by Ã€lvarez and Greenlaw.[2] Many of the problems are graph theory problems. Some of the simplest and most important SL-complete problems they describe include: USTCON Simulation of symmetric Turing machines: does an STM accept a given input in a certain space, given in unary? Vertex-disjoint paths: are there k paths between two vertices, sharing vertices only at the endpoints? (a generalization of USTCON, equivalent to asking whether a graph is k-edge-connected) Is a given graph a bipartite graph, or equivalently, does it have a graph coloring using 2 colors? Do two undirected graphs have the same number of connected components? Does a graph have an even number of connected components? Given a graph, is there a cycle containing a given edge? Do the spanning forests of two graphs have the same number of edges? Given a graph where all its edges have distinct weights, is a given edge in the minimum weight spanning forest? Exclusive or 2-satisfiability: given a formula requiring that xi xor xj hold for a number of pairs of variables (xi,xj), is there an assignment to the variables that makes it true? The complements of all these problems are in SL as well, since, as we will see, SL is closed under complement. From the fact that L = SL, it follows that many more problems are SL-complete with respect to log-space reductions: every problem in L or in SL is SL-complete; moreover, even if the reductions are in some smaller class than L, L-completeness is equivalent to SL-completeness. In this sense this class has become somewhat trivial. Important results There are well-known classical algorithms such as depth-first search and breadth-first search which solve USTCON in linear time and space. Their existence, shown long before SL was defined, proves that SL is contained in P. 