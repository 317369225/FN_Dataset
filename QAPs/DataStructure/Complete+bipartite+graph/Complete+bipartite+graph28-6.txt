What is the best strategy to improve my skills in competitive programming in 2-3 months?My knowledge is structure programming  in C++ I solved around 50 problems all of them are basic problems Samuel.Soliman - A2 Online Judge
Originally Answered: I have started competitive programming few months ago, usually solve 3-4 in long and 1-2 in the short contest . Now I am serious about it . what should be my strategy and the things that I should learn?I have just one year experience but that's greater than yours "few months" :-). Any way jokes apart, I am telling you my strategy, hope you like it. This is going to be a little long, but keep patience. (Considering you are acquainted with topcoder, codeforces, codechef and spoj) 1> First of all practice level A and level B questions on codeforces such that you have written at-least 10000 lines of codes. (May take 4-6 months) -- Benefit: You will get a varied taste of coding, by this I mean, even if you are not able to solve standard algorithmic based problems, you will come know what you need to learn and what's the depth of competitive coding. Because unless you come to know what to study, how can you study them? 2> Then you jump to topcoder algorithm tutorials, study them, no need to go in depth, reach up to intermediate level only.Solve the related problems posted there. Topics to be studied there depends on your interest and your knowledge earned so far. ( Time taken depends on your interest) --Benefit: You will come to know standard algorithms, will begin to reduce the problems to simple algorithms and will solve it effectively. Once you go through the tutorial, you will be introduced to even more depths of coding. Good for you. 3> After practicing the sample problems on topcoder in tutorial ( No, you shouldn't participate in SRMs there nor solve any more problems, you are not ready yet), jump to spoj. The best one to learn and practice algorithms. Practice there at-least 300 problems before participating in SRMs at topcoder (Practicing 300 problems will give you enough fuel to turn blue or yellow there in SRM, and that also too soon, however if you are interested in steady progress you may participate there.) (May take at-least 8-10 months). -- Benefit: Enough of practice on spoj will enable you to think solutions of moderately difficult problems in minutes, a prerequisite to turn blue or yellow as soon as possible. And my friend, you will really feel great after solving 300 problems on spoj. Just keep in mind, you solve them by decreasing order of users who solved them. Don't jump to new questions in greed for points, you will regret. 4> Now, guessing you might have yet not participated in topcoder SRMs,  begin to increase your accuracy level and speed by participating in short contests at codeforces (once you are satisfied with your performance jump to SRMs of topcoder.) (Turning blue or yellow might take 6-8 months) --Benefit: Congrats, now you are one experienced programmer and can qualify for ACM ICPC regionals with more practice. Turning red will be a great achievement. MOST IMPORTANT OF ALL-"KEEP YOUR THIRST AND ADDICTION ALIVE" Coming to me, I have just completed point 2 and have solved nearly 100 problems on spoj. But I will stick to my strategy. As expected you shouldn't strictly follow my strategy, but build that of yours, similar to mine and others. Below are the links that might help you. And yes keep participating in long contests at codechef at any interval of preparation. It will sharpen your skills and teach you what you still lack.Keep yourself happy, try to avoid frustration of WA, TLE etc on problems, and listen musical songs  :-). How did Anudeep Nekkanti become so good at competitive programming? What was Anudeep Nekkanti's Competitive Programming strategy to become 35th in Global ranking, in just 6-7 months? 