I was asked to solve a well known NP-complete problem in an interview. Should I refuse to solve it?
No, sometimes problems are solvable in an interview even though they're NP-complete.  For instance, the knapsack problem is NP-complete, but it has a dynamic programming solution that runs in O(nW) time, where n is the number of items, and W is the carrying capacity of the knapsack. The reason this doesn't count as polynomial time is that the argument W takes log W bits to represent, and time complexities are measured relative to the number of bits in the input, not its numeric value.  But for many applications, "pseudopolynomial time" is good enough, and you should definitely be able to code up the dynamic programming solution in an interview. 