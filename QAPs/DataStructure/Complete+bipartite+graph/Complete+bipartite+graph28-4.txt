What is the best strategy to improve my skills in competitive programming in 2-3 months?My knowledge is structure programming  in C++ I solved around 50 problems all of them are basic problems Samuel.Soliman - A2 Online Judge
Originally Answered: How do I start Competitive Coding?Thanks for the A2A.. Having basic knowledge of Data Structures and Algorithms is great but the actual test is in actually implementing them and using them to solve various real life problems available on various online coding platforms. First of all you need to know of the various coding platforms that are out there: 1)  Programming Competition,Programming Contest,Online Computer Programming. One of the best sites to practice coding on is Code Chef. It holds three challenges monthly    Long Challenge which is a 10 day long challenge mostly comprising of 10 questions. Short Challenge which is a 2.5 hour contest and it is mainly focused upon your speed plus your accuracy. The Lunch Time which is mainly focused on school kids ( a great initiative by Code Chef ) and it is an IOI style contest.2) Codeforces is a Russian website dedicated to competitive programming.  Codeforces provides to all users following main services: participation in the short (2-hours) contests, so-called "Codeforces Rounds", held about once a week; ability to solve problems from previous contests for training purposes; "polygon" for creating and testing problems; kind of social-networking by using of internal public blogs.3) Page on topcoder.com .TopCoder is a company which administers contests in competitive programming. TopCoder hosts fortnightly online competitive programming competitions—known as SRMs or "single round matches"—as well as weekly competitions in design and development. The work in design and development produces useful software which is licensed for profit by TopCoder. Competitors involved in the creation of these components are paid royalties based on these sales.    This is probably the oldest one out there and has an amazing set of problems section from past contests. The top coder arena and the way the problem has to be coded are a little bit different from the conventional sites. Then there are others like Sphere Online Judge (SPOJ) HackerEarth | We help developers find great jobs HackerRank, etc etc HackerEarth also hosts various Hiring challenges for graduates as well as professionals. So the point is that the competitions will keep you occupied the entire time. It is upto your motivation and dedication as to how much you can solve !!! Now coming to the part where you probably are thinking " How the hell should I start off with all this ? " There is nothing new that I would be able to tell you. So I would rather quote what Anudeep Nekkanti has to say : If I am to start programming now, I would do it this way Solve 200 most solved problems on SPOJ, Problem by problem. In 2 months. (This will teach all standard problems, algorithms and implementation skills) Solve problems from CodeChef and CodeForces for 2 months. (This will teach variations, we can read others solutions and learn better ways. Skip easy problems) Solve problems from TopCoder for 2 months. (This will teach  Dynamic Programming. Div 1 500p) Check past ACM ICPC Regional's Problems (Great quality problems) If I am to learn a new Algorithm now, I would do it this way Read it from at least 3-4 different sources. Understand correctness proof and run-time analysis. (This is very very important, you will know it only when you  deal with non standard  and hard problems) Question yourself on every step for correctness. Try to tweak the implementation. Check other implementations You need to refer to external links, tutorials, books, research papers, etc. on various topics like for Data Structures and Algorithms you need to study Greedy Approaches, Divide and Conquer, Constructive/Iterative Algorithms, Graphs, Trees and other Data Structures... and some of the tough ones like, Ropes, Segmentation Trees, etc. which you will eventually learn after much of your efforts..... apart from this you need to build your mathematical basics to the best, to utilize your capabilities, including series(Fibonacci, Catalan, AP, GP, HP etc.), formulas, Probability, Permutation, Combination etc.... Sometimes there is a requirement some other subjects(like Physics) but most of relevant information is provided in the question itself.... And for your purpose of being a "Good Programmer".... don't ever try to copy codes.... even if you are looking some editorial or research papers... try to study the logic and then write the code yourself.... Try to study the codes of other coders... if you cant understand them... just try to print the intermediate results to understand the logic behind each line.... One thing which may effect you during the competitive programming is cheating... to overcome this you can take a print out of the relevant resources and try to solve things by hand.... for more purposes use discussion forums to solve your problems, there are so many awesome coder and top performers which are thirsty of solving your doubts :P .... As far as resources are concerned, some of the best ones that I have found so far are Data Structures and Algorithms MAXimal :: algo What are the "must known" algorithms for online programming contests? So finally putting an end to this if ( BORING(article.txt) == TRUE)       cout<<"Boring"; else      cout <<"Interesting :p"; article, I would say that you and Adios !!! 