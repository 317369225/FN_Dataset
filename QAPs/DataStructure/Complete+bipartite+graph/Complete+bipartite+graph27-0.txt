What is the significance of Valiant's theorem?
Valiant's Theorem states that computing the permanent of a matrix is #P-Hard [1]. The paper introducing the theorem [2] also introduced #P as a new computational complexity class. The new class is useful in distinguishing problems for which finding a solution is easy i.e. can be done in polynomial time but counting the total number of solutions is hard i.e. cannot be done in polynomial time. Several problems are known to be #P-Hard. Valiant's paper establishes computation of the permanent as one such problem, which is also equivalent to the problem of counting the number of perfect matchings in a bipartite graph (getting one perfect matching can be done using the Hopcroft-Karp algorithm). The first time I saw #P was in Koller and Friedman's textbook Probabilistic Graphical Models. The concept came in naturally and was used many times to describe different inference and learning problems in PGM. A decision problem asks about the existence of a solution to a computational problem and is answered by providing a solution or saying that none exists. A counting problem on the other hand asks about the number of solutions for a computational problem. Obviously, the counting problem is at least as hard as the decision problem. When the decision problem itself is hard while a verification of the solution is easy, the problem is in NP. When a solution to the decision problem is easy to find but counting all such solutions is hard, the counting problem is in #P while the decision problem is in P - two vastly different complexity classes. If the decision problem is NP-Hard, the counting problem is at least #P-Hard. The converse is not true. [1] Valiant's Theorem on Wikipedia: Permanent is sharp-P-complete [2] Leslie Valiant. The complexity of computing the Permanent. 