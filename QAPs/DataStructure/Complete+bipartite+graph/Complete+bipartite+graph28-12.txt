What is the best strategy to improve my skills in competitive programming in 2-3 months?My knowledge is structure programmingÂ  in C++ I solved around 50 problems all of them are basic problems Samuel.Soliman - A2 Online Judge
When we are talking about beginners, I would suggest that best idea is to practice a lot on relatively easy problems (of course, lot of them will be still very challenging for you at the beginning) in training mode - something like old div2 CF rounds and TC SRMs fits well here; if you are at the very beginning, maybe you need even easier tasks - there are lot of easy contests at sites like Hackerearth and Codechef, but most of them don't have good editorials. And good editorials is key part here. Even if you know a solution for a task - look at solutions of other contestants and also at editorial. If you are beginner, it often happens that your solution is ugly or overcomplicated. Also it may happen that you actually don't understand why your solution works. Most of easy problems are standard and well-known; if you will ask top contestant how to solve particular task - probably he'll give you an idea in few seconds, and that is not only because that person is skilled enough, but also because in most cases he already saw same or similar task before. At the beginning you should try to grasp as much tricks/ideas/solutions as possible; even when you solved some task in just 10-15 minutes - read about other possible solutions, look at fastest solution, look at shortest solution, look at few failed solutions to get an idea about possible mistakes/errors; maybe it's not the way to train your creativity, but most of standard tasks don't need creativity anyway. And also you will build a good foundation at which your future improvement will be based. You need to know basic routines, because lot of harder tasks can be decomposed into combination of few easier problems. If some day later you will face situation like I got it, this problem have an easy transformation to covering bipartite graph with cycles... Wait... I don't know how to found this covering... - you know, it will be a sad story. If you are smart and creative, have a good overall skill - maybe it will take a little time to figure out the idea by yourself, but anyway some guy with oh, I saw this problem at training two months ago will make it even faster. You can solve problems in problemset one by one, but virtual contests/trainings looks like a better idea for me. Competitive experience is always helpful, and also it is easier to completely focus on work during a contest - you see a timer which says that you have to try until the contest ends (or until you solved everything, and sometimes it is even better motivation), and while solving archive at OJ most people can easily distract on reading news or watching cute youtube videos, thinking I'll take some rest and finish this problem a bit later, no need to hurry. This leads to low productivity - sometimes you think that you trained all evening, but actually you wrote only few lines of code, and spend few hours on chatting, reading news, watching videos, doing some urgent stuff. 