Where are some practical uses of data structures such as stack, queue, linked list, tree(s) etc.?
Stack: In operating systems stack is to stored memory locations when a function is called, when a function calls an another one the OS pushes the return address on the top, when the current routine returns it pops the memory location and the control jumps there. Think how recursive functions can be replaced with a stack? Queue: While we work with a computer, several processes runs behind, each process wants to get some CPU time. Some process needs a lot of time, some need a very little time, some processes needs to processed very urgently. What OS does is to put them in a queue. There are different CPU allocation methods such as batch, time shared etc. In most cases priority queues are used. Linked List: Think about an selection sort algorithm, each time we find the element which needs to be put in the correct position we need to shift the entire elements by one position if we use an array. That could take a lot of time, instead if we use a linked list, all we need to update is 3 links. Tree: Trees have a wide variety of applications, for example a binary tree is used in applications were a lot of searching needs to be done. This is a very simple example. Heap sort, which has minimal space complexity is implemented using a Tree. Applications range from systems programming to social networking websites. 