How can I avoid an STL data structures' memory overhead in C++?
FYI I have decided to use Adaptive Radix Tree in order to share common prefixes of strings and it helped a lot to memory consumption with natural files. But of course files with high entropy(uuid etc.), it consumes a lot of memory to handle internal nodes. http://www3.informatik.tu-muench... And to store row indexes, I have allocated a single vector under ART. So that each leaf node contains a number, indicating a row index. To access other indexes of this string, all you need to follow that number on underlying vector up until you reach end identifier. This same technique can be used with map to handle row indexes. 