Does there exist a worst case O(log n) algorithm that can convert any binary search tree into an AVL tree?I was wondering if there is an efficient algorithm, somewhat like heapify, that could convert an unbalanced BST into an AVL tree.No, it's not possible. Imagine the binary search tree is a single long path of nodes: the root is , its right child is , that node's right child is , etc. Then asymptotically, the root of the AVL tree should be close to the node labelled , but you have to follow nodes to get there. 