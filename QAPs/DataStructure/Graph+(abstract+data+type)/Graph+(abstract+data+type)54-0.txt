Which is better for quantitative finance, R or Matlab?Which do you prefer for what? Or just general pros and cons.
I love R. I loved R so much  - and it fit my use requirements so well -  that Matlab just never really appealed. So I cannot comment directly on why R might be better or worse as I've never had the misfortune of bashing my head against a wall in Matlab -- just the lightly padded surfaces of R. At the highest level, if you want to do quant finance work, it is very, very hard to go past R. The developer community is fantastic and helpful and there are some really exciting packages being produced at the moment. There is also a great data analytics community as a whole and lots of fun stuff to bash around with on EC2 and MapReduce with low setup overhead. There is also lots of excellent cross-pollination from other fields (thanks Carl Boettiger and Hadley Wickham!) On the downside, unless you know how to work more or less exclusively in vectorized functions or make use of packages developed on a C++ base (like xts) vs R (zoo), R will run comparatively slowly to C++....especially in loops. It's also not an ideal environment for live monitoring or trading (get your C++ on for that -- or VBA or Python if you're less initiated and have a good broker API to play with. Haskell /Erlang / OCaml if you're HFT-inclined) Matlab (and Mathematica) are designed as general purpose computational behemoths  and can do some things (like certain types of simulations) much more efficiently than R does. But then they've been designed for very different use cases. I use Mathematica in a supplementary fashion to R (sorry, Stephen) because I'm not real bright so I like the ease of use of Symbolic computation over having to do any kind of hard work. Some of Mathematica's abstract tools are more powerful, but they're just harder to access. For example, the length of input you have to write in a Mathematica function to get, say, some kind of moderately interesting graph (lines and lines) just doesn't compete with R (single line usually). I must make a shout-out to the doyens of the R / Finance community -- folk like Patrick Burns, Joshua Ulrich, Brian Peterson, Peter Carl, Paul Teetor, Dirk Eddelbuetel, Kris Boudt, Eric Zivot et al. Without them, R in Finance would be a far cry from what it is today. Thanks to Patrick Burns, R also has a pretty nice sense of humor (and useful random portfolios!). Oh and - lest we forget - R is free. And this amazing range of packages and functions are also free. 