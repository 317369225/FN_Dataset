What does one mean by 'elegant' code?I have heard some programmers, especially those who are fond of functional programming, state that it is easier to write 'elegant' code in Haskell than in Python or Java. What do they exactly mean when they tell that? Examples would help me a lot because I am relatively a newbie to the world of functional programming.
While dictionaries typically suck for explaining idea well, this time Oxford dictionary hit the gold I think:   elegant: clever but simple   IOW, it's about economics: it does a lot, but cuts down on complexity as much as possible.   As they say, perfection is achieved when there is nothing to remove, not when there's nothing to add. Labor of love is typically about expending a lot of effort and thought to remove what's unnecessary, but provide what works in every possible context:   The test of the machine is the satisfaction it gives you. There isn't any other test. If the machine produces tranquility it's right. If it disturbs you it's wrong until either the machine or your mind is changed.   Tranquility in code I think is about this: it works quietly, without hiccups and wheezing, while at the same time being simple and "knowing" what it's doing on every conceivable input data set. 