Job Interview Questions: Which are the frequently asked interview questions for Java Engineers ?
I've been personally looking for some Java developers but because we use Java in a very special way - some say we do C/assembly in Java - my questions usually revolve around performance and knowing the behaviour of certain java object implementations (or external libraries) and just assume the developer knows or easily (re-)learns common concepts like OOP or common java patterns or even, like an example in other answer, if the developer knows the importance of implementing equals/hashcode/toString. Some of my questions are as simple as: - if I need a map that may be concurrent or not, what should I use (ConcurrentHashMap is always the right answer, as even without concurrency, it's almost as fast as the HashMap) - how can I solve xyz concurrency problem without using any locks - we aim at performance even if it causes small calculation errors, so any kind of lock or synchronised is strictly forbidden, and with this I can assess the knowledge about when to use an AtomicInt/etc or even just a volatile int and live with some error - NIO. MMAP. "If I need to read a file/socket, split lines, and do something with them, without the need to be strings", to see if they go BufferedReader + readLine or NIO FileChannel with their own line splitter or, in case of a file, MMAP and direct ByteBuffer. - a tricky question - "is throwing an exception slow" - to see if they know that nowadays a try/catch is not that expensive, and an exception is only expensive due to calculating the stack trace, so if the exception is thrown from a simple thread with a small stack trace, or if a pre-created exception is thrown, it's still a good way to signal exceptional cases, without the need to abuse the return code. In other words, if they understand the expected cases (success, error) vs. the unexpected cases (disk full, network fail, etc.) 