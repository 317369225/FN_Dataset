Is recursion actually useful? I can't find any reason to use it. Why do some people love to use it?
You haven't done functional programming so far, right? What's great about recursion is, it is very testable and maintainable. You always have a null case and a  non-null case which will end in the null case. So it is very easy to set it up. And you create very redable code with it. I would like to show you an example for Fibonacci in Elixir: defmodule Fibonacci do def fib(0) do: 1 def fib(1) do: 1 def fib(n) when n > 1 do fib(n-2) + fib(n-1) end end Nice code, isn't it? Very easy to understand. Okay, here you have two null cases (fib(0) and fib(1)), but the code looks very clean, maintainable and it is very easy to test it. Edit: Since Fibonacci is a very clear example since it is already defined recursively, I'd like to add a second example: Sum up all values to number n: defmodule Sum def sum_up(n) when n > 1 do _sum_up(0, n) end   defp _sum_up(k, 0) do: k defp _sum_up(k, n) do _sum_up(k + n, n - 1) end The recursion is in the defp _sum_up function: null case, n is 0, so k must be the result. Otherwise add the value of n to k and continue with n - one and k + n. you need two tests and everything is fine. no need for an iteration variable 