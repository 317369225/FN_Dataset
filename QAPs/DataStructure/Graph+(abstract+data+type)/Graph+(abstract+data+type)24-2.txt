Is using a graph database as opposed to a relational database better suited to mining information from Twitter API data extracted in XML/JSON format?How should I model the data in graph database? In relational data mode, I would just have to parse the XML/JSON data into different fields/columns. And what could I mine from using the graph database approach as opposed to relational data model ?
First, I think there's an earlier problem here that has nothing to do with the choice of data store type (graph v relational). It has more to do with what graph you're going to mine on twitter. There is clearly part of Twitter that is a graph (the follower network). The twitter API itself (AFAIK) does not give you the follower graph since that's what Twitter makes money on. The Twitter API or derivatives (GNIP/Datasift) are pipes of discrete tweet events. You can construct an 'implied' graph (eg. from mentions, replies, retweets) but that's a proxy for the true follower graph. Assuming you've sorted out the above, the answer to the above question is - it sort of doesnt matter if you're doing graph mining. A graph is an abstract data structure from a data modeling point of view - and can be equivalently represented as edge lists, adjacency matrices or adjacency-list representations. If the focus is graph mining (i.e analytics), then the data model used for persistence is somewhat moot - usually your graph mining tool will have an internal data structure you need to populate, and it doesnt actually care whether that came from an edge list in a relational database or an adjacency list in a true graph database or a pair of flat files containing a vertex and edge list respectively. See the GraphX representation in Spark for a good example of how to create analytic graphs from tables, which illustrates the above point. 