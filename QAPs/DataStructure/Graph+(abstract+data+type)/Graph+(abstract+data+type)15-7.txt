What are the differences between a Graph database and a Triple store ?
For one thing, triples are an actual human-readable text format. A graph db such as neo4j is essentially serializing a linked list to disk. If you wanted to back up your neo4j graph so that it was safe from electro-magnetic pulses you could convert to triples, print them to a scroll, bury it, and then load it back in to neo4j when civilization restores the power.   And then of course, not just humans. Most programming languages can parse strings but only java can read a java linked list from disk. Conceptually there are very few things (probably none, if talking about modeling "real things" and not math concepts) that one can model that the other can't. Blank nodes are just local, implementation-dependent identifiers, like the pointers in a linked list. Philosophically, neo4j wants to be fast and earn its license fee, RDF wants to integrate all information ever, for free, and usher in a Star Trek-esque era of enlightened human fulfillment. 