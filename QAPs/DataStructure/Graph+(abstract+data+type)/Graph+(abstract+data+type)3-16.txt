What are some things that programmers and computer scientists know, but most people don't?
Once upon a time I was a miserable and frustrated IT professional with the same relationship with my superiors as Elliot has with his boss in Mr. Robot (Though I had my writing on the side instead of an anarchist hacker group.) This question reminds me of a blog I wrote back then. In my defence, that was one of the most frustrating days of my career, and I just really wanted regular people to understand things from a programmer's point of view. Here's the blog: *********************************************************************** "10 Things that you feel when you're the only coder in the room" There was a time when there were illiterate people and a few who could read and write. The modern age equivalent of that is, people who know programming languages and people who don’t. Our lives are dependent on technology more than we like to admit. We also know that having a niche set of skills that people depend on, which cannot be replaced by a computer, is a dire need in this age. Being the only engineer in the room is not an easy job, why? 1. Asking non-technical people what they need Every engineer fears asking non-technical people what they actually need when it comes to the inception of projects, because it's never a straight up discussion about what their problem is or what solution are they looking for. They'll actually try to tell you how to do your job, and that is frustrating. Let me break this frustration down in non-technical terms. Almost everything people say in these meetings sounds like this: Basic requirement: I want a piece of paper with the letter ‘A’ printed on it Client Suggestion 1: No but our creative team thinks ‘B’ looks cute. Client Suggestion 2: The lawyers, CAs or other advisory teams suggest that the letter ‘C’ would be in our best interest. Then their boss will get up, reiterate everything, and he'll leverage years of experience to come to the conclusion that actually ‘D’ is the alphabet that they want you to type, because ‘Fuck the team and screw logic!’ 2. Then the MBA/Functional Consultant who came along with you starts interpreting facts This is exactly how it sounds like “I think what you really need is the letter ‘B’ or 'C' written as ‘A’ because screw the English language, who decided that something that sounds like ‘bee’ or ‘cee’ cannot be represented with the symbol ‘A’, there shouldn't be restrictions on how the symbol ‘A’ should be pronounced.” Controlling the urge to not murder is something that keeps the engineer silent until this moment. It is anyway better to wait out the whole chaotic thought process and to step in only when everyone is confused and helpless. 3.Then you remind them what they actually wanted This is when the engineer points out: “Actually what you want is the letter ‘A’ printed on a piece of paper. Let me just write that down for you so that we do not deviate from the initial requirement and unnecessarily complicate things". 4.This is when your boss steps in guns blazing Let’s not completely reject their suggestions, why can’t you just throw in the letters ‘B’ and ‘C’ using the symbol for ‘A’ itself? It's a win win for everyone. We might have to bill them for more amount of time but just type ‘AAA’ and they can pronounce these as they wish: A, B, C or even D. (Remember that pronunciation point the genius MBA brought up?) 5.The war between the bosses (Game of Thrones, office edition) The client somehow understood that they are being conned here. The mention of billing is something that jump-starts brain functionality for everyone in the room and they all start howling ‘A’, ‘B’, ‘C’ and ‘D’ at the top of their voices. The key is to zone out at this point and pretend like you are paying attention. 6.The superpowers of a coder It is not easy being the only person people think of as a wizard capable of bending the laws that govern the universe. The secret is, providing a solution that is just workable enough and makes everyone happy. It’s not the best solution, but let’s face it: One has to sometimes shoot logic in the face when they are ‘On Salary’ and the bosses are egomaniacs. So the engineer gets up and speaks the beautiful words to sheer brilliance that brings a smile to everyone. “I’ll write ‘A’ on one side of the paper, satisfying the basic requirement. I'll write ‘C’ on the flip side, for the lawyers, CAs and other advisory teams I'll put it inside an envelope that has a pretty ‘B’ on it, for the creative team." But to satisfy the boss there is a need to give an extremely complicated explanation as to how all these symbols can also be pronounced as ‘dee’. The key is to state that extremely complicated explanation in a manner that sounds so obvious that anyone who questions it might risk sounding like an idiot. 7. Sweet revenge for sucking the life out of you Well, everyone knows that when you are billed by the hour, your boss will consistently make you rework to get the right amount of billing hours, so the key is to chill and take your own sweet time because you have a brilliant solution that nobody actually understood and more than that they do not understand the process. So the quicker you serve it, the more they will nag you and the more number of alphabets will come in to cover those hours. All of this will only end with your beautiful and simple masterpiece turning into a matrix of bugs and errors. So every time someone asks you about progress, open up the most monstrous tools on the three screens connected to your desktop and start explaining everything in great detail, nothing scares a non-coder more than the creepy things that do not look as pretty as the constantly beeping black screen with green characters on them, like in sci-fi movies. 8. Cover your ass Like a great person once told me “To err is human but to blame it on someone else shows management potential”, so the most important task is to share just enough information that a non-coder can digest, too much information only stirs chaos and confusion. Also, always keep a few tricks up your sleeve so that no one take credit for your work or cut you out of the loop. If you have a few bargaining chips, then during crisis situations, you can be the savoir instead of the scapegoat. 9. Know what’s ‘Need to know’ If you have niche skills or you have become a subject matter expert at things that were shoved your way because nobody else wanted to touch them, do not give up the throne because you are bored of being the go to person in all similar situations. You are only as valuable to the employer as the number of things that they are dependent on you for and the day you give those up, you are as replaceable as anyone else during budget cuts.     10. Never argue on the relevance of business trips Mostly the business trips clients pay a butt load of money for are complete waste of resources. This is not your place to argue or educate anyone with more logical and economic ways of making things work. Think of it as a free vacation with an AMEX card that you can swipe without a care in the world, because you don’t have to pay the bill. Enjoy it while it lasts and don’t get stingy on the budget, it’s not your money! Stay at five star hotels that you cannot afford, enjoy the change of scenery and wine and dine like a boss. You earned it after the emotional trauma you've been through! *********************************************************************** Well, I'm glad that I finished my first manuscript, published it and got out. I was good at it, I enjoyed the challenges, it was everything else that I couldn't tolerate. 3.5 years in IT did feel like a decade, now when I look back at it, I feel like it turned me into a very angry, unsatisfied, frustrated and depressed person. I must admit, I went offtrack for a while (pun intended). Honestly I wouldn't be the person I am today if I didn't walk away to peruse my passion. Vineeta Tyagi Author of OFfTraCK OFfTraCk.pdf Updated 22 Aug • View Upvotes