What does one mean by 'elegant' code?I have heard some programmers, especially those who are fond of functional programming, state that it is easier to write 'elegant' code in Haskell than in Python or Java. What do they exactly mean when they tell that? Examples would help me a lot because I am relatively a newbie to the world of functional programming.
Elegance can be measured in degrees of how well one is able to eliminate everything unnecessary (concision) communicate the intent (clarity)Only when code unambiguously articulates its intent is it clear.  In turn, one must understand that dense code may not be reader friendly and that clever code may obfuscate intent. When we say concise we're interested in how many constructs a programmer uses to accomplish a task.  It's design.  The fewer parts the better.  Code aimed at the problem domain is more important than the syntax which holds it together.  Thus, well-written code moves expression away from syntax and toward the problem domain.  DSLs sprung from this very idea. Elegance is a beauty that emerges when clarity and concision -- two ideals that pull against each other -- are rightly balanced. Updated 17 Jun • View Upvotes