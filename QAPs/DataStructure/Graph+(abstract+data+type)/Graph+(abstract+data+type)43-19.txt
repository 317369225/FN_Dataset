Job Interview Questions: Which are the frequently asked interview questions for Java Engineers ?
Originally Answered: What are good interview questions for Java developers?I absolutely hate lists of standard interview questions, and that's because I've actually held interviews before. I think they're more fun for the interviewer than they are illuminating about any applicant. Instead of a checklist of random topics (or god forbid, quizzing people on the 'official' names of different Design Patterns), what you should really do is talk to them about what they do, but more importantly, about what you do. You should know, as an interviewer, exactly what tools and concepts that someone will need should you hire them. Take a problem that you or your team solved recently, and ask them how they would approach the issue. This way, you know can talk with the interviewee about all the roadblocks you encountered, as well as the cost/benefit analysis of different solutions. Talk to them about stuff they've worked on at home, ask them how they've solved certain problems at any previous jobs they might've had. If you start there, you can avoid really tedious questions about whether they know what "volatile" or "protected" or whatever means -- you can google that crap. Instead, you'll be able to pretty easily separate a bad developer from a good developer just based on how they approach the question. Even if they're having a bad interview day, or they just got nervous for no reason, approaching the interview like this lets them "talk shop" and puts them in a place where they should be confident if they are a good developer: talking about their work. Having interviewed a good number of people over the years, this process almost always leaves me with obvious choices of whom to hire. If I'm still on the fence about some of the better applicants, or if no one met my needs, and I want to take a chance on an applicant I'm not so sure about, I've found that giving them a problem and asking for a code sample to solve it ("offline", of course) will answer my questions, and is often just as valuable as the interview itself. Now, if you're a big name developer, this process is going to leave you with too many qualified applicants, just based on volume. But let's be honest, if you work for one of those guys, you don't really need to come to Quora for interview questions. No one likes tests, and if you come to the interview with the attitude of an oral examiner, you're not going to get very good results. 