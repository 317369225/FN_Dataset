Is recursion actually useful? I can't find any reason to use it. Why do some people love to use it?
I was surprised no-one had suggessted using recursion fornumerical base conversions yet so I cooked up a small example. This example will run as is on python 2.7.6. The number it is converting into hex is the 500th Fibonacci number, which results in the 87 character answer of "3E3FE615F5F0DAD9359C2B1E46FFA400471515E14B7801FD988DEA30773C33170414E4E1E2278B212C93D2D" That answer was checked personally using wolfram alpha. Heres the code: def dec_to_hex_Recursive(hexstr = "", decval = 0): if decval == 0: return hexstr else: least_sig_byte = decval % 16 next_dec_val = decval / 16 return dec_to_hex_Recursive("0123456789ABCDEF"[least_sig_byte] + hexstr, next_dec_val)     print(dec_to_hex_Recursive(decval = (139423224561697880139724382870407283950070256587697307264108962948325571622863290691557658876222521294125)))   