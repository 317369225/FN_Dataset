Where can I find the best description of the IoT architecture and development flow?(HW, Cloud and apps)
There is no abstract "IoT architecture" that is materially different from any other large-scale data aggregation and analysis architecture. However, IoT does have a characteristic data model and workload that is unique and which precludes the use of many popular tools when building out the architecture. The unique characteristics that make practical implementation different than abstractly similar types of large-scale data applications: Extremely high continuous data ingestion and storage.  Typical IoT data sources are literally thousands of times higher velocity and higher volume than social media or web data sources. This is because IoT is machine-generated data whereas web and social media is human-generated data. It is too big to fit in memory, so you need a distributed platform that can reliably process and store many gigabytes per second to disk. This precludes the use of platforms like MongoDB, PostgreSQL, etc or in-memory databases. Complex spatial data models and analytics, including spatial joins. Space and time are the primary organizational structure of IoT data. Many of these spatial data types are complex, like vectors and polygons, and the spatial analytics are frequently spatial join operations across these data sources. It is how a sensor measurements are aggregated and turned into a picture of what is happening in the real world. Platforms like Hadoop, Spark, etc support real spatial data models poorly at scale, so this precludes their usage in most IoT applications. Real-time operational queries and analytics. This is not "fast queries on stale data" or "fast storage for batch processing" but immediate queries against the live ingested and historical data with minimal latency. And the queries are against the aforementioned spatial data models. These analytics are not summarizations or simple event graphs, so it isn't a stream processing type model either. This is "real-time" in the sense of an OLTP database but without the complex transactions (and requiring much higher scale). The challenge of IoT architecture is not that it is materially different but finding components for the architecture that meet the above constraints simultaneously. Think millions of polygon inserts per second that need to be fully indexed simultaneous with ultra-fast spatial queries and polygon-on-polygon spatial joins on that index. Platforms that support spatial data models either have (1)  grossly inadequate insert performance, (2) grossly inadequate ability scale to large data sets, or (3) have abysmal query performance. And most data architecture components fail on at least two of these points. In other words, think of a conventional large-scale data architecture but with complex spatial data and extremely fast, extremely large data sources, at least compared to more traditional big data sources. 