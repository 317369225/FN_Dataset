Is recursion actually useful? I can't find any reason to use it. Why do some people love to use it?
Recursion is useful in any scenario where the operation can be defined in terms of itself. Some examples might seem contrived (how often, really, do you need to compute a factorial if you're not writing a program to evaluate poker odds?), but most of the "standard" sort methods implemented within various built-in libraries are heavily recursive (Microsoft's been a fan of QuickSort for decades, and Java used to use MergeSort before recently replacing it with TimSort which is based on MergeSort). Recursion doesn't have to be deep. There's a well-known and very commonly used trick in .NET desktop development to prevent "cross-threading"; attempting to access the GUI layer of the application from a thread other than the one handling the message pump. If the thread in which a function is running is not the "GUI thread" (there are easy ways to check; InvokeRequired for WinForms and Dispatcher.CheckAccess() for WPF), then have the method call itself through the message loop using either Control.Invoke or Dispatcher.Invoke (again depending on your paradigm). Some don't see this as recursion, but it definitely is; only the method of message passing between instances of the function is different. 