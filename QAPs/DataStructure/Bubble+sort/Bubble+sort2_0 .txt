Which is faster: quicksort or bubble-sort?Please give detailed explanations. I have been playing with them throughout the whole morning and I am not sure which one is faster.Not a bad question, actually. Quicksort (simplified): Choose partition element in array Ensure that only elements smaller than partition are on the left Recurse on left, right subarrays that contain lesser, greater elements respectively Bubblesort: For each element A in the array ----For each element B in the array --------If the smaller element of A and B isn't on the left, swap the two ----If there haven't been any swaps done on this run, we're done. So what are the worst-case run-times here? Quicksort: Bubblesort: Quicksort ends up being... just as slow? Not exactly. Remember that worst case is not always a good indicator of real world performance. In the average case, Quicksort: Bubblesort: So usually, this means that Quicksort will tend to be faster than Bubblesort. However, Quicksort handles degenerate cases poorly - when the list is in almost-sorted order already, Quicksort is going to keep recursing. Bubblesort will stop as soon as its done, thanks to condition (4), making Bubblesort faster in such cases. 