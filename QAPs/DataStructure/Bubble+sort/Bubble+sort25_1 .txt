How do I optimise bubble sort using insertion sort or vice versa?Yours is a strange question. Bubble sort is a simple sorting algorithm whose most attractive feature is that it has a catchy name. There are other simple sorting algorithms, such as insertion sort, that will outperform bubble sort while still not being optimal, not suitable for large N. In Knuth's volume 3, he does a detailed analysis of Bubble sort and of insertion sort. he concludes his subsection "Refinements of the bubble sort" with: In short, the bubble sort seems to have nothing to recommend it, except a catchy name and the fact that it leads to some interesting theoretical problems [in its analysis] I speculate that you're remembering the timsort algorithm Timsort. Timsort is a hybrid sorting algorithm, derived from merge sort and insertion sort, designed to perform well on many kinds of real-world data. It was invented by Tim Peters in 2002 for use in the Python programming language. The algorithm finds subsets of the data that are already ordered, and uses that knowledge to sort the remainder more efficiently. This is done by merging an identified subset, called a run, with existing runs until certain criteria are fulfilled. Timsort has been Python's standard sorting algorithm since version 2.3. It is used to sort arrays of non-primitive type in Java SE 7,[2] on the Android platform,[3] and in GNU Octave.[4] 