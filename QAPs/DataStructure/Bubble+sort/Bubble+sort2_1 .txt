Which is faster: quicksort or bubble-sort?Please give detailed explanations. I have been playing with them throughout the whole morning and I am not sure which one is faster.To add to Vaibhav Mallya's answer: bubble sort is actually faster for very small data sets (say, 10 elements - maybe even for 100 elements, depending on the platform). That's because it needs very little extra operations, has little overhead. In fact, it's typical for recursive sorting algorithems to switch to a simpler sort like bubble sort once the set has become small enough - e.g. a library implementation of quicksort (or merge sort, or whatever) would not recurse down to the case of sorting 2 elements, but only down to sorting 10 or so elements - and then use a simpler algorithm for the small set. This can be faster overall, since recursive algorithms, for all their elegance, can perform badly on small data sets. Oh: and bubble sort is also pretty good for data sets that are already almost sorted. See Sorting Algorithm Animations for a great visualization of different sorting algorithems applied to different kinds of data. Edit: Very interesting discussion: What’s really so bad about bubble sort? There's discussion of the performance impact of things like cache locality and branch prediction, some insight into applications for partial/incremental sorting, and more. Fascinating stuff!   