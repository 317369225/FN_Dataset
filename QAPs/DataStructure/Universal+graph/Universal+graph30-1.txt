What is the best way to represent a Graph in Java?
The choice of an adjacency list depends on the density of the graph and the operations you want to perform on it. If you do want to use an adjacency list, there are multiple ways you can represent it. One way is to have a HashSet of vertices, where each vertex object has a LinkedList of edges. Each edge object contains the edge weight and the destination vertex. If you want to run an algorithm like Dijkstra's efficiently, you would need additional memory in the form of a min-heap of vertices. Check this out: Dijkstra's shortest path algorithm in Java It's a little different from my description, but there's code you can look at to get an idea of how you want to structure the graph. 