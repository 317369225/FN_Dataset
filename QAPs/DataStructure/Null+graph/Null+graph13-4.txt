Which Relational/NoSQL approach is best suited for storing trees, with real-time aggregation from child nodes to parent nodes?
One way is to just have N (depth of hierarchy) writes per leaf node increment/decrement.Twitter's Rainbird (http://www.slideshare.net/kevinw...) does essentially this, and I know other people have done conceptually similar things. Depending on time zones and number of registers, 100k stores would still be a relatively manageable qps. Assuming a stable hierarchy, it's just a question of specing a DB (with cassandra or hbase likely being the leading open source candidates) for the resulting write load. By no means trivial for the write load you're talking about, but far from rocket surgery. 