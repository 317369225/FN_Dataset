I don't care for Java. If you like Java, why do you like it?
I'd like to speak about why I like Java (or other JVM variants like scala) Type safety: This is what I like to call a necessary evil, in Python or Ruby because of the lack of type safety it's hard to know at any given point the type of a variable. This is a harder problem when you have more than 2 people working on the same code-base. This obviously doesn't include issues from null pointer problems, but Scala mitigates that with it's Option pattern. I believe in one of the google libraries a similar pattern is exposed. I think the verbosity of type safety is also reduced by  scala's type-inference. Concurrency: Java's concurrency is significantly better than Ruby's or Python because they have GILs which make multi-threaded concurrent operations less efficient than they should be. Garbage-collection: No need to manually manage memory like in C++ or run into memory leaks because of cyclic references. Java traverses the entire object graph to remove unreferenced memory. Obviously this is a double edged sword, since the cost of GC can slow down the program. But if this is a big deal, you can always allocate memory off the heap and manage it manually. I think with future garbage collector improvements such as G1 collector will improve this situation. Mature eco-system: Java has a ton of really well-written, well-tested libraries, a few of which include: Apache Commons - Apache Commons, Google Core Libraries for Java 1.6+ - Google Project Hosting and many other important frameworks written like Netty, Hadoop etc Performance: While Java doesn't compare to code written in C++ (Comparison of Java and C++), it works pretty darn well. Netty is a stunning example of how performant well written java can be (checkout: Netty 4 at Twitter: Reduced GC Overhead | Twitter Blogs)I'm sure there are other languages which do it as well or equally well but this is what I personally like about Java. Updated 89w ago • View Upvotes