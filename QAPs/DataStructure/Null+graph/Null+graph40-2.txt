I am a fresher pursuing my B.Tech final year, and I have an interview with Amazon tomorrow in my college. It's my first experience with any interview. What should I do?
The preparation depends on the job role, to some extent, SDE or SDET. SDET is no different from SDE. Apart from SDE, they look additional testing skills in SDET. This is my experience. Clarify the question first When going for a question, clarify the question first. Is data sorted? What is the nature of the data? Can data be accommodated in the memory? Is data in range? Think about different approaches Think about the different approaches that can be used to solve the problem. Amazon is serious about the data structures you use to solve a problem. So, think about different data structures. Can array be used? Yes, if data is sorted, we can do binary search. What about linked list?  But linked list will consume extra space for pointers. Binary search is also not applicable. What about Graph? Heap? Trie? Binary Tree? BST? Stack? Queue?  Trie + Heap? Think about different space and time complexities used in each approach. Code reusability and readability Think about challenges which can arise in each approach. Whether it can lead to Integer Overflow? Can all operations be efficient here? What if some new operations need to be added in future? Try to give meaningful name to the identifiers. Though it is not that much necessary, but writing a readable code is a plus. Don't forget to handle test cases Before writing the program, think about the various test cases. What if NULL pointer is passed? What if the list is empty? What if the list contains one node? What if list cannot be accommodated in memory? Now write the program on piece of paper. Cover each test case. After writing the program, check your program against each test case. You are done. Now, write the program on compiler to check its validity. Try to generate automated program to check for various test cases. References Testing and Designing are the two areas where questions are asked intentionally vague. They need to be clarified a lot. These questions are generally asked to increase communication. Ask questions to make the things clear. Better follow cracking the coding interview( by Gayle Laakmann ) for tackling testing questions. There is a separate chapter dedicated for testing. This will give a lot of idea. Generally they ask to write test cases for the program you write and then check whether your program handles those test cases. What if the question is too difficult? Think out loud. Yes, this trick works well in the interviews. Just ensure to convey your thoughts to the interviewer so that they do not simply assume that your get stuck. Even if you get stuck, they will give you hints. Some companies reduce marks for hints. However, getting some hints and coming to a solution in 10 minutes is better than being stucked for an hour and doing nothing. Don't be afraid of Brute-force approach? You know a brute force solution. Congrats! You at least know one way to solve the problem. But, don't forget to approach/think for the better solutions in terms of space and time. Time Constraint of 15 days: Since, you have very less time. Practice as much as you can. Revision is the key. They do not ask very difficult questions. You need to do them in the best way you can. Additional tips My experience says, confidence and  practice are the keys. Quality beats quantity. Don't rush for the solutions. If you know a solution, you can easily extend it for other  problems. PS: If you have any further query, kindly let me know. I will be happy to reply. Updated 162w ago • View Upvotes