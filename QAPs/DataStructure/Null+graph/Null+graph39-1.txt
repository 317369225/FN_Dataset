What is a slow pointer and a fast pointer in a linked list?
Both are pointers. Calling one a fast pointer and another a slow pointer is just a method of naming variables. They can also be called something like harePtr and tortoisePtr. Suppose a pointer checks every ith node, and another checks every jth node (and i != j). If i < j, then the pointer which checks every ith node is a slow pointer and the other one is a fast pointer. They can be used in applications like detecting a loop in a linked list, flattening a linked list (i.e. removing loops in a linked list), etc. 