How do I manually input the time and date in MySQL?
I am going to make a couple assumptions here: you will be connecting to the MySQL instance in a website this is in a hosted environment like a GoDaddy or Amazon Web ServiceIf you have not yet created your mysql instance, that is where you will have to start, it is a fairly straight forward operation using the tools provided by Amazon from what I have seen. I have not used GoDaddy, but I imagine the same is true. They should walk you through the initial installation step by step. Not that you have an operating MySQL instance up and running, you need a schema to store your data in. You have probably already installed a GUI of some sort to connect to the database such as MySQL Workbench or Toad. Personally I am a nuts and bolts guy, so I do all my work on the command line, but the GUIs are quite powerful and full featured. Either way, you create your database: "CREATE DATABASE you_preferred_name;" (for all I know there is button you click on the GUIs). So now you have a shiny new database, but it isn't really useful because it is just an empty container. In many ways it is a container of containers, kind of like a kitchen. In order to put some data in it, we need to be a little bit organized, just like our kitchen. It would not do to throw all your food, cutlery, pots, pans, silverware, etc. in a big pile in your container, you store it in drawers and cabinets, and sometimes even in containers inside the drawers and cabinets (like a spice rack or a silverware separator). Now each container is kind of specialized to its job, though many are very similar, they may differ in size and complexity. That is where you start design on the schema objects. The base object that every database needs is the table (not the kind you eat on, the one you see with pie charts). You want to store your operating hours, which a fairly simple design, but for the sake of information, I will stretch it out a little to contain more details than that, and such that it would scale for multiple locations. You did not mention the days of the week, but let's build that functionality into the design. CREATE TABLE locations (   location_id MEDIUMINT(5) NOT NULL AUTO_INCREMENT   , location_name VARCHAR(255) NOT NULL DEFAULT ''   , street1 VARCHAR(255) NOT NULL DEFAULT ''   , street2 VARCHAR(255) NOT NULL DEFAULT ''   , city VARCHAR(64) NOT NULL DEFAULT ''   , state VARCHAR(64) NOT NULL DEFAULT ''   , zip MEDIUMINT(5) NOT NULL DEFAULT 0   , country VARCHAR(85) NOT NULL DEFAULT ''   , monday_open TIME NOT NULL DEFAULT '12:00:00'   , monday_close TIME NOT NULL DEFAULT '12:00:00'   , tuesday_open TIME NOT NULL DEFAULT '12:00:00'   , tuesday_close TIME NOT NULL DEFAULT '12:00:00'   , wednesday_open TIME NOT NULL DEFAULT '12:00:00'   , wednesday_close TIME NOT NULL DEFAULT '12:00:00'   , thursday_open TIME NOT NULL DEFAULT '12:00:00'   , thursday_close TIME NOT NULL DEFAULT '12:00:00'   , friday_open TIME NOT NULL DEFAULT '12:00:00'   , friday_close TIME NOT NULL DEFAULT '12:00:00'   , saturday_open TIME NOT NULL DEFAULT '12:00:00'   , saturday_close TIME NOT NULL DEFAULT '12:00:00'   , sunday_open TIME NOT NULL DEFAULT '12:00:00'   , sunday_close TIME NOT NULL DEFAULT '12:00:00'   , PRIMARY KEY (location_id) ); Okay, now we have a shiny new container. Let's fill it up. INSERT INTO locations VALUES(NULL                                                                                                                                                                                                       , "Mamma Mia' Pizzeria" , "1320 Blackpine Dr." , "" , "Nashville" , "Tennessee" , 37029 , "United States of America" , "12:00:00" , "20:00:00" , "12:00:00" , "20:00:00" , "12:00:00" , "20:00:00" , "12:00:00" , "20:00:00" , "12:00:00" , "22:00:00" , "12:00:00" , "22:00:00" , "00:00:00" , "00:00:00"); There are several ways to get the day and time natively within MySQL and php. However you go about it, once you know what day it is and what hour, comparing those to what we have in your new container is fairly simple. Let's suppose a potential pizza customer logs on to the website and navigates to Mama Mia's record, in the background a process has determined that it is Wednesday at 14:54:23 in the afternoon (CST - do not forget to keep track of your timezones). A simple query to the database will tell us if the location is open or not. SELECT   1 FROM   locations WHERE   location_id = 1 AND   wednesday_open < '14:54:32' AND   wednesday_close > '14:54:32' ; Which returns true: mysql> SELECT     ->   1     -> FROM     ->   locations     -> WHERE     ->   location_id = 1     -> AND     ->   wednesday_open < '14:54:32'     -> AND     ->   wednesday_close > '14:54:32'     -> ; +---+ | 1 | +---+ | 1 | +---+ 1 row in set (0.00 sec) Now suppose it were only 11:54:32 on that same Wednesday: SELECT   1 FROM   locations WHERE   location_id = 1 AND   wednesday_open < '11:54:32' AND   wednesday_close > '11:54:32' ; mysql> SELECT     ->   1     -> FROM     ->   locations     -> WHERE     ->   location_id = 1     -> AND     ->   wednesday_open < '11:54:32'     -> AND     ->   wednesday_close > '11:54:32'     -> ; Empty set (0.00 sec) Now for a very small dataset and only a single or very few locations, that is a fine data model. When you start scaling though, keeping the monday_open, monday_close fields in the same table gets 'ugly' it should be normalized out so you have a 'locations' and 'location_hours' that might look something like this: CREATE TABLE location_hours(   location_id MEDIUMINT(5) NOT NULL DEFAULT 0   , day_of_week TINYINT(1) NOT NULL DEFAULT 1   , open_hour TIME NOT NULL DEFAULT '12:00:00'   , close_hour TIME NOT NULL DEFAULT '20:00:00' ); So lets fill this container up a little: INSERT INTO location_hours VALUES(1,2,'12:00:00','20:00:00'),(1,3,'12:00:00','20:00:00'),(1,4,'12:00:00','20:00:00'),(1,5,'12:00:00','20:00:00'),(1,6,'12:00:00','22:00:00'),(1,7,'12:00:00','22:00:00'); That is 6 records, Monday through Saturday (no need to populate a Sunday row, Mama Mia's is closed). Now the query gets a little bit more tricky because we join the two objects on the common key, note this join is not strictly necessary just to find out if the location is open, but this is to demonstrate. mysql> SELECT     ->   street1     ->   , street2     ->   , city     ->   , state     ->   , zip     -> FROM     ->   location_hours     ->   , locations     -> WHERE     ->   location_hours.location_id = 1     -> AND     ->   location_hours.location_id = locations.location_id     -> AND     ->   open_hour < '13:54:32'     -> AND     ->   close_hour > '13:54:32'     -> AND     ->   day_of_week = 4     -> ; +--------------------+---------+-----------+-----------+-------+ | street1            | street2 | city      | state     | zip   | +--------------------+---------+-----------+-----------+-------+ | 1320 Blackpine Dr. |         | Nashville | Tennessee | 37029 | +--------------------+---------+-----------+-----------+-------+ 1 row in set (0.00 sec) I hope this answers your question, or at least gets you closer to it. Thanks for the A2A 