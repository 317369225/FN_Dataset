How do I find if a perfect matching exists in a graph G?
Any matching of size n/2 is a perfect matching. So in order to get a perfect matching if it exists, you need to find the maximum matching in the graph and if its size is n/2, then you have the perfect matching. Now to find the maximum matching, you may check whether the graph is bipartite or not because with bipartite graphs, its much simpler to find the maximum matching. Berge's theorem states that a matching M is maximum in G if G has no M-augmenting path. Algorithm for both the cases uses this theorem. For the biparite case, Hofcroft-Karp algorithm finds the maximum matching in O([math]E\sqrt{V}[/math]) time. Hopcroftâ€“Karp algorithm For the case of genral graphs, Edmonds blossom algorithm finds the maximum matching in O([math]V^{4}[/math]) time. Blossom algorithm 