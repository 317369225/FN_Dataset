Will the recent advances in algorithms for coloring perfect graphs lead to algorithms for coloring generic graphs?
Unlikely. Coloring graphs in general is an NP-hard problem. In particular, any efficient algorithm for coloring graphs would imply that P=NP, which 1. would be a humongous breakthrough in computer science and 2. most experts believe is false. Even more restricted problems like checking whether a graph can be colored with 3 colors or approximating the number of colors you need are NP-hard. Perhaps by generic graphs you mean generic perfect graphs. In this case, it should be pointed out that there already exists a polynomial-time algorithm for coloring perfect graphs; however this algorithm is non-combinatorial (it makes use of techniques from convex optimization). The main result of the linked work is a combinatorial algorithm for coloring a certain class of perfect graphs. It seems very plausible that this could be extended to a combinatorial algorithm for all perfect graphs, which may be faster than the existing non-combinatorial algorithm. 