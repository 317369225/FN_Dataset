What is the relation between quantum computing and quantum mechanics?
It's actually quite simple. The information for a qubit in some particle will be its spin state (although it doesn't have to be, this is just the most convenient). In quantum mechanics, spin is no different than position, velocity, energy, etc. That is, you can't know what state it is in exactly because it's in a superposition of states. It's related somewhat to Heisenberg's uncertainty principle. Take a look at this graph: In this diagram, we're using the z-axis as our measurement basis. So the vector [math]\left|\psi\right\rangle[/math] has some polar angle [math]\theta[/math], and its projection onto the z-axis is what we'll see (since we'll be measuring according to the z-basis). But of course, as you can see, it's not fully in the zero or one state, it's partially in both. When you measure, it will pick one or the other. The broader perspective is that you're generalizing some quantum system to the abstract. When you have a qubit you're really talking about some two-level piece of a larger quantum system, and when you have multiple [entangled] qubits the energy levels go as [math]2^k[/math], i.e., exponential in the number of qubits. From this abstraction you can formulate a theory of information and computation without having to think about the underlying physics of the system as long as you've started from quantum mechanics. This becomes very useful since you can leverage techniques from classical information theory and other related areas. The only difference is that there are some weird rules which are the product of quantum mechanics, but after defining the quantum information theory one need not think about this fact. Updated 82w ago â€¢ View Upvotes