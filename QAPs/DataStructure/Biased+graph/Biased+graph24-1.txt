What graph topics should I study in order to be adequately prepared for a Google software engineer interview? Would it be worthwhile to also study algorithms for minimum spanning trees, maximum network flows, bipartite matching, etc.?
I actually disagree with the other answers (including Gayle's - no offense, of course) due to my own experiences, and I really hope people looking for an answer to this question read mine so as not to get the wrong idea from the other answers and go into the interview unprepared. Skip to the last paragraph for a TL;DR version of the answer. You should know way more than just Breadth First Search and Depth First Search, in my opinion. You should know, in decreasing order of importance: BFS DFS Topological Sort & Shortest-path in a DAG... (more)