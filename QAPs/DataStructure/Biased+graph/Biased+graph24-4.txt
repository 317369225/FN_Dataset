What graph topics should I study in order to be adequately prepared for a Google software engineer interview? Would it be worthwhile to also study algorithms for minimum spanning trees, maximum network flows, bipartite matching, etc.?
You're unlikely to be asked questions about those more advanced topics. You will be expected to know the basics like the back of your hand though. So here's the thing. How do you get to the point where you know the basics like the back of your hand? By doing more difficult stuff that uses the basic stuff as building blocks. Dijkstra's algorithm is a good example of that. My advice: Skim over CLRS and make sure you're intimately familiar with the basics. For the advanced stuff, just remember the high-level properties. ... (more)