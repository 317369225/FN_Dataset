Is it okay for a beginner to take a lot of time to implement advanced data structures such as AVL trees or 2-3 trees? Frequently asked inRecently I tried to write a program involving AVL tree and I I took a lot of time. Though solved it eventually, I got frustrated because of time I took.
Like many others here I echo that it's okay. However, just telling you it's okay is like you asking a doctor, "Is it okay to wheeze when I run?" and the doctor telling you that's fine, and missing that you might also be suffering from asthma! I consider AVL trees not very difficult to do if you have an understanding of some program design principles. Mike Xie suggested you read How to Design Programs, which will teach you a design method that helps you with such programs. If you follow a data-driven program methodology, and think about your invariants, then it's quite straightforward; it looks really hard when you don't know how to think this way. I explicitly discuss AVL trees in Programming and Programming Languages, in the chapter "Sets Appeal" (specifically, under "A Fine Balance: Tree Surgery")â€”but don't provide code because of how straightforward I believe it should be (but I might add the code in a future edition). 