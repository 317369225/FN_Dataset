Is it okay for a beginner to take a lot of time to implement advanced data structures such as AVL trees or 2-3 trees? Frequently asked inRecently I tried to write a program involving AVL tree and I I took a lot of time. Though solved it eventually, I got frustrated because of time I took.
It's infinitely better than never finishing. We were all beginners once. The ones who kept at it got better but by bit until it stopped being so hard. Don't worry about how long it takes. Do it right and be kind to yourself and the rest will follow. Also please pick up and read Shriram Krishnamurthi Hos to Design Programs (2001 book). It's the best book you could start with. Also read how to become a programmer in 10 years and do that last part about talking to other programmers. They will teach you more in 10 minutes in a random haphazard way since they know so much and you know so little (I learned Vim shortcuts, pipelining, automated testing, lambdas in my first pair programming session with a hacker friend) than you can pick up and find by yourself in an hour. And more importantly the good ones will coach you and help you keep going when the going gets rough. I highly recommend Mattmight.net to learn bash/Linux/random checklist of things you need to know as a programmer. Also recommend A2A Egor Suvorov, Dima Korolev, Máté Kovács, Matthew Lai and check their git hubs they have non insane A2A prices and are kind. Although it's best to find programmers irl. Also feel free to ask me although I'm not as qualified. All writers are kind. Programmers are a kind of writer. And don't forget worst thing is they say no. Good luck and happy composing. 