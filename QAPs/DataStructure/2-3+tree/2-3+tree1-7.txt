Is it okay for a beginner to take a lot of time to implement advanced data structures such as AVL trees or 2-3 trees? Frequently asked inRecently I tried to write a program involving AVL tree and I I took a lot of time. Though solved it eventually, I got frustrated because of time I took.
Yes, it is definitely Ok to try out and implement the stuff you have been reading about. I know that when we look at AVL trees and RB Trees from a theoretical point of view, then they seem to be quite easy than when you actually sit down to implement them. It is never a time waste if you try to implement an algorithm or try to build a complex data structure from scratch. Watching your design of data structure come to life and efficiently handling and querying of data, provides great amount of satisfaction. However, if you ask me, I would say that it is very rare that you would be required to build as complex a data structure as an AVL tree while developing real-world applications. All the algorithms and advanced data structures that we read about are not actually required for you to code from scratch in real-world applications. Most of these complex data structures have already been efficiently implemented and are available in most programming languages. The only thing required from you is that you should be knowing what type of queries can be performed on the data structure. How the data is being stored. What is the time complexity of each operation. What sort of real-world problems can it help you to solve. Still, if you have time then you can try to construct AVL tree from scratch but be prepared to spend good quality time on it and be sure to test it out properly to see if its performing as it should. great amount of time will be invested because implementing rotations and stuff and dealing with pointers etc can be hard for a beginner. But its good that you wanna try this out. Best of luck. Happy coding !! 