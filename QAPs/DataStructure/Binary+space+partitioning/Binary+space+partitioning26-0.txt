What are the advantages of using quantum computing in natural language processing?Dr. Bob Coecke mentioned that it is to extract meaning, but how is it better or different from the classical platforms? Because it can try different what-if's faster?
I don't know much about NLP, but I'll take a crack at it. I should also note that there hasn't been a lot of work in QC with regards to machine learning, especially with the circuit QC model, so it will be a more general explanation. So the question of how QC can be used in accelerating NLP calculations can be looked at as a more broad question of how QC can help you at all in machine learning. I suspect Dr. Coecke was talking about the circuit model, but the adiabatic model can be just as effective. They're both theoretically equivalent (though that doesn't guarantee acceleration of the same magnitude for both). I know more about the adiabatic model, so I'll talk about that. With the adiabatic model, you're basically rewriting your NLP problem in terms of a binary optimization problem. If you can get your problem down to the right form, you can get a really good acceleration on your algorithms (though it's not always guaranteed, you'll need to do some more sophisticated analysis). Perhaps if you could formulate your NLP problem in terms of a graph search, then you will find it easier to visualize. The AQC is very good at combinatorial optimization, so things like shortest paths and partitioning are its bread and butter. So why is it so good at that stuff? The answer is surprisingly simple. A quantum computer is more efficient at searching a large state space with few qubits. If you had N  qubits, you can search in a state space that is 2 N   dimensional rather quickly. One reason for this is because a quantum particle can tunnel through "barriers". Take a look at this figure: In simulated annealing, genetic algorithms, gradient descent, and similar classical algorithms, in order to get around a barrier, you'll have to follow the red curve. Quantum particles can tunnel through barriers, allowing them to find global optimums much more easily. There are still other challenges in doing it, but it is much more efficient than classical algorithms. Anyway, so that's the basic reason for why quantum computing can be good for applications in things like NLP. We're not really at the point where machine learning is on anyone's minds in the QC community, but I think there are some people who are looking to change that as it can be extremely useful. Optimization problems pop up everywhere in machine learning, including NLP, and they're among the most difficult problems for us to solve classically. A good speedup for these problems will mean a lot to many people and many industries. I've written a lot of answers about AQC, including some more in-depth explanations for how it actually works. You can look through them here: https://www.quora.com/Hadayat-Se... 