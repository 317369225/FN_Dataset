What will happen if we use more than 4GB of memory in a 32-bit system?Will the system be able to use more than 4GB? In what condition can a system have more than 4GB of memory?
These posts describing the difference between physical and virtual memory are excellent, but they don't quite answer the question. When virtual memory is full, the operating system will kill the process. Simple as that. Exhausting physical memory, on the other hand, is a much more complicated story. Most operating systems will attempt to "swap" out memory pages to disk when physical memory is full. *NIX systems commonly have a separate disk partition to use as the swap space, whereas Windows uses a gigantic binary file called the "page file". When the OS swaps, it writes one or more memory pages to disk based on how likely it thinks they will be used (this is a huge CS topic on its own: see Cache algorithms on Wikipedia), and then gives the page(s) that frees up to the requesting process. Should a process need data on a swapped-out page and the physical memory is still exhausted, the OS must find another page to swap out so that it can swap the desired page back in. (If there is no swap space, either because it's also filled or because it never existed to begin with, the operating system simply kills the process.) The trouble with swapping is that disk I/O is extremely slow compared to memory I/O, and so any memory-intensive process which exceeds memory will usually slow to a crawl. In most cases, the expected running time of such processes will explode, and it's more worthwhile to kill it, rewrite it to make it more memory-efficient, and restart it than it is to let it continue. In the modern era of computing, swapping is increasingly seen as an obsolete practice, because with modern expectations for processing time of even the most CPU- and memory-intensive computations, swapping means death, and the process may as well have crashed. Today's end user (i.e. neither a developer nor a data warehouse) would have to go to epic lengths to blow out a modern computer's RAM, and even then the cost of upgrading RAM isn't terrifically expensive. And those who do care about things like data warehousing will already be paying plenty of attention to which data is written to disk and when, and what stays in memory. This gives rise to something I've called the Modern Linux User's Dilemma (since setting up a swap partition is often an explicit part of installation instructions for Linux): too much RAM to ever expect to swap, but too much disk space to worry about space lost to swap. (I would definitely consider this a "first-world problem." :p) Fun Fact: Fans of the text editor vi used to say that a rival editor, EMACS, stood for "Eight Megs And Constantly Swapping". This was said back when 8 MB was considered an extravagant amount of memory for an editor, and its purpose was to make fun of how needlessly memory-intensive it was. 