How do I implement Locality-Sensitive Hashing with respect to Levenshtein distance?I had like to solve a nearest neighborer problem using LSH, most LSH algorithms work with cosine or hamming distance, the distance in my dataset is a Levenshtein one, any idea how can I solve it?
You want to project your input strings into a geometric space that is isomorphic to Levenshtein distances.  Because LSH is already approximate, this projection doesn't have to be perfect.  Consider using shingling and minhash, which uses random projections, just like LSH, to make succinct fingerprints: http://nlp.stanford.edu/IR-book/... If your input strings have poor character distribution, or if the strings are very short, you shouldn't use hashing.  Instead use a Levenshtein automata: http://blog.notdot.net/2010/07/D... 