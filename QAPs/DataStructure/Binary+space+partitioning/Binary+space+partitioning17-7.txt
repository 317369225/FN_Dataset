What are the 10 must-know algorithms and data structures for a software engineer?
Every software engineer should read the Kernighan and Ritchie C book. Not only is it important to learn the syntax of a historically important language like C (from which many other procedural languages, in turn, borrow their syntax), but the book is also a primer on essential algorithms and data structures all introduced in the context of learning C and on implementing these algorithms and data structures in C. You'll cover data structures like link lists, hash tables, B-trees, arrays, structures, and stacks. You'll also cover some sorting and hashing algorithms, and techniques like recursion. Finally, you'll get a thorough treatment of memory management through pointer manipulation and dynamic memory allocation. I believe that's a list of ten items total with the last two items being commonplace programming techniques. 