How have graph processing techniques been applied to games, or how could they be?In particular, what are the potential challenges or advantages in using a binary space partitioning tree?  Or more generally, how can game developers use algorithms and computing models developed for big-data graph processing? I'm interested in thoughts from both game developers and those knowledgeable of modern graph processing (as well as the very few who may be versed in both subjects!)
John Carmack famously applied BSP (binary space partition) trees in Quake to solve the hidden surface problem common in computer graphics. Each surface partitioned the world into two halves. The static world database was organised as a tree. Traversing the tree allowed surfaces to be drawn in the correct order so that foreground surfaces obscured background surfaces. Updated 16 Nov 2013 • View Upvotes