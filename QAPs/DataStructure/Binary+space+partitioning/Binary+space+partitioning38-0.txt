How is discrete mathematics used in control theory?
Control systems require estimates of process states and noise. In ideal mathematical models, these estimates can be provided by difference/differential equations. However real systems are not completely describable using mathematical models. Which is why we need to obtain estimates of the states/noise/deviations by sampling signals from observers (sensors). These signals could come from analog observersÂ  but you generally need highly custom hardware to deal with analog signals. It is more common to use digitzers/ADCs to sample these analog signals and run with those. Digitized signals (and flash/ROM memory) let us use generic h/w to develop approximations of mathematical control processes. The key term is 'approximations'. When you digitize a signal, when you have a finite precision in state estimates, and you have limited memory and processor bandwidth (finite execution/update time), your algorithm behavior is no longer as straightforward as in the continuous-time representation of signals. The Nyquist/Shannon signals concepts describe how finite sampling can cause aliasing/misrepresentation and consequent misinterpretation of signals from observers. When your systems get really complicated (upwards of 4 observers sampling at multiple frequencies and 20 states, each with their own harmonics), there are no convenient 2D visualization that describe how the limited accuracy of your numerical representation and finite precision interact to generate errors. That's where discrete mathematics (and discrete time signal processing/algorithms) comes in. It provides an approach to dealing with sophisticated real linear systems. And to save you the suspense, it is great for electrical/RF systems - not so much for mechanical systems with high dynamics/nonlinearities. 