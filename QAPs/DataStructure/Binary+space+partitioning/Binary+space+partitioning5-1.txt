What are some of the most ingenious algorithms in computer science?added bonus if the algorithm runs in constant time
I think the Very Concurrent Garbage Collector (VCGC) is ingenious. Concurrent garbage collectors have been regarded by experts in the field as rocket science due to the perils of low-level concurrency in the interactions between the garbage collector and mutator threads that constantly change the topology of the heap. The VCGC ingeniously evades fine-grained concurrency by categorizing all objects as either young, old or dead. The mutators, marker and sweeper are then free to operate on the heap simultaneously. The mutators are oblivious to age except that they allocate young and cannot reach dead objects. The marker makes old objects young again. The sweeper recycles dead objects. After each GC cycle the interpretation of age changes so young becomes old and old becomes dead. I implemented the VCGC algorithm in ~200 lines of F# code (see The Very Concurrent Garbage Collector) and it works extremely well, giving me consistently sub-millisecond pauses. I have read around 1,000 research papers on garbage collection and never saw another approach like it. In fact, I think concurrent programming in general could learn a lot from some of the ingenious garbage collection algorithms like this one. 