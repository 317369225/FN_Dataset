How do you design an algorithm?Imagine you are talking to a 18 year old who likes to study the humanities.
You have to think about your problem and keep dividing it into smaller chunks that you can turn into simpler operations.  Keep doing this until you can express it into a single statement/function of your desired programming language. Note that programming languages have evolved so that oft-encountered chunks can be expressed as simply as possible.  For example, multiplying 2x3 once required the application of an algorithm you learned in grade school -- now the programming language turned it into a simple chunk (commonly "2*3") for you. Python is a great example of a language that has reached a very high level of expressibility (or "elegance") -- meaning that historically common chunks found in a large number of problems are expressed very simply.  It's one of the reasons you don't encounter the issue of algorithms as much in python as compared to C.  Python puts 50 years of accumulated programming exprerience compressed into clearly-defined syntax. But since you put this question under "Mathematics" you might try the language Haskell. Updated 27 Nov 2012 • View Upvotes