What will happen if we use more than 4GB of memory in a 32-bit system?Will the system be able to use more than 4GB? In what condition can a system have more than 4GB of memory?
If a system doesn't support more than 4GB of RAM, how can you use it? You can only use the mount the BIOS/mainboard recognizes. So your question is ill-formed. It should be "what will happen if we install more than 4GB of RAM in a 32-bit system?" or "what will happen if we declare/allocate more than 4GB of RAM in a 32-bit system?" For the first case, if the BIOS can recognize more than 4GB of RAM then you can use all of it if the operating system can. For the case of dynamic allocated memory, maybe nothing will happen or just an allocating error returned, or some other error on another system. And note that malloc accepts a size_t input, and if size_t is 32 bits, you cannot specify more than 4GB to be allocated too. For static memory you cannot declare more than 4GB either because a 32-bit process can only address 2GB of RAM (3GB if the program is large address aware). Even if the operating system supports more than 4GB, you need to explicitly use some complex trick to use more than 4GB for your process since it's only provide 2/3GB of space. But there are many ways to address more memory with a specific address size. For example 8-bit microcontrollers often use memory banking to overcome the 8-bit address limit. 16-bit x86 uses segmented memory. Some 32-bit systems use memory banking or segmented memory too. But most implement a type of wider address. That's PAE on x86 or LPAE on ARM. You still needs OS support for accessing the address above 4GB and of course the address space for each process is still 32-bit. 