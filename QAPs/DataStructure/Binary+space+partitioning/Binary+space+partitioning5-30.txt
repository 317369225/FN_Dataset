What are some of the most ingenious algorithms in computer science?added bonus if the algorithm runs in constant time
My personal favourite, although it is currently a bit of a challenge to implement, is the quantum bogosort, which (according to some reasonable assumptions) should sort worst case in O(n). Here is the algorithm: [...] there's a solution to this inefficiency, and this solution is quantum computing. Because of the many-universes hypothesis in quantum physics, a list that is sorted randomly will create an infinite number of universes, with some universes containing a sorted list. In this case, quantum computing can make bogosort work in O(n). Here's the new algorithm: Shuffle the list randomly. If the list is sorted, stop. If it isn't sorted, destroy the entire universe.Since the only survivors of this rather apocalyptic approach to computing will be in universes where the list was sorted after the first shuffle, it is quite efficient. Checking if a list is sorted requires n-1 comparisons, and I'm going to assume an entire universe can be destroyed in O(1), as it only ever has to happen once. Thus, bogosort becomes an O(n) sort algorithm. http://www.mathnews.uwaterloo.ca... 