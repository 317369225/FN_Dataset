What are some of the most ingenious algorithms in computer science?added bonus if the algorithm runs in constant time
Lossy image compression algorithms, in particular JPEG The first time I tried to understand JPEG compression, I was in high school and lacked the appropriate math or understanding to fully get it. While quantization and compression were concepts that were easy enough to understand, grokking transforms without formal math coursework was hard to wrap my head around. It was mind bending to only later on in college after developing some exposure to mathematical transforms that the intuition behind the algorithms really hit me. It was an "Aha" moment which finally had me going "Okay, so in simple terms, you transform the image data to a format far more amenable to discarding data in a way that the limitations of the human eye is less likely to observe it, which just so happens to compress really well if you traverse it blockwise in a zig-zag pattern." Suffix trees and tries Highly practical and relatively simple data structures that are really well suited for substring problems, and can perform certain naively implemented O(n 2 )  operations in linear time. Quadtrees ( and I guess Kd trees in general ). The first time how you understand how quadtrees let you do spatial operations efficiently, its kind of cool because your first instinct is to view the problem as a geometric problem rather than a data structures problem. 