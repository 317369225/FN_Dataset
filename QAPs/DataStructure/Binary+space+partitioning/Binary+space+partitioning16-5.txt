When should you use the different GCC optimization flags (e.g. -O2)?I am new to code optimization and g++/gcc compiler flags. This question arose when I saw that OpenCV uses the "-O2" optimization instead of "-O3" on 32-bit Linux. What are the pros/cons of each optimization level?
When you want to vectorize inner loops in expressions beyond certain complexity.As,gcc (up to 4.7)may not  get the most the loop kernel efficiently. You ll need --fast-math flag  to switch on associativity.[1](+telling compiler about alignment & array-overlaps). [1]Sameer Gupta's answer to Is floating point addition commutative and associative? 