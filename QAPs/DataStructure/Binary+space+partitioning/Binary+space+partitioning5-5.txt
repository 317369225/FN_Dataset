What are some of the most ingenious algorithms in computer science?added bonus if the algorithm runs in constant time
I think the Floydâ€“Warshall algorithm for shortest paths between all pairs of vertices in a graph is very neat for two reasons. The first reason is its elegance. It's a classic example of dynamic programming. You can check it out on Wikipedia, but the gist is that you find the shortest path between all pairs up to vertex number k, and slowly increase k while routing through previously discovered paths. The sheer elegance results in an implementation in maybe ten lines of standard imperative code. The second reason is its relevance. The algorithm can be extended to deterministic finite automata in order to prove that all regular languages are accepted by DFAs, and all DFAs accept regular languages. This is done essentially by labeling states sequentially and routing through them incrementally using regular operations. Additionally, re: relevance, the algorithm can be used for matrix inversion, transitive closures, and a host of other useful applications. It's a very neat idea that ends up being extremely powerful in theory and practice. 