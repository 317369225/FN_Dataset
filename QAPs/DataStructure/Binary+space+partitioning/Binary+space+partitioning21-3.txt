Is it true that writing operating system code and kernel code is extremely difficult? If so, how much do those types of programmers make?
Adding onto Tony Li, Stan Hanks and User Rewind two years, I used to work on user-space C code when I joined fresh out of college. Also I used to think that hitting segmentation fault was a curse. Nowadays (normally) my code brings down the machine frequently during development. In fact, I start suspecting my code if things run correctly the first time without crashing :-) Here's what I end up doing in a week: Code to algorithm conversion. A lot of proprietary kernel code (esp. proc, bootloader, vmm) will be undocumented. Innovative ways of debugging. One time I had to mark some more pages as low memory, make that as my debug space and copy debug words there while debugging the bootloader to know where I've reached. Obsessive regression oriented thinking, code-reviews and tests: You've got to make sure whatever you put in the kernel doesn't break existing behavior at any cost. Encounter a Heisenbug (very rarely). If God decides to punish me for my ill deeds done in the previous week, this is the best way he can get back at me. Thinking robustness everywhere. If something fails, can I get away by doing something else and rather not return an error. Try to optimize more and finally after breaking your head for a day or two, you then realize that you shouldn't have messed with that code. But sometimes your optimizations really work and you feel you've conquered a mountain. If you're working on some beta-hardware, you first blame the hardware guys when things go for a toss. If that comes back negative, you start bugging people who checked in code in last week. When finally you realize that they couldn't have caused any regression, you fire up your debugger. Just kidding, I wish it was like this, but usually it's the other way around. Reboot my machine about 100-200 times. Don't think me crazy, every time I change even a letter of code, we've got to rebuild the boot image and reboot the system. Compulsive stress testing before shipping. I get paid as much any other normal developer would get, nothing special. 