How is discrete mathematics used in control theory?
In control theory, one usually works with continuous-time, continuous-space models. Discretize time, and one has discrete-time control. Then discretize (finitely and finely!) also the state-space, and one has digital control. However, digital control leads to a very fine discretization of state-space. One can have a coarser discretization by obtaining a finite partition of the state-space and associating a symbol with each region. This partition can be fine where it matters and coarse where it doesn't, i.e., it does not require a uniform quantization of state-space. Note that each region would be now a state in a finite state-space. If one finitely partitions also the input and output spaces, then one has transformed a differential equation into a finite state machine (FSM). This would be "symbolic control", and is a generalization of symbolic dynamics for dynamical systems with inputs. Unlike in discrete-time control, where a signal is a sequence of real-valued vectors, in symbolic control one has a sequence of symbols taken from a finite state-space. The input and output would also be sequences of states taken from a finite input / output space. Once one has obtained an FSM, one can apply algorithms developed for the formal verification of sequential digital circuits to the verification of control systems. For example, one can use SAT or binary decision diagrams (BDDs). The model checking community has been interested in control theory for a while. 