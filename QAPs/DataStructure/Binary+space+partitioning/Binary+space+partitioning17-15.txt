What are the 10 must-know algorithms and data structures for a software engineer?
The question was not very specific, so most of the responses have -not surprisingly- been quite mundane: citations from the curriculum of a CS course. Of course, it is possible to learn some algorithms by rote: you may need them for job interviews or to pass an exam. You might also need to explain their performance characteristics Big-O notation (if they are critical to the response of the system). But it is also important to understand when to use them, what data sizes are most suitable, what are the drawbacks (e.g. memory allocation) of applying a particular algorithm or programming technique. So, I agree with Farhad: find a good reference source, read and understand the algorithms, then move on. When you need them, they will usually be available as libraries. 