Imposter Syndrome: What are some effective ways to overcome the Impostor Syndrome as a female engineer?
For the longest time I thought I sucked at programming, but then I realized that everyone sucks at programming. Anyone who claims they don't is lying or in some serious denial. This realization came to me by talking to some of the hackiest hackers I've ever met — people who work on compilers and foundational frameworks and programming languages — and I realized that even they didn't have all the answers. In fact, they spend a lot more time asking questions than answering them, because telling a computer what to do is not just hard, it's also kind of an unsolved problem. We're doing our best and inching ever closer, but there are no right answers and even the question of what solution is "best" is much less cut-and-dry than many would have you believe. That's when I realized some of my insecurity was actually normal and healthy, because I can see the fragility of what I build (and thus am ever pushing myself to make it better, or to understand more about how it works). This in turn gave me some confidence. The pompous, posturing person who claims to know everything is not only completely wrong, they are actively hurting themselves with that mindset. So in summary: Recognize cocky do-no-wrong confidence as the smokescreen for mediocrity that it is. Allow yourself to feel lost, seek help, ask questions, and realize that even the best in your field do this too. Understand that recognizing and respecting the complexity of the system is the hallmark of a real engineer. And one more bonus item: do not ever forget that you are a rational agent. You make your choices logically based on the information available. This helps a lot with the following type of interaction: Huffy Engineer: "Why would you do it this way? This is just stupid." You: "It seemed like a reasonable way to approach the problem. What would you do differently?" Huffy Engineer: "Clearly you should fooby the baz and blerg the blooper." You: "Thanks for the input. I'll think about it and make a note to revisit it later." See what's going on there? You refused to take the "stupid" bait and defended your choice as rational, if not perfect. You invited feedback, but you also left yourself room to think about the suggestion instead of taking it as a "clearly" superior solution. Maybe you should have foobied the baz, but maybe it also doesn't really matter on any dimension that you care about. Maybe foobying the baz is just a cargo cult thing and doesn't affect anything at all. This is really not an uncommon follow-up to this situation: Huffy Engineer: "Hey, you didn't fooby the baz." You: "Yeah, I looked into it and it doesn't actually make sense in this situation." Huffy Engineer: "But everyone foobies the baz! Let me link you articles in which many reputable programmers recommend foobying the baz." At this point you know Huffy doesn't actually know what they are talking about, so you can feel free to ignore them with impunity. Finally, sometimes the problem is not you. Some workplaces are better than others when it comes to bullying and posturing. It is only natural to be insecure when the culture is poisonous (or perhaps just a bad fit for you personally). If you find that one or more of the people you work with are routinely tearing you down, not listening to you, or otherwise damaging your confidence, it may be time to find a different team. 