Why are there no limits of single and double-precision numbers in Scheme?
Scheme has support for arbitrary-precision arithmetic and fractions (Rational data type) as part of the language numerical tower. They're basically stored as arrays of words. There are limits to bignums (see MOST-POSITIVE-BIGNUM). Having rationals and bignums built-in as primitives in the language makes it much easier to do things like handle monetary calculations correctly. There are also a lot of compiler optimization possibilities that you don't get if you try to implement arbitrary-precision fractions in a library. 