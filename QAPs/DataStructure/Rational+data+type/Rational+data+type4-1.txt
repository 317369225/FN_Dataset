Why doesn't Haskell have any killer app yet?
I think it's because the Haskell community just hasn't been focused on providing said killer app. Our toys tend to consist of killer libraries, extensions, and tools that only really benefits other Haskell programmers. We also tend to focus on the benefits the developer experiences rather than what services and features certain Haskell applications are providing the end user. We talk about safety, productivity, purity, etc. Only developers care about that. And when talk occurs about applications being written in Haskell, the conversation tends to focus on the development experience behind the application and how the developers benefited from using Haskell, not how their Haskell application is going to revolutionize its targeted domain. Right now, Haskell is basically its own killer app that solves problems most developers and companies don't think they have. A good example of Haskell's classic approach to killer apps is Xmonad. Brilliant window manager, but it's brilliant because it's basically just a library that the users harness to roll their own custom window managers, which assumes they're all comfortable with Haskell. Haskell's an amazing language and it DOES have killer apps already, but you need to know Haskell first to get that experience. It also probably doesn't help that Haskell is such a different language than what most people are used to. So much so that it's hard to market a "killer app" without having to simultaneously sell the Haskell programming language at the same time. Because that question will inevitably pop up, "Why did you write it in Haskell, why not these other languages?" 