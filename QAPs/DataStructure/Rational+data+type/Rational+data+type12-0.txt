What is being done to improve PHP?
Can't really speak for what's being done, as I'm not familiar with the internals and when I do have a look at some of the mailings, my head just explodesÂ  (just look at the ridiculous arguments against [] for array instantiation from this 2003 mailing list: Re: [PHP-DEV] Proposal: Array syntax), but I can say what I would change if I were in charge in any way. This is, I hope you understand, all science fiction and wishful thinking. I would remove all root level functions completely. Total break of backwards compatibility with PHP 5 when PHP 6 comes out. Put every single core function in a namespace and class, make it more structured. Right now... there's so much chaos. Array functions starting with array_ and not: arraymerge vs arsort, arrayflip vs shuffle Underscored vs Not underscored names: htmlentities vs htmlentitydecode, htmlspecialchars_decode vs htmlspecialchars To vs 2: bin2hex, deg2rad, strtolower, strtotime Arguments order: strpos($haystack, $needle) vsarray_search($needle, $haystack) Object+verb vs verb+object: strshuffle vs createfunction It just makes no sense, there's no rational way to remember things except to just shove them into your brain by force. Would the following not be cleaner? \Core\Array::shuffle($array); Sure, this brings int a lot of overhead and more typing, but with use statements at the top shortening this to Array or even just A, I would definitely be willing to bite the bullet. Heck, I'd even argue for all data types becoming objects, like in Scala, and giving them methods, and then keep all the core functions unrelated to objects directly in a root namespace Core class. Furthermore, I would stop all this deprecation nonsense. If something is crap, don't keep it in use for another decade. Remove the mysql_* functions as soon as they become deprecated, don't keep them for ten more years and let people learn how to do things the wrong way just because they can. Everything web related is evolving so fast, we simply can't afford to keep ten year old low quality relics in the core. Just be done with it. The people who use mysql_* don't intend to upgrade to OOP or a recent version PHP of any kind anyway, at least not any time soon. It's like Python 2.7. Version 3+ has been out for SO long now, but way too many people still insist on 2.7 because "there's not that many modules for 3". Well, genius, if no one uses it, no one builds modules. Last but not least, I would form a proper engineering R&D team to develop a PHP runtime/server that *can* be used in production and doesn't need a layer of Nginx or Apache in front, making entry into the language that much easier, and, in a way, doing what NodeJS did with JavaScript. 