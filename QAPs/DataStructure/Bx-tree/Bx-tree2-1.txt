How does the optimized version (O(n) solution) of the following problem work?
Standard Algorithm for finding diameter of any tree requires O(n) Algorithm 1)DFS from root node 2)Find the node which is at maximum distance from root(U can do it by finding height by doing DFS). 3)Let that node be AX 4)Consider that node as root i.e. AX 5)Now again find the node which is at max distance from AX(U can do it by finding height by doing DFS) let BX 6)this height is the diameter of a tree(Height ofÂ  BX with respect to AX) Now learning why O(N) as u are travelling tree 2 times only through DFS time required in O(2N) i.e. O(N) 