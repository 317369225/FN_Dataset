What is the difference between depth-first search and breadth-first search?
Originally Answered: What is difference between breadth first search and depth first search?DFS (Depth First Search) and BFS (Breadth First Search) are search    algorithms used for graphs and trees.    When you have an  ordered tree or graph, like a BST, it’s quite   easy to search the data  structure to find  the node that you want.     But,  when given an unordered tree or graph, the BFS and DFS search    algorithms can come in handy to find what you’re looking  for.    The decision to choose one over the other should be based on  the   type of data that one is dealing with.            In a breadth first search, you start at the root node, and  then   scan each node in the first level starting from the  leftmost node, moving towards the right.  Then you continue   scanning  the second level (starting from the left) and the   third level,  and so on until you’ve scanned all the nodes, or   until you find the  actual node  that you were searching for.    In a BFS,  when traversing one level, we need some way of knowing   which nodes to  traverse once we get to the next level.  The way this is done is  by storing the pointers to a level’s child   nodes while searching that  level.  The pointers   are stored in FIFO (First-In-First-Out)  queue.  This, in turn,   means that BFS uses a large amount of memory  because we have  to store the pointers. 