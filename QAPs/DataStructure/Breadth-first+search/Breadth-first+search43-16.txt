What is the best (programming) algorithm that you have ever created?Anything that you're proud of and would like to share the algorithm as well?
I've created an algo which computes the optimal filling of a given rectangular surface with smaller shapes.The typical problem in textile or wood industry, where you'd like to optimize the raw material and reduce the waste. Given a set of surfaces with different shapes, they have to be fitted on a bigger surface (the raw material) so that the rest is minimized. Brute force algos are O(n!) (where n is the number of shapes) and are prohibitive to compute for bigger n's. I came up with an algo based on a simple observation: if one puts all shapes in a (2d) box and shakes it, they will arrange themselves in a best-fill fashion (algo would work exactly the same in higher dimensions, too). The algo itself used dynamic programming, adding a small random shift-tilt to a piece and computing the movement of the rest, by taking into account a small force vector which acts on each piece (gravity). This will ensure that the algo converges. For the computation of the contact points, I used an external lib based on Voronoi diagrams. This was about 12 years ago, but afaik the algo is still used in the industry. The computation was all in CPU; because at that time there was no PhysX, and proprietary simulation systems were expensive. Today, i would rewrite it to use PhysX, that would speed it up enormously. 