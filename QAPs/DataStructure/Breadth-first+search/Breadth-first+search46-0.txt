Indian Institute of Technology Jodhpur (IITJ): How did Arpit Agarwal land a job at Google?How did he learn to code?
Too long. Don't Read. Proceed only if you are genuinely interested.   Disclaimer: Please note that I am by no means the best person (not even close) to tell how one should learn to code in general, however I can surely answer how I did it. Being a non-CSE undergrad, I wasn't even sure (in 3rd year) whether the core-CSE companies would even allow me to appear for their first rounds. Truth be told, I didn't care in the least. By the end of Summer 2013, I was pretty sure that I wanted to be awesome at competitive programming (which I still am not). So I practiced competitive programming intensely for the following semester. People in my college were only beginning to know about competitive programming and ACM-ICPC, thanks to Nishchay Kala. The journey: Summer 2013: Started to revise the course Data Structures and Algorithms, which I undertook in the sophomore year. Started coding my own implementations of trees, binary trees, binary search trees, stacks, queues. Realized competitive programming was about much more. Wrote my 1st BFS and DFS, submitted on SPOJ and became elated. Then some easiest problems on codechef. The green tick was orgasmic. Got acquainted with the vast world of Dynamic programming. Started to learn DP, read topcoder tutorial on DP, searched for easy DP problems - Tried them, could do only 2/10. Demotivated. Thought DP was not my cup of tea. Gave up on DP. Learnt about segment trees from a codechef editorial. Read a tutorial on segment trees. Implemented my own version (took about 3-4 days of debugging). Submitted on SPOJ. - 8 wrong submissions. Thought of coming back to segment trees after a while. Started to learn DP, read DP chapter in CLRS, read topcoder tutorials, searched for easy DP problems - Tried them, could do only 5/10. Tried some DP problems on SPOJ. Couldn't do a single one. Thought of coming back some other time. Back to segment trees. This time got accepted on SPOJ and segment tree became my favorite data structure. Qualified for ACM-ICPC Amritapuri regionals. Picked up DP again. 8 days of intense DP. Did about 8-9 DP problems on SPOJ. Participated in ICPC regionals. Performed poorly. Team ranked #224. Following that a little bit of Topcoder/Codeforces/Codechef/SPOJ. Greatly inspired by Mohd Asad my senior, who gave up his summer intern to work on competitive programming. As expected, companies like Amazon and Microsoft that visited campus for internships didn't open up for my branch. No remorse/regret/care in this world because I was enjoying what I was doing. Didn't really know or care if competitive programming would get me a job. Finally, got a work from home internship at a Start-up based in San Francisco in the summer of 2014. It required me to work on algorithms and data structures. Learnt a lot and more importantly understood the code quality difference between competitive programming and production level code. Realized that more often than not, I would not be working with fancy algorithms and Data Structures at a full time job - i.e. that the world of competitive programming is very different from actual software engineering jobs. Embraced the fact. Fourth year: Placement preparations specifically. Geeksforgeeks/leetcode/cracking the coding interview etc. Didn't enjoy much of this phase though, because I wasn't able to give time to real competitive programming. Realized I was starting to become comfortable with DP. Google APAC, August Round: Rank 221. Not called. Google APAC, September Round: Rank 122. Called for personal interviews. Google Gurgaon office, October 28: Google Interview experience in short. 4 Interviews with 2 questions each. Each round ranging from 45 min. to 1 hour 15 min. Interview 1:     Question 1: Dynamic Programming     Question 2: AdHoc - Strings Interview 2:     Question 1: Dynamic Programming     Question 2: Dynamic Programming Shortlisted for round 3. Interview 3:     Question 1: Breadth-First Search     Question 2: Open-ended/Design Question (I used heaps) Shortlisted for round 4. Interview 4:     Question 1: Trees     Question 2: AdHoc - I used Heaps/HashMaps November 4: Google HR calls me to ask about my branch, location preferences and transcripts. November 7, 12:30 hrs: HR calls me to congratulate me on acceptance of my application. Tells me I will be joining Google India. E-Mail follows. Can't stop shaking. Night of November 7: Party straight for 7 hours. People in the adjacent building said that they couldn't sleep because of the noise. Hope I have done justice to the question. Please comment if you want me to add something. Edit 1: Since many are asking for my advice on how to start competitive programming, these are some of the answers that have inspired me: What was Anudeep Nekkanti's Competitive Programming strategy to become 35th in Global ranking, in just 6-7 months? Pradeep George Mathias' answer to CodeChef: From which sources did Rudradev Basak, Pradeep George Mathias and Nikhil Garg learn algorithms. (If the last paragraph doesn't inspire you, hope God helps you). If you still need my advice on how to start; here it is. You may think that it is too naive. Get on with it already. I happen to be a sophomore student, wanting to get into Competitive Programming (C++). What would be your advice? Edit 2: I have a very modest pay package, good enough for a fresher. Not the 50 lakhs or 1.4 crore sorts. There are many people here on Quora, who deserve much more fame than I am receiving right now. Edit 3: 10 easy DP problems, I talked about. Here they are: Dynamic Programming Practice Problems Updated 19 Mar • View Upvotes • Asked to answer by Aman Singh, Guru Pratap, and Vikas Sangle