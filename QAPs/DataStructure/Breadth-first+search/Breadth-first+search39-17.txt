How can one be well prepared to answer data structure/algorithm questions in interviews?
Originally Answered: What is the best strategy to adopt in learning algorithms and data structures for cracking interviews?Those books should be enough as far as understanding of interview problem-space goes, but I'll add some caveats: You need to do the problems systematically and write code for them. It will be very tempting to just skim the problems, but that won't be very useful. For the hardest interviews (Google, FB ...) those books are not enough. For those, you have to do a larger variety of problems in more depth. Something like LeetCode, UVA Online Judge would be the way to go. For those companies, you're up against people who have been preparing for 6-9 months. Half the emphasis in any interview, is communication skills and confidence. Those will come from your hard work and smarts. It's important to get feedback about how you are progressing. Generally, you do that with practice interviews at different companies you don't want to work for. But companies don't often give feedback. So it's very hard to know where you may be going wrong. For that, you must do enough mock interviews with seasoned interviewers. "Seasoned" is the keyword. Conducting interviews is a skill and you don't want to prepare with someone who hasn't done them enough. Otherwise you'll only get surface-level feedback. Remember, that interviewing is a skill, that's more analogous to dating, than it's to test-prep. i.e. it's the person, you, that will matter the most, at the end. 