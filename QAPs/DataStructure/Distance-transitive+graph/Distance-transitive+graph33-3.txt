How can I improve my algorithmic coding skills?
Knowing language basics and algorithms is great, but unless you practice, you will find it very difficult to code. When you start practicing, you will get to know how to bring 1 and 1 together to make it 2. Start with simple questions and code them yourself. Then move on to questions with higher difficulty level. Read a question, think about how to go about with the problem. It can be the most naive solution, but still code it. If you are able to code it and test it well, then think of a better solution. In case you are unable to think about a better solution, look for a solution on the Internet, but do not look at the code. Go through the algorithm. Now if you understand it, try coding it yourself. If you find coding it difficult, then only look at the code. After that try coding it yourself. Practice more and more questions. Don't give up if at first you can solve the problem efficiently yourself. Try solving popular invterview questions on arrays, dynamic programming, trees, graphs etc. You can try solving the problems given here: IDeserve If you are unable to solve any problem, check out the Algorithms/ Insights on the page to get a hint on the solution. If you need more help on the problem, probably you will find a video on the solution. Many of the pages have a video solution in which the algorithm is discussed with examples. Lastly, you can have a look at the code. Though the code is in Java, you will be able to write similar c++ code if you have basic java knowledge. You can start with this playlist: Youtube - Programming Interview Questions Here are some of the good problems you can try: Linked Lists and Stack Problems: Merge two sorted linked lists Reverse a Linked List - Recursive Reverse a Linked List - Iterative Reverse every alternate k nodes of a Linked List Find nth Node from the end of a Linked List Sum of Two Linked Lists using Stacks Sum of Two Linked Lists using Recursion | Set 1 LRU Cache Implementation Detect a loop in a linked list and find the node where the loop starts. Convert a sorted Doubly Linked List to Balanced Binary Search Tree Convert a binary tree to doubly linked list Find intersection of two Linked Lists Find intersection of two Linked Lists - O(m + n) Time Complexity and O(1) Space Complexity Minimum Stack O(1) Strings Problems: Reverse words in a string Remove spaces from a given string Longest Substring with non-Repeating Characters Check balanced parentheses in a string Postfix Expression Evaluation Group all anagrams together from a given array of strings | Set 1 First non-repeating character in a string Find all permutations of a String Word Break Problem Subset Sum Problem Shortest Palindrome Palindrome Min Cut Minimum number of trials to reach from source word to destination word Longest Palindromic Substring Manacher's Algorithm Longest Palindromic Subsequence Longest Common Substring Longest Common Subsequence To print maximum number of As using given four keys. Finding 10 letter repeated DNA sequences. Find minimum edit distance between given two strings Distinct binary strings of length n with no consecutive 1s The longest prefix suffix array computation in KMP pattern matching algorithm. The Knuth Morris Pratt algorithm for pattern matching. Arrays Problems: Sorting Algorithm - Selection Sort Sorting Algorithm - Insertion Sort Sorting Algorithm - Bubble Sort Merge Sort Pancake Sorting Sorting Algorithm - Heap Sort Rotate an Array Fibonacci Number Merge two sorted arrays without using extra space Maximum subarray sum Maximum average subarray of size k Longest Substring with non-Repeating Characters Leaders in an array Find Minimum Length Sub Array With Sum K Binary Search in a Sorted Array Search a sorted matrix Re-arrange elements in an array to put positive and negative elements in alternate order Find the next greater number using same digits Next greater element in an array First non-repeating character in a string Find the 'n'th most frequent number in array Find the missing number in the increasing sequence Find duplicates in an integer array Find common elements in 'n' sorted arrays Find a Peak Element in an array Distribute Chocolates Problem Count frequencies of array elements in range 1 to n Find all permutations of a String Find pivot in a sorted rotated array Find an element in a sorted rotated array Find element in sorted rotated array without finding pivot Buy and sell stocks | Part 2 Buy and sell stocks | Part 1 Find index of 0 to replace to get longest continuous sequence of 1s O(n) time approach to find index of 0 to replace to get longest continuous sequence of 1s Trapping Rain Water between Towers The Skyline Problem Minimum number of coins to make change Find minimum cost path in a matrix Find the length of longest increasing subsequence in an array Longest Increasing Subsequence O(n logn) Find the length of longest bitonic subsequence in an array Given an array with all distinct elements, find the length of the longest sub-array which has elements(not in any particular order) that could form a contiguous sequence Find an integer array corresponding to the string specifying increase-decrease transitions Gold Mine Problem Find median of two sorted arrays Find Majority Element in an Array 0-1 Knapsack Problem Count all possible decodings of a given digit sequence Find total number of ways to make change using given set of coins Find increasing sub-sequence of length three having maximum product Find increasing sub-sequence of length three having maximum product | Optimized approach Set Partition Problem | Recursion Set Partition Problem | Dynamic Programming Trees and Graphs Problems: Pre-order Traversal of a Binary Tree Post-order Traversal of a Binary Tree In-order Traversal of a Binary Tree Binary Tree Level Order Traversal Spiral Level Order Traversal of a Binary Tree | Set 1 Print right view of a binary tree Print all nodes of a binary tree that do not have sibling Print all Root to Leaf paths of a Binary Tree Minimum Depth of a Binary Tree Print left view of a binary tree Find sum of all left leaves of a binary tree Find depth of deepest odd level leaf node Check whether a binary tree is a full binary tree or not Check whether a binary tree is complete or not Check if two nodes are cousins in a Binary tree Check if two binary trees are identical Check if all internal nodes of BST have only one child without building tree Convert the given n-ary tree to its mirror image Convert a binary tree to its mirror tree Print top view of a binary tree Print top view of a binary tree using level order traversal Print bottom view of a binary tree Print bottom view of a binary tree using level order traversal Remove the nodes of binary search tree which are outside the given range Remove all nodes which lie on path having sum less than k Remove all the half nodes from a given binary tree Print binary tree in vertical order Populate right neighbors for all nodes in a binary tree Lowest Common Ancestor of two nodes in a Binary Search Tree In-order Successor of a Node in a Binary Tree Recover a Binary Search Tree if positions of two nodes are swapped. Find floor and ceiling of an element from given dataset using binary search tree Diagonal Sum of a Binary Tree. Create a balanced Binary Search Tree from a sorted array Convert a sorted Doubly Linked List to Balanced Binary Search Tree Convert a binary tree to doubly linked list Check if a binary tree is balanced or not Check if a binary tree is a binary search tree Check if two binary search trees are identical given their array representations | Set 2 Check if two binary search trees are identical given their array representations Check if a binary tree is sub-tree of another binary tree in time O(n) Check if a binary tree is sub-tree of another binary tree in space O(1) Binary Search tree | Insertion and Search Binary Search tree | Deletion Check if a given binary tree is symmetric tree or not Check if the given n-ary tree is symmetric tree or not Total number of possible Binary Search Trees with 'n' keys Find the size of largest BST in a binary tree Lowest Common Ancestor of 2 nodes in a Binary Tree Find height of the binary tree from its parent array representation Convert binary tree to binary search tree Construct the binary tree from its parent array representation Construct binary tree from inorder and preorder traversals Construct binary tree from inorder and postorder traversals AVL tree | Basics AVL tree | Insertion AVL tree | Deletion Trie Data Structure | Insert and search Trie Data Structure | Delete Pattern matching using Trie Longest Prefix Matching using Trie Given a sequence of words, group together all anagrams and print them. Serialize and Deserialize a binary search tree Serialize and Deserialize a binary search tree using post order traversal Breadth first search in a graph Topological Sorting of a Directed Acyclic Graph. Minimum number of trials to reach from source word to destination word Friend Circles Problem - Graph Theory Dijkstra's Shortest Path algorithm Bellman-Ford Algorithm Dynamic Programming Problems: Fibonacci Number Maximum subarray sum Word Break Problem Total number of possible Binary Search Trees with 'n' keys Subset Sum Problem Shortest Palindrome Palindrome Min Cut Minimum number of trials to reach from source word to destination word Minimum number of coins to make change Find minimum cost path in a matrix Longest Palindromic Substring Longest Palindromic Subsequence Find the length of longest increasing subsequence in an array Longest Increasing Subsequence O(n logn) Longest Common Substring Longest Common Subsequence Find the length of longest bitonic subsequence in an array To print maximum number of As using given four keys. Gold Mine Problem Find minimum edit distance between given two strings 0-1 Knapsack Problem Distinct binary strings of length n with no consecutive 1s Count all possible decodings of a given digit sequence Find total number of ways to make change using given set of coins Set Partition Problem | Dynamic Programming Once you have a good practice on the questions, you can then try solving as many problems as you can at: Problems | LeetCode OJ Sphere Online Judge (SPOJ) Give yourself daily challenges starting with easy targets. For example: Week 1: Easy target - 1 question per day Week 2-3:  2 questions per day By end of 3 weeks, you would have completed 35 questions and cultivated a habit of coding everyday. Keep practicing.. All the Best! Hope this helps. Updated 3w ago • View Upvotes • Asked to answer by Prateek Chauhan