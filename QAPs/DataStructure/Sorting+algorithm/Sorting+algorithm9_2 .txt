What are the most important sort algorithms?According to me, Heap Sort is really important and useful. We can use simple array to implement and maintain heap, and we can also get good running time. Binary heap is really simple. Courtesy: Heapsort - Wikpedia The upper-bound for heap-sort running time is O(n log n) which is same as Merge-sort and better than Quick-sort in worst case. The advantage over merge-sort is that it's in-place Although, the problem is that heap-sort is not stable. However, when you don't care about the stability it's better to use heap-sort. A (max-)heap is a like a tree-structure in which the key-value of the parent is higher than its children. When you want to insert a value, you just need to add the key-value in the last node of the heap, and then you have to maintain the heap-property (which is also really simple). Being a tree-structure, the maintenance is not much costly. Here is the time-complexity of different operations in a heap: Courtesy: COS 226, Fall 2014: Home Page P.S - One of the reason of this answer is my own exercise. :P 