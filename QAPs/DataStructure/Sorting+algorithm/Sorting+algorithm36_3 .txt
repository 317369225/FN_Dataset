Is there any sorting algorithm with running time log(n)?If the only thing you know about your data is what you have from a comparison function, that is, if you need to use a comparison sort, then there's a known lower bound for sorting, which is $O(n \log{n})$. If you know more, such as the fact that you sort numbers, then there are sorting algorithms which are linear. However, most (all?) have the form $O(kn)$ where $k$ can be argued to depend on $\log{n}$ for regular inputs. But that's just if you limit yourself to serial algorithms. There are parallel sorting algorithms. Parallel Merge Sort is $O(n)$ for example. But you need extra processors for it. There are also things called sorting networks, which are basically special purpose circuits built out of comparator units and wired together in a certain fashion to sort an input vector. There are simple networks which can get you to $O(\log^2{n})$. I also think there is a design for an optimal such network, which can do a sort in time $O(\log{n})$, which is what you might be looking for. Wikipedia can help at this point. 