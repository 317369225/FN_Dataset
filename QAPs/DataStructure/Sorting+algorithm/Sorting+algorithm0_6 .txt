What is the fastest sorting algorithm?I checked out the Wikipedia page for Sorting algorithm. The best sorts are Quick Sort, Heap Sort and Merge Sort. Most say that Quick sort is the fastest, but Merge Sort has the time complexity of O(n log n) and so does Heap Sort, even with the worst case. So, actually which sort is the fastest?It depends on your input. For a trivial example input of say, an already sorted list, the fastest sorting "algorithm" is to just return the list. Admittedly, this "algorithm" would be wrong for inputs that aren't sorted. For randomized data, merge sort and quicksort are pretty much the same, speed-wise. For "real" data like people name lists or street addresses or experimental data, TimSort shines, because it bakes this assumption in of "almost sorted" data and leverages it to do less work. For a random list of integers from 1-1,000,000, the fastest "algorithm" is to just generate the list of integers again, rather than comparing them. Any and all assumptions you can make about your input data can be used to speed up your sorting algorithm and make some algorithms faster for certain types of input than others. 