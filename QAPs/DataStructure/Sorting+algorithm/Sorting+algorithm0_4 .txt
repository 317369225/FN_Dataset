What is the fastest sorting algorithm?I checked out the Wikipedia page for Sorting algorithm. The best sorts are Quick Sort, Heap Sort and Merge Sort. Most say that Quick sort is the fastest, but Merge Sort has the time complexity of O(n log n) and so does Heap Sort, even with the worst case. So, actually which sort is the fastest?I am not aware of Tim sort as mentioned above but in my view in place quick sort is the best bet with constant space complexity. Based on the theory of randomization, here is why: Consider this worst case with 7 numbers: 10 9 8 7 6 5 4. If we adopt a strategy to constantly use left number as pivot, the result would be a skewed partition tree. Result, a O(n^2) time complexity algorithm. But in practice this rarely happens or should I say impossible to happen, if we change our strategy and use random pivot. The probability of having a median which distributes the data into two equal parts in 1/n because there is exactly one element we can choose. But the probability of choosing a good enough pivot which lie in the center half (n/4 to 3n/4 range) is quite good in general and will amortize the choice of bad ones. It is simple to prove that if pivot is randomly chosen from this good enough range and it partitions data in skewed partition of 1/4 & 3/4 in worst case, the height would be log 4/3 n. On average, random quick sort partition trees are quite good which normally results in good average running time, close to O(n log n). If we are extremely unlucky and the pivots always fall in under n/4 and above 3/4n range at every step, it might result in close to O(n^2) time but chances of that happening is very low based on theory of randomization. Randomization is a powerful tool which makes quick sort run in average time of O(n log n) with high probability for any data set. Merge sort and heap sort also provide time complexity of O(n log n) but merge sort generally requires O(n) space for less complicated implementation but there are more complicated implementations which can work in place. Heap sort can be used too but comes with its own pros and cons. See my answer on heap sort Pawan Bhadauria's answer to Why is heap sort used? for details related to that. 