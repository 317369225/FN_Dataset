In what situations are different sorting algorithms best suited?By situations I mean things like huge set of numbers within a small range and etc.Every sorting algorithm has its own pros and cons when it comes to doing its job of sorting. The best choice of a sorting algorithm depends on the properties of the data being sorted and IMHO there can be no generalized guidelines for choosing one algorithm over another. I believe that you must study your data being sorted and see what special properties does it have? Are there any nice properties exhibited by the data set being sorted? If so, this will help you choose the best possible sorting algorithm for sorting. Next, you should also know if there are any special requirements of your application. For example, (a) can you accept an "unstable" sorting algorithm or do you need only "stable" sorts? (b) Is it possible to load the data into memory or is the data so large that it has to be sorted in files (external sorting)? (c) Is all the data available in one place or is it segmented in some fashion (needing some kind of merge sort algorithm)? Just like any other expert craftsman, you need to know your raw material (data) and match it to the right tools (sorting algorithms)! And begin by acquiring a wide variety of specialist tools! 