Which sorting algorithms have the least best case complexity?The best case time complexity of any serial sorting algorithm is at least O(n) since the algorithm needs to process the entire input to ensure that the result is sorted! For a normal sorting algorithm with arbitrary inputs this best case can apply to at most O(c^n) of the O(n^n) possible inputs. While this is a very small proportion for large n, it may still be advantageous as it often applies to almost sorted inputs that come up disproportionately often. Common sorting algorithms with a best case complexity of O(n) include insertion sort and Shellsort, as well as the derided bubble sort and the tongue-in-cheek bogosort (mentioned in the other answers). Algorithms that sort integers within a known range, rather than arbitrary input, can manage O(n) complexity for any input. These include bucket sort, counting sort and radix sort. For parallel algorithms with O(n) processors, the best (and average) case time complexity is at least O(log n), which again is the minimum required to check whether the input is sorted. For an in-depth discussion of such algorithms, see Which parallel sorting algorithm has the best average case performance?. 