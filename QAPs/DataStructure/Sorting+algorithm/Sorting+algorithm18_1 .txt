Why does the stability of a sorting algorithm matter? Are there advantages to using stable sorting algorithms?Stability of sorting algorithms is useful when you want equal items to be returned in the same order they entered -- this may seem vacuous: if they were equal, why would we care? The distinction (and the usefulness) comes from sorting items where the sort key is not the entire identity of the item. Consider a person object with a name and a date of birth. Let's say we did some sort of preordering based on their name. If we were to then sort by age in a stable way, we'd guarantee that our original ordering would be preserved for people with the same age. In practice, I've only run into a couple occasions when I needed a sort to be stable. When you need it, however, it's very nice to have. 