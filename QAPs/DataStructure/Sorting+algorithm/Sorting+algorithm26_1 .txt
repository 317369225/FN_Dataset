Which sorting algorithms have the least best case complexity?Any sorting algorithm, even an extremely bad one, can be given a best-case complexity of O(n) by preceding it with an O(n) "is-sorted" test, ensuring that in the best case (that is, when the list is already sorted) the algorithm completes in O(n) time. Jacob VanWagoner's answer to this question provides an absolutely awesome algorithm that has best-case complexity of O(n) and no defined worst-case complexity, because it is not guaranteed to terminate on nonsorted inputs. Determining its average-case complexity is left as a fairly nontrivial exercise to the student. 