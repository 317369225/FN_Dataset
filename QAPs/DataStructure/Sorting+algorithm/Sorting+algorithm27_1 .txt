Sorting Algorithms: different cases: speed?该网页不存在附加信息...1) You're basically asking for the constant factors for each algorithm. In this case, Quicksort wins out. I believe Mergesort and Heapsort come after that in that order, but I'm not certain on that note. 2) Ironically, yes, Insertion sort would be best for an almost-sorted array despite it having an average case of . On a nearly-sorted array, Insertion sort approaches its best case of time. This is because Insertion sort will iterate through the array and rarely find the case where the th element is smaller than the th. 3) Well, you don't exactly need a sorting algorithm for this. You could reverse the array is comparisons. But, if you were forced to choose, Shellsort would win, but not by much I think. I don't have much of an explanation for this though. You can view animations of the sorting algorithms under each of the above cases here: Sorting Algorithm Animations. 