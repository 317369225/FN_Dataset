What would be the best sorting algorithm to solve TSORT question in codechef?Turbo Sort I tried quicksort but my time limit still exceeded. I tried creating a binary search tree and printing the in order traversal still i exceeded the time limit What would be the best sorting algorithm for such a large input?You can do counting sort. How Counting sort achieves O(n) time complexity? It makes use of extra space(array B) in which the sorted output is stored. Here, the sole idea is to count the number of elements less than or equal to the concerned element and hence gets the position of element in the sorted array. example: sort: 5,3,1,4 say for 3, elements that are less than or equal to it = 1 hence its index = 1 Array 'C' is given the above responsibility in provided implementation. Complete implementation  1 2 3 4 5 6 7 8 910111213141516171819202122232425262728293031323334353637 /* *author:akash1600 */ #include <stdio.h> /* *'A' is i/p array, 'B' stores sorted output, *'k' is max limit for each element, *size is length of array */ void counting_sort(int *A,int *B,int k,int size){ int *C =new int[k+1]; for(int i=0;i<=k;i++) C[i] = 0; for(int j=1;j<=size;j++) C[A[j]] =C[A[j]]+1; for(int i=1;i<=k;i++) C[i] = C[i]+C[i-1]; for(int j=size;j>=1;j--){ B[C[A[j]]] = A[j]; C[A[j]] = C[A[j]] - 1; } } int main(int argc, char const *argv[]) { int size; scanf("%d",&size); int *A = new int[size+1]; int *B = new int[size+1]; for(int i=1;i<=size;i++) scanf("%d",&A[i]); counting_sort(A,B,1000000,size); for(int i=1;i<=size;i++) printf("%d\n",B[i] ); return 0; } 