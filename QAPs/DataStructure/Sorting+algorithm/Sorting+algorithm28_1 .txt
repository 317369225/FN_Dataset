How does randomized quick sort perform better than the standard quick sort algorithm?Why should anybody care about a sorting method that is not optimal (has more than linear growth)?Both the deterministic and randomized quicksort algorithms have the same best-case running times of and the same worst-case running times of . The difference is that with the deterministic algorithm, a particular input can elicit that worst-case behavior. With the randomized algorithm, however, no input can always elicit the worst-case behavior. The reason it matters is that, depending on how partitioning is implemented, an input that is already sorted--or almost sorted--can elicit the worst-case behavior in deterministic quicksort. 