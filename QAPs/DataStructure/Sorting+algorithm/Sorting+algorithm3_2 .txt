What is the best manual sorting algorithm?For example, if you had a stack of papers that you wanted to sort alphabetically, what would be the most efficient way to do it? What if you were okay with them being off by one or two from their sorted position?A related problem that's also interesting to consider is how Jinghao Yan and Lekan Wang's excellent answers scale to multi-person sorts. I can provide a little anecdotal evidence here: a year ago, a few HKN candidates and I were collating class evaluation forms (numbering in the low thousands), and we needed to sort forms by class number (for easy access later). So we ran an experiment with 3 different sorts and about 2-3 people working per sorting algorithm. We used: quick sort (with communication about what the chosen pivot was at any particular point) local merge sort at an individual level, followed by a global merge least significant digit radix sort (using class numbers). Merge sort was the fastest, followed by LSD radix, with quick sort lagging well behind. An interesting space consideration to note here is that we were not too restricted in available physical space: each team was able to spread out their sets into rough array approximations. 