How can a person get selected in Google Summer of Code?
TL;DR Do not apply for GSoC if you are not an Open Source Enthusiast! First of all, you should understand how Open Source Software(OSS) works and how these OSS organisations operate.Understanding correctly the GSoC program itselfÂ  will go a long way in ensuring that you get selected and do well in the program as well. (Trust me , I have seen some of the best coders having a hard time getting a hang of the structure of the program and OSS in overall) Below I list some of the crucial steps involved in the process. Depending on the time at your hands, you may want ot pace yourself accordingly. Step 1. Once you understand the in and out of the world of Open Source, start with the list of accepted organisations in the past years and pick one of them.The way you choose an organisation depends on a lot of factors. e.g. Products/services that they build (Do they really interest you?) Projects that they are working on Programming languages they used to code Other tools,technologies and platforms they use for their products NB .Though it is not guaranteed that they will participate again or get selected for the program, but that is the best you can do, and earning some knowledge and experience will never hurt. Step 2. Having selected an organisation, your next step would be to contact the organisation telling them about yourself (in most cases - that you are a software developer who is new to their products/applications/platforms etc.) and how you wish to contribute to their codebase. Most of the open source organisations are very pro-active in responding to new developers and hopefully, you will soon get directions from them telling you how to move forward. Ways to contact the organisations: Mailing lists, IRC etc. (You will find this information from their pages on the GSoC website(http://google-melange.appspot.co...) itself. Step 3. Now that you have inputs from the developers of the organisation, you can get started with getting yourself familiar with the codebase. These applications/products usually have huge codebases and making sense out of it may be pretty daunting at first. But, a little perseverance at this stage may prove decisive of your future with both GSoC and Open Source in general. [One of the reasons that this is difficult is college students usually do not have to deal with such large pieces of code; and this is what GSoC brings to the table. Provided that you get through, this will be one skill that you will cherish having, for life.] However there may be a certain approach that you can try to follow. I believe your best bet is to pick up a simple bug/feature-request from the bug tracker of the given application and try to solve it.Not only this will increase your chances of acceptance dramatically, it will also help you get familiar with the developers (from whom you will seek help while solving the bug) and of course, the code itself. Again, an important thing to remember is to make your presence felt amongst the developer community. This will help you at later stages of the application process. NB. When I talk about making your presence felt, I try to refer to your coding abilities and nothing else. At the end of the day, these skills will only decide your fate ;) Step 4. Provided you manage to solve the bug or develop that feature, the next step will be to commit your code to the Trunk/Central Repository. I assume if you are a beginner, then the above line didn't make much sense to you ;) But the good part is that what you are going to learn in the process of understanding what I just said is one of the best things that you would have learnt in your life. Enter Version Control Systems(VCS) - go and learn the one your organisation uses to maintain code repositories and track contributions. The most common ones are Git, Mercurial, SVN etc. A blessing for software developers , this might be the one thing, I bet, which can separate you from other coders at the university ;) Having learnt the basics of VCS , commit your code and do the victory dance :) Step 5. Next is the application period. As soon as Google announces the list of the accepted organisations, start looking for the prospective project ideas.Think over how you can go about executing these ideas.Talk to the prospective mentors about what you think of the idea and may be fetch more details about the ins and outs of project. Though Google allows you to submit your own original ideas as well, I have always believed that its better to choose from the list of the ideas provided by the organisation itself as it shows the importance of that idea to that organisation.However, if the idea is truly meaningful and has a feasible implementation plan, there have been instances where original ideas have been accepted as well. (In my case, the project idea that got accepted for GSoC '13 was my own ;)) If you haven't already , keep working on that bug and solve it, because if you haven't really proved your coding skills to the organisation yet, then your chances of getting accepted gets even slimmer , no matter how strong your application maybe. Step 6. Now, once you have zeroed in on a project idea, start discussing the ideas in detail with the mentors(prospective) and ask relevant questions.You can even code a small part of the project, by doing that you really improve your chances ;as you gain the confidence of other developers and mentors. Start writing the proposal as early as possible. The main idea behind having a ten-day window for the application period is to let students and mentors discuss the ideas in as much depth as possible,make sure that before submitting the proposal, you get your proposal reviewed by your mentors as much as possible, Though there is no particular way of writing a proposal (every organisation has its own template), the main ingredients of a good proposal are that it should address two kinds of audiences - one which is completely familiar with the technical details of the project(that would be your mentors and organisation devs) and the second one is a neutral not-so-technical audience which is able to understand the deliverables of the project(in most cases that would be the user base).However, try to focus on the former as much as possible;) Once you turn in the proposal, make sure that you stay in touch with the organisation and keep discussing your proposal,The best way to kill that irritating wait for the results is to start coding up your idea ;) Step 7. The Result: Provided that you have followed and done well in the above six steps, I would be really surprised to see you not being among the accepted students ;) But again, if you still manage to surprise me, you shouldn't be discouraged from pursuing your idea and still converting the idea into a full-fledged project. (and that is the beauty of open source :D), even without the Google - swag and the stipend of course :p Step 8. Even if you have been accepted into the program , remember its just the beginning and the best is yet to come :) Work hard on the project. Learn as much as possible. AND most importantly, Complete it! You would be surprised to see the number of students who fail in the mid-term and final evaluations after working so hard to get accepted. So,don't get complacent and have fun while coding \o/ Though I have tried to cover most of the generic details possible, GSoC consists of around 180 organisations, hence the process may vary slightly accordingly. Do let me know if you think differently :) 