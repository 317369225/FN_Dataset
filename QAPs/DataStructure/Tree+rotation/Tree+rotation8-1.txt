While balancing an existing binary search tree during insertion of an element (converting to an AVL tree), how should decide whether to use single rotation or double rotations?
Dharmesh Guna has mentioned the link I was going to suggest :) I'll just give a brief theoretical explanation for the rotation. Whenever we find an imbalance, we try to find the lowest point where the imbalance starts and fixing that keeps the tree in shape. There are four cases: LL RR - require single rotation LR RL - require double rotation This notation refers tells us that by traversing in the X direction followed by the Y direction from the lowest point of imbalance, is the branch along which we just inserted the last node. Eg. Inserting 10, 20, 30 10 10    20 10    20      30 10 is the first point of imbalance - after which we moved right and right - RR case. So we do single rotation and get    20 10 30 