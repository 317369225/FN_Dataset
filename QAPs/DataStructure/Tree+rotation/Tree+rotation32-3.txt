What are some algorithms and data structures which should definitely be included in one's ACM ICPC team notebook?
As an added comment to all of the answers above, I feel like it should be emphasized that the process of making the notebook is often much more important than having the notebook present at the competition. Make sure you understand at least how to use the content you have in there, if not their entire implementation details and theory. You do not want to be trying to figure out code you've never seen before in your life during the competition. For different algorithms the level of what you need to understand could be quite different. For example, you should really know every bit and piece of the max flow code, because there are so many ways of modifying problems such that you can't just run the canned max flow and hope for it to work. On the other hand, it is perfectly fine to use simplex as a black box, not caring about the theory or implementation behind it. Other algorithms you may only need to know the theory behind it, and not the implementation, such as the mentioned suffix array, or the heavy-light decomposition. 