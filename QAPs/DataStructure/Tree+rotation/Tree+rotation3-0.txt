When balancing a binary tree with AVL rotations (using the creating-the-binary-tree -then-balancing method) what is the correct way to balance it?
Any construction of a binary tree from [math]n[/math] unsorted elements will necessarily take [math]\Omega(n\log n)[/math] time (since sorting takes [math]\Omega(n\log n)[/math] time and a in-order traversal of a binary tree produces a sorted list of the elements in [math]O(n)[/math] time). Given this I'd construct a balanced binary tree from [math]n[/math] elements by Sorting the elements. Placing the median as the root. Recursing with the elements less than the median as the root's left neighbor. Recursing with the elements greater than the median as the root's right neighbor.This is very simple to code and takes [math]O(n\log n)[/math] time, which is the best possible. The other methods you proposed can work, but they're messier to write and prove correct. 