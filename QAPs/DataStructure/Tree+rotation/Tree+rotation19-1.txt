What is an AVL tree?
AVL tree is abinary search tree in which at any given node,  the heights of left and right subtrees can not differ by a value greater than 1. So, an AVL tree is a self balancing BST. Example of an AVL tree is: ​ An AVL tree maintains its height balance by performing rotation  operations if any of the nodes violate the AVL tree property of height  balance(difference of heights for left and right sub-tree greater than  1). Example-1: For the following tree, AVL tree property is violated at node '5' because left subtree has height 2, but right sub tree has height 0, so they differ by 2.  ​ The  height of the left sub-tree is greater than the height of the right  sub-tree by 2. This difference of 2 is contributed by two left branches -  branch 5-4 and branch 4-3. If the difference of 2 is contributed by two  left branches then we call this case a left-left case. In this case, we  perform a right rotation as shown below. ​ Example-2: For the following tree, AVL tree property is violated at node '8'. ​ The  height of the left sub-tree is greater than the height of the right  sub-tree by 2. This difference of 2 is contributed by one left  branch(branch 8-4) and one right branch(branch 4-6). If the difference  of 2 is contributed in such a way that one of them is the left branch  originating from the node at which height balance is violated(node '8'  in this case) and remaining contributing branch is the right branch,  then we call this case as left-right case. To restore height balance in  this case, we first perform a left rotation followed by a right rotation  as shown below. ​ The following two examples are structural mirror images of above two examples. Example-3: This is the right-right case and is structural mirror image of example-1. ​ To restore the balance, we need to perform left rotation as shown below. ​ Example-4: This is the right-left case and is structural mirror image of example-2. ​ To restore the balance, we need to perform right rotation followed by left rotation as shown below. ​ Checkout these links for more details and implementation: AVL tree | Basics AVL tree | Insertion AVL tree | Deletion 