What was your favorite computer science applications class and why?
"Introduction to AI using Prolog" involved a lot of logic programming. After Fortran, Pascal, ANSI C, Assembly language, Ada83 and other courses in my 80-90s with a lot of previous practice in imperative languages - it was a lot of fun to solve even comparatively complex problems (8 queens, Eulerian and Hamiltonian paths finding, coloring problems, game programming, expert system programming) using a compact declarative syntax. LPA Prolog allowed to build even GUI (pseudographics in ASCII) and I succeeded to make even a GUI interface for my car repair expert system (my final work for the course). Using a dialog conversation with the user the expert system was narrowing down the problem of a car failure, starting from the general and narrowing down the problem, and the (business) rules were given to the system as simple Prolog clauses. Actually, I had taken the real rules combined by auto experts published as a set of cards for DIY mechanics (a big flow chart, graph with questions/answers, every card is a set of questions and options etc). It was easy to may the business rules to the Prolog logic. It was fun to concentrate on mathematically pure logic (so we were able to implement more applications in the class) rather than spending most of the time on language artifacts as in other (imperative) languages courses. But there was a catch there, right? More abstractions means less control on the execution order which we were missing. But regardless of that at that time I had seen the future in that (declarative) way of programming. So efficient programming! So many beautiful, concise, short applications done in just one semester! 