When should we use BFS instead of DFS, and vice versa?Can you give some examples?
Well BFS and DFS have their own set of applications where each of them are very useful and applying the other one will not be useful. They have different implementations. DFS is a recursive algorithm whereas BFS is an iterative one and is implemented using a queue..Although you can implement DFS using a manual stack as well. We use BFS for applications such as when we want to find the shortest length path between two nodes in an unweighted graph. It also helps to track back that path. We use DFS for a wide array of applications a few of which are as follows Cycle detection in a graph Solving a maze because in DFS you explore every possible path before backtracking. Checking if a graph is bipartite or not Finding out strongly connected components of a graph. Longest path between two nodes in a graph etc. Updated 24 Oct 2014 â€¢ View Upvotes