What are the 10 algorithms one must know in order to solve most algorithm problems?
Dynamic Programming should cover a lot of things , It is not basically a single algorithm that can just be learned and used again and again , I heard someone say that DP is the toughest thing in Competitive programming. You need to know lot of data structures to actually apply DP perfectly. ANd many problems in competitive programming are based on either DP(still learning) or ad-hoc( I hate these). Greedy Algorithms ( I was fascinated by them , by the description i once read , which was as follows "A greedy algorithm is an algorithm that follows the problem solving heuristic of making the locally optimal choice at each stage" . Search and Sorting - I literally mean all of them , you should know when to use which algorithm , I would like to give a special mention to medians of median. Graph Algorithms like Breadth search and Deapth Search and stuff Like that. You should also have a look at NP-Complete problems , they are a class of their own , and a slight variation of these problems can get you a optimal solution Data Structures - Have Your Data structures in order , like storing data and arranging them plays a huge role , if you don't want a TLE(Time limit exceeded) Knuth Morris Algorithm Game theory Dijkstra ALgorithm Practice a lot of problems ( this is an important one .. make sure you get this one correctly) Updated 29 Jun â€¢ View Upvotes