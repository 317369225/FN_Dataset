What all basic data structures and algorithms should one learn before starting competitive programming?
I will ask you a question, though: why do you want to enter competitive programming? Of course, some people love the challenge and getting to the top (I know a few of these, and they are brilliant indeed.) But when programming for the real world, usually you don't need anything specially out-of-the-box for 90% of the cases. So, great, CP will train you for the other 10%, but usually this 10% you can pick on your own if you are smart enough, no need to keep banging your head against some relatively unnatural problem for months at a time. As for the GSOC, I know at least that for the Plan9 program, from what I've seen when application time comes up, as long as you have something to do and someone within the program to watch over your work you could do it. Of course, CSE's might have priority (writing a new kernel scheduler is not easy task and needs very specific knowledge, for instance,) but you can always apply. Rejection comes later, after applying. 