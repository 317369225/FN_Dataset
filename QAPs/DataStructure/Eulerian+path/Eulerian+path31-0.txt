How should one start to learn computational biology?Assuming little-to-no background in biology and chemistry, but some background in computer science and upper-level mathematics.
I get asked this question (and its variants) a lot, there are plenty of good answers on Q already. So, I am going to compile all the answers here, and add my comments. What you should know about computational biology:Computational biology is a really broad field. I can think of three main streams of work: Application of computational methods to understand biological processes (or scientific computing). Using biological data to develop algorithms or theoretical models. Writing scientific software for biological research. Each of the above three have different requirements. For example, if you are interested in scientific computing, physical chemistry and C/C++ are essential. Whereas, if you are a bioinformatician, molecular biology && Python && R might be more useful. Therefore, figuring out your interests will help narrow down the requirements. Since computational biology is a really broad field, this answer will not be comprehensive. Related questions: What is the difference between bioinformatics and computational biology? What is the relationship between systems biology and computational biology? Is it possible for one to pursue individual studies of computational biology? If so, where can one begin? Online Forums:Keith Callenberg's  answer to What are some good forums for computational biology? You might check out Biostar, a stackexchange-based site that covers a lot of comp bio and genomics topics: Latest Posts. But it is designed as a Q&A site similar to Quora. I think in computational biology, people tend to join mailing lists that are application- or library-specific. For instance if you're doing molecular dynamics, there are a lot of interesting questions and answers on the mailing lists for GROMACS, NAMD, and CHARMM. Or if you're working in protein folding or docking, the lists for Rosetta and Autodock are similarly very active. For a general interest place to hang out, you might try IRC. On irc://irc.freenode.net you'll find that #biology and #bioinformatics are pretty active channels and they have people with a wide assortment of backgrounds. Requirement List: Sam Sinai has a comprehensive post on this [Sam Sinai's answer to Bioinformatics: What should I do to become a bioinformatist?] Learn as many of these as you can, at least one in each category: Programming Languages:  C/C++, Python (with numpy, pandas, scipy ...). Optional: R, MATLAB. Math: Basic algorithms, Linear Algebra, Differential Equations, Probability. Data Analysis: Regression, Machine Learning (Clustering, Classification, Neural Nets, Bayesian methods, Boosting), MCMC methods, Hidden Markov Models. Computing: Parallel computing, optimization, distributed systems, Numerical Methods. Biology (standard): Molecular Genetics, Biochemistry, Bio-phyiscal thermodynamics (or Statistical Mechanics). Biology (theory): Population Genetics, Coalescent Theory, Evolutionary Game Theory, Network Theory.Also try to learn as much as you can about the process from which you receive data. Understanding processes like RT-PCR, Next-generation sequencing methods, single cell transcriptomics, and the like can help you a lot. Read these Journals: Bioinformatics, Genome Research, Nature Biotechnology, Nature Genetics, PLOS Comp Bio, BMC bioinformatics. Janu Verma has another list [Janu Verma's answer to If I want to start with bioinformatics or computational biology, what topics should I learn? What are the actual challenges in this field?] "As an interdisciplinary field of science, bioinformatics combines computer science, statistics, mathematics, and engineering to study and process biological data" -  Wikipedia. As a bioinformatician, you will need to equip yourself with basic knowledge in all these areas. Computer science • Python, Perl, R or some other scripting language. • Basics of Unix - (sort, cut, grep, awk, sed,..) • Search and sorting algorithms • String manipulation e.g. edit distance, alignment etc. (used in genome alignment) Statistics Hypothesis testing e.g. χ2-test, t-test, Fisher exact test. (Used in association studies) Bayes theorem and Naive Bayes assumption. Maximum Likelihood Estimation (MLE) and Maximum a posteriori (MAP) estimation (statistical genetics). Expectation - Maximization algorithm. (used in HMM, GMM) Markov Chain Monte - Carlo methods. Mathematics • Linear algebra - Linear equations and matrix factorizations • Graph theory - Eulerian and Hamiltonian paths (used in genome assembly) Sequencing NGS : Jay Shendure, Hanlee Ji (2008) Next-generation DNA sequencingNature Biotechnology 26, 1135-1145(2008)Three very important steps in computational biology/bioinformatics studies are - Alignment Assembly Variant calling  I wrote about some references on these topics and introductory readings for someone new to bioinformatics in another post - Diving into bioinformatics : Introductory studies for a mathematician/statistician or a computer scientist by Janu Verma on Ripples in Water To add to the above: Biophysics: Polymer physics, nonequilibrium statistical mechanics, quantum mechanics, theoretical dynamics Journals(specific to scientific computing): Journal of Physical Chemistry, Journal of Chemical Physics, Journal of Chemical Theory and Computation, Biophysical Journal, Physical Chemistry Chemical Physics, Soft Matter, Physical Review Letters Other helpful answers: How  is R used in Bioinformatics? What would you suggest for a person majoring in computer science to understand biology, so as to better become a computational biologist/bioinformatician? What are the best ways to get started with genomics? PS: Edit suggestions are welcome. 