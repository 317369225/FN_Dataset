I want to practice algorithms for 10 days (240 hours). Where should I start?I have fair knowledge of Algorithms.
As I started programming pretty much as a hobby while in a very lax semester in college, I think my experience might be useful for you. I didn't learn even the ABC of programming in 10 days. It took far more time, although I didn't really perceived it because I didn't have a clear goal. My first approaches to coding were a series of disconnected, unsuccesful attempts at varying times in my life, starting at age 9. I didn't really learn anything useful. I only read a few pages of an assembly language back then, then I found some basic source code and mimicked it's syntax (which I didn't know what even meant at the time) until I had a console joke kinda working. If I want to just steal merit, I did edit a few HTML files, which kinda counts as source code, I guess. Then I left programming until I was around 19, in the second half of 2010. Then, I got a friend to teach me the VERY VERY basics of C, and put myself to solve some project Euler problems in a piss-poor way. I've got the code lying around for the ~15 problems I've managed to solve, if you want a good laugh. Then, again, I stalled. However, in 2012 I did a few things that got me steamed again. The first one, was a Coursera python course, taught by the University of Toronto, IIRC. The second one, was doing around half of a different course, oriented towards low-level programming in C. I didn't manage to complete it because I wasn't too debugger friendly at the time and I didn't really have as much spare time as before. But what I believe made it for me was finding a simple, solo project to work on. Once you find something you can hack for fun, without nobody setting deadlines and that keeps you interested, you'll start practicing and you won't perceive it as such. It won't be in 10 days. You won't be a master of algorithms. But you'll get smart and enthusiast enough through practice to actually face the challenge of understanding algorithms formally. Nowadays, I've started studying CS (well, actually I'm inscripted since 2010 to both CS and Chemistry, but my focus was on Chemistry all of this time, and I was pretty bad at both anyway), and recently got a job as a junior programmer. I'm clearly not the best, but if they judged what I accomplished as just a hobbyist to be payroll quality, then I'm not nearly the worst either. TL;DR version: just find something to work on. At least for me, the only way to keep practicing enough to be decent is to not perceive it as practice, as that makes it quite tedious. 