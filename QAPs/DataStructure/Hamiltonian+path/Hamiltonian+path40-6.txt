What are P, NP, NP-complete, and NP-hard?
Originally Answered: What is NP Hard Problem in Layman's language?First, let's understand what NP is. Suppose you stumble upon a Sudoku puzzle that you just can't seem to solve. Then, a friend walks up to you and boasts, "Haha! I know the answer to the problem!" Amazed, you tell your friend, "Prove it!" Your friend fills out the empty spaces in your Sudoku puzzle, and behold, upon a quick glance, you've verified that the answer is correct. "How did you do that?" you asked your friend. He responds, "It doesn't matter ;)" Sudoku is an NP problem because it you can "quickly" verify a solution to a Sudoku problem. (By "quickly", I really mean "in polynomial time.") It doesn't matter if you can actually figure out the solution quickly or not. All that matters for a problem to be in NP is if a solution can be verified quickly. Now, let's move on to NP-Hard problems. Looking at your Sudoku puzzle, you wonder, "Well, I can't solve Sudoku puzzles quickly... But what if, I had a magical ability to instantly solve any Sudoku puzzle in the blink of an eye!!!" The answer to this "what if" is pretty cool. It turns out that if you did have the magical ability to solve any Sudoku puzzle instantly, you can use this ability to solve (not just verify) any NP problem quickly (in polynomial time) as well! For example, given the ability to solve Sudoku puzzles instantly, you can use this magical ability to help you quickly figure out if a FreeCell game is actually completable. (Note that this may not be very "easy" to do, but computer scientists have proven that it is possible, which is all that matters.) Thus, Sudoku is in NP-Hard. In summary, an NP-Hard problem is a problem such that, given the magical ability to instantly solve it, you can use this ability to solve any NP problem quickly. So this is the layman's version of the definition of NP-Hard. But why "Hard"? Well, if you think about it, NP-Hard problems are quite powerful in the sense that if you can magically solve them, the possibilities are endless. Of course, if a problem is very "powerful", then you wouldn't expect it to be easy to solve, right? In contrast, easy problems, like addition, don't grant you a lot of power in the sense that being able to do addition instantly doesn't really help with solving other NP problems quickly. So powerful problems, like Sudoku, are at the same time very hard to solve, hence the term NP-Hard. Footnote: Sudoku is also in NP-Complete. The only difference between NP-Hard and NP-Complete is that NP-Complete problems must also be NP problems, but NP-Hard problems do not have this restriction. 