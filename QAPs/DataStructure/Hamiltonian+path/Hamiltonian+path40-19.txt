What are P, NP, NP-complete, and NP-hard?
I've been trying to understand this P vs NP thing for a while now, and one of the reason it was hard to get my head around is obviously getting to understand Polynomial Time Reduction. I mean what I basically needed I guess is to see a concrete example or something of a polynomial time reduction, maybe even some code ... And that's exactly what I found Udacity's online courseÂ  "Introduction to Theoretical Computer Science". https://www.udacity.com/course/c... I did a LOT of research about the P vs NP theory for weeks and the online course is really the most easy and fun way I found to understand the whole thing. (and a lot of other things about theoretical computer science) 