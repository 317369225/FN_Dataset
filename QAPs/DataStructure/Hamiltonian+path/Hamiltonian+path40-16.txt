What are P, NP, NP-complete, and NP-hard?
P : problems that can be solved in polynomial time. for exampleÂ  Sorting you can solve it in O(n log n). NP : decision problems that can be verified in polynomial time. for example Hamiltonian Path(Cycle). For Hamiltonian Path problem assume that you have solution as either Yes or No, then verifying whether it is correct , can be done in polynomial time. NP-Hard: If all the problems in NP can be reduced to problem X, then X is NP Hard. NP-Complete: problems that are NP Hard and in NP. Its still unknown whether P=NP or P!=NP. Proving Either wins $1000000 cash prize. But it is widely believed that P!=NP. As a Software Engineer knowing this information is useful for following reason : Suppose your given a problem, and you don't know its NP-C you will WASTE lot of time trying to find a polynomial time or good solution !! 