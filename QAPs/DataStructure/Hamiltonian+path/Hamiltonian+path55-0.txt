What are the important things for a CSE student to get a good campus placement?
I believe ,most importantly stop thinking about placements and start working on getting better in your subjects.Because eventually if you are good you will have one of the finest jobs if not now (On-Campus)may be a year later for the simple reason "its less crowded at the top ". (For the person who A2A me) On how to get better in CSE ,I don't think I am experience enough to answer that, may be post another question and someone with enough experience will definitely guide you :) EDIT->some of my friends feel i haven't done justice to the question and I should include some technical details so that this answer is actually helpful. So I have tried to compile some important topics which could be useful for campus placements. 1)Basic C(Very important)  Must practice "Test your C skills" by Yashwant Kanetkar(all chapters  important) Functions,Arrays,Macros,I/O(questions like what does scanf/printf return etc),Output specific questions,Bit Manipulation,Operator precedence.   2)Pointers.( should be really clear). Books-"Test your C skills" by Yashwant Kanetkar,"Pointers in C" by Yashwant Kanetkar String handling(char),Array handling using pointers, pointer arthimetic . (Output Questions)   3)Data Structures in C  Book-Data Structures using C and C++ by Tenenbaum and Data Structure  by seymour Lipschtuz) Linked List Linked list using pointers,dynamic memory allocation(calloc,malloc,realloc), Linked List manipulation->Must be able to write neat code on paper handling all complex linked list manipulations. (Most important thing never try to use extra space for linked list manipulations,always try to play(adjust) with pointers). Basic questions such as detect loop in linked list ,reverse list,remove loop in list ,delete every kth node,sort linked list, add 2 number using linked list etc should be crystal clear. Stack&Queue Implementation using Linked list & Array. 1) Questions - balancing brackets,Infix to postfix,postfix evaluation,linked list is palindrome or not,stack using queue etc . Design stack to find minimum in O(1),Maximum Area in histogram.Span problem 2)Deque(double ended queue). Using queue,Question- Minimum in every subarray of size k, (All questions covered during Data Structure workshop by ACM is quite important)   Trees Most important topic.Concept of linked list and pointers would be helpful. Basic Binary tree,Binary Search Tree and Balanced BST. Questions such as to find height,diameter,mirror image,sum of root to leaf paths,check whether BST or not ,Find Kth smallest element etc. You should be clear with RECURSION to handle questions on tree. Understanding of DS in C language is very important   Heap proper implementation in C. Questions-Running median in stream of integers,top k elements etc 4)Recursion Itself one of most important topic.(Both interviews as well as Competitive programming ) Try to visualize it, will help you solve problems.   5)Time and Space Complexity Analysis- Objective Questions(first round) may consist of snippets of code followed by options to mark correct complexity. Even during F2F interviews,each round will test your knowledge of complexity analysis . 6)OOPS It is quite handy if u have in depth knowledge[go through one of the good books completely] of Any one of OOP languages .(JAVA/C++).And is also proficient in coding in that language. Knowledge of both will also be quite handy.  C++ STL  [For better programming practice],singleton class,classes in c++,inheritance) Java Collections Class [for better programming practice],Concept of inheritance,abstract classes,interface,multithreading,   7)DBMS Normalization,Concurreny,B tree,B+ tree ,Transactions, SQL,Indexing,OOPS,Relational databases. (Textbook enough)   8) OS-(very important) {Process+Process Scheduling+Threads+Memory Management+Paging+Segmentation+Multiprogramming /processing+Deadlock+Virtual Memory+Thrashing+Synchronization+File systems and data storage}.(Text Book sufficient+ Understanding enough to relate these concepts to real life scenarios) 9)Computer N/W-  Basic understanding and if u have Netcamp(System administration)in your resume be sure u know about file permissions,server such as ( apache,ftp,samba,DHCP,DNS),SSH,several protocols,Shell scripting(basics).   10)Algorithms Sorting Algorithms,Searching,Tree traversals,Graph traversals(BFS and DFS) Good grip on ADHOC problems. Advance-(Flipkart,Directi and Amazon) 1)Advance data structures- (Segment tree,Tries,BIT,Suffix Array,heap) 2)Algorithms (Djikstra , Floyd Warshall ,  Euler path ,hamiltonian path, KMP, MST, Union Find Data Structure) 3)Combinatorics (Recurrence Relation) 4)DP Book - Algorithms by T.H Cormen, Tutorials- http://community.topcoder.com/tc? module=Static&d1=tutorials&d2=alg_index "There is no definite portion for this section ,only constant coding on online judges and participating in several coding competitions can help u develop knack of solving such problems mostly by breaking it into one of known problems". 10) Coding on Online platforms(spoj,codechef,codeforces,topcoder,UVA) Gives u real time experience of what  questions could be during interviews Also coding as hobby can also be useful since every company has a coding round for screening. If you follow some online sources such as http://Geeksforgeeks.org   or LeetCode be sure to try given problems yourself enough before looking at solutions.Interviewers are smart enough to differentiate . From my personal experience I feel we are not required to give correct solution at once ,interviewer help us all way along through any solution. So don't panic, consider interviews as more a discussion and try to ask as many questions as u want or is needed . Lastly always keep smiling during your interviews. :) Happy Coding :) Updated 9 Feb • View Upvotes