What are some examples of problems which are: (1) NP but not NP-Complete; (2) NP-Complete; (3) NP-Hard but not NP-Complete?
(1) NP but not NP-complete Let's just get this out of the way: if P=NP, then any problem in NP is NP-complete (barring technicalities). So let's assume P doesn't equal NP. In that case, obviously any problem in P won't be NP-complete. More interesting problems are NP-intermediate problems: problems that are in NP but neither in P nor NP-complete. Ladner's Theorem shows that if P doens't equal NP, then there do exist NP-intermediate problems! But Ladner's construction is very complicated, and I'm not aware of any known NP-intermediate problems that are "natural". However, some problems that might be NP-intermediate include: Factoring (or the appropriate decision version, etc.) Graph isomorphism Unique gamesI won't go as far as to assign probabilities or confidences to any of these; I'll just note that they are in NP, but not known to be in P or be NP-complete. (2) NP-complete There are loads of known NP-complete problems, and luckily lots of them are very natural to state. The most well-known ones are: SAT (or 3-SAT) Travelling salesman problem (decision problem version: does there exist a path of distance <= k) Hamiltonian path problem (special case of TSP) 3-coloring a graph Clique problemFor more, I would recommend first checking out Karp's 21 NP-complete problems for some basic ones and then this more comprehensive list. (3) NP-hard but not NP-complete (i.e., NP-hard but not in NP) For this we are looking for problems even harder than NP! It is known that NP doesn't equal NEXP (nondeterminstic exponential time). Thus we can say with certainty we can say that any NEXP-complete problem is NP-hard but not in NP. NEXP-complete problems actually look a bit like NP-complete problems, but "larger". One such example is "succinct 3-coloring" - basically like 3-coloring except on an exponentially large, implicitly specified graph. However, there are probably still problems easier than this that are outside NP, although I don't think we can prove it. For example, a Σ 2   -complete problem isn't in NP unless the Polynomial hierarchy collapses. A more well-known example would be computing the Permanent, which is #P  -hard. How close can an NP-hard problem get to NP without being in it? Probably the closest we're going to get easily would be a problem in P NP   . This is the set of problems you can compute given oracle access to NP, that is, the magical ability to solve any NP problem instantaneously. This is (well, probably, but unproven) larger than NP. For example, consider the TSP problem where we ask "is the best path of distance k?" To solve this, we need to find a path of distance k and show that there is no path of distance less than k. The first is an NP problem and the second is a coNP problem. We could solve it with two calls to an NP-oracle, but we can't say that the problem is in NP. Updated 19 Oct 2014 • View Upvotes