I want to practice algorithms for 10 days (240 hours). Where should I start?I have fair knowledge of Algorithms.
The field of algorithms, like much of computer science, is mostly just a big grab-bag of tricks and heuristic problem-solving principles. There are not very many unifying theorems or ideas. So a quick way to get a broad sense about algorithms is to learn some of the principles of the art, understand how they can be applied, and to work out many examples on your own (both by hand and by code). Some important basic heuristic principles are: Greedy algorithms Divide and conquer algorithms Dynamic programming Backtracking Study these techniques and study how they can be used. If you're clever and if you work very hard you can probably gain a rough competency for these methods and their basic application in about 10 days. (This is assuming that you are already competent in other fundamentals like basic data structures and basic time/space complexity concepts.) It's often useful to also know a bit about NP-complete problems; not because you're going to solve P vs. NP but because you want to know how to identify that a particular problem is NP-complete so that you don't waste a lot of time trying to find an efficient solution. If you're clever and if you work very hard you can probably get a rough sense for this in about a week. There are plenty more advanced topics but I think the things I've mentioned should form a pretty good basic foundation. Updated 8 Jan â€¢ View Upvotes