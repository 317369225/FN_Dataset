Computational Complexity Theory: Any hint on whether my problem is NP-hard(NP-complete) or not. If so any hint on how to prove it?
Yes, your problem is NP-complete (ignoring a minor technical point)*. To show that this problem is NP-hard, I will reduce from the problem of determining whether a Hamiltonian path exists in a graph starting at a particular vertex v  . If you only want a hint, not the full answer, then don't read past this point, figure out the reduction on your own. Let G  be a graph. Every node has weight 1 and the weights never change. Initially the only contractible edges are those incident to v  . Whenever vertices v  and w  are contracted into v  , the edges incident to w  become the only edges eligible for contraction in the next step. Then there exists a Hamiltonian path starting at v  if and only if there exists a sequence of edge contractions that reduces G  to weight 1 (down to the single vertex v  ). If there were such a path, the edges along that path, starting from v  are the edges in a contraction reducing G  to 1 vertex. Similarly, if there is such a series of edge contractions, the contracted edges must form a Hamiltonian path. Since the Hamiltonian path problem from a source vertex is NP-hard, this problem is NP-hard as well. * This problem is not actually in NP. NP is a class of decision problems, problems that have yes or no answers. This is an optimization problem. The related NP-complete problem is "Given a graph G  and an integer k  , is there a legal sequence of contractions such that the resulting graph has weight at most k  ?" Poly-time reductions can be given between this problem and your own in both directions. This problem is clearly in NP, the sequence of contractions serves as the certificate. 