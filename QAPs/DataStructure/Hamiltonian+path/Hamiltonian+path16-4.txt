What are some examples of problems which are: (1) NP but not NP-Complete; (2) NP-Complete; (3) NP-Hard but not NP-Complete?
I'm going to keep my answer brief as there is plenty out there on this topic. (1) Minimum spanning tree problem (given output to a MST instance it is very straightforward to give an algorithm that verifies if it is a spanning tree and determines if its total weight is at most k in polynomial time, or not.  This implies that this problem is in NP.  This problem is solvable in polynomial time using algorithms such as Prim's Algorithm, so it sits in P as well.  You'll find that many problems in P also sit in NP.), (2) Steiner tree problem, (3) Halting Problem (see NP-hardness ). 