What are some examples of problems which are: (1) NP but not NP-Complete; (2) NP-Complete; (3) NP-Hard but not NP-Complete?
You first have to understand the meaning of NP, NP-Hard and NP-Complete. Giving definitions straight from Wikipedia: NP is a "class of computational problems for which solutions can be computed by a non-deterministic Turing machine in polynomial time. Or, equivalently, those problems for which solutions can be checked in polynomial time by a deterministic Turing machine." Another way to say this is that given a solution to this problem, it can be verified in polynomial time. NP-Hard problems are a "class of problems which are at least as hard as the hardest problems in NP. Problems in NP-hard do not have to be elements of NP, indeed, they may not even be decision problems." NP-Complete problems are a "class of problems which contains the hardest problems in NP. Each element of NP-complete has to be an element of NP." Another way to say this is that a problem is NP-Complete if it is NP-Hard and given a solution to any instance of the problem, the solution can be verified in polynomial time. So an example of a problem in NP but not NP-Complete is the sorting problem. i.e. Given n  integers, rearrange the numbers such that they are in non-decreasing order. This can be easily solved in O(nlogn)  (well, actually better). Clearly, you can verify if a proposed solution is actually a solution in O(n)  , which is polynomial in n  . NO problem can be NP-Complete, without being NP-Hard by the definition of NP-Completeness. An example of an NP-Complete problem is clique. i.e. Given an undirected graph, what is the largest complete graph which is a subgraph of the graph. Now, for an NP-Hard problem that is not in NP (i.e. not NP-Complete). Given some n  , find all cliques in all graphs with n  vertices. Clearly this problem is harder than the previous clique problem since if we can solve this problem, we can solve the previous clique problem. Also, note that the answer to this problem is actually all subsets of the n  vertices which form cliques. But also note that to verify that we have the correct answer, we have to check that we have all subsets which form cliques. In fact, this problem is NP-Hard, but not NP-Complete. See: Np Complete Updated 14 Dec 2013 • View Upvotes