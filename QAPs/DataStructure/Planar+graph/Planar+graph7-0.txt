How can I find a planar embedding of a planar graph?
(Assuming you mean in code, since you labeled this question with "Algorithms"...) You can use the Chrobak-Payne algorithm to generate a straight line drawing of the graph -- a planar embedding is implied by the drawing. You don't mention in what language or platform you want to do this, but assuming C++, the boost graph library includes an implementation of Chrobak-Payne. The algorithm only works on maximal planar graphs but this is not a problem in practice; quoting the boost documentation: Note that the restriction that the graph be maximal planar does not mean that this function can only draw maximal planar graphs [...] If you want to draw a graph g, you can create a copy g' of g, store a mapping m of vertices in g' to vertices in g, triangulate g', and then send g' in as the input to chrobak_payne_straight_line_drawing. The drawing returned can then be applied to g using m to translate vertices from one graph to another, since g contains a subset of the edges in g'. 