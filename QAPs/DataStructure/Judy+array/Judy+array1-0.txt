What are the best ideas for Data Structure project?
While I wouldn't claim these ideas to be the best, hopefully you might find this list useful: Find the cheapest way to fix a computer network: A good excuse to implement union-find sets and the Kruskal algorithm. Implement Huffman coding: this requires tinkering with binary trees and priority queues. Use quadtrees to implement a spatial index. Use it to find the nearest point to a given one. You can also ask for a brute force approach and make students do a performance comparison. Use general trees to implement a simple algorithm enumerating all the possible words from a fixed alphabet at a given length. You can use that algorithm to implement a naive dictionary attack and crack a set of passwords.  Of course trees aren't necessary for this, but this is a data structures course! Use Bloom filters to avoid polluting caches with "one-hit-wonders". The projects listed above are about applying data structures to solve some problem. This is the kind of project that I prefer, but there were semesters when I was uninspired and ended up handing out projects focusing on a particular (usually exotic) data structure. For example: Play with numerical representations by implementing binary random access lists as described in Okasaki's book. Implement a LRU cache. Implement Van Embde Boas trees. Finally, graphs!  So many problems can be modelled with graphs and solved with the correct algorithm. Use Dijkstra's algorithm (or any other shortest-path algorithm) to find the shortest route between two points in a maze (or something similar, harder to google). Pose problems involving max-flow or bipartite matching. Allocate courses spanning a given time interval to classrooms using graph colouring. Or given a program as a set of interdependent modules, compute the SCC's so a compiler knows which ones to process together. And that's all I have. Good luck! 