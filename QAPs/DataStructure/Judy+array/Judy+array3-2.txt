What are the real world applications of some advanced data structures?
I'll keep my answer short. A really good data structure that I've used in my work is a 'Bloom Filter'. You can definitely read more about bloom filters on their wikipedia page, but essentially a Bloom Filter is a bitmap that probabilistically knows the presence or absence of data. Due to it's use of bits to predict the presence or absence of an element, it is highly space efficient and costs almost nothing to keep it resident in memory. Real life application I'll give you one very common use case. When we deal with big data and use NoSql databases (such as HBase, DynamoDB etc), data can explode to such massive extents that under many circumstances we back up a certain chunk into a distributed file system (such as HDFS or S3). These are really common scenarios due to the scale of production data that companies with hundreds of millions of customers/users generate every single day. Here is where the bloom filter acts as an a boon. With a Bloom Filter you can easily move 'probabilistically old' data into distributed storage and keep a bloom filter in memory and before doing a disk lookup, we ask the bloom filter whether it's present in disk or not. Due to the zero false negatives property, a "no" from a bloom filter is a guaranteed "no", but a "yes" is essentially a "maybe". So it gives us a cheap way to optimize segregating a certain data chunk into storage and keeping the most recently used data in memory and asking the BloomFilter about where data associated with a key may be located, hence reducing the amortized number of disk look ups we do over time as well as optimizing the storage of data in in-memory database systems. 