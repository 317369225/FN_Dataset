Given a graph G (V,E), are there any algorithms which returns a set of edges to be removed, such that their sum is maximum and partitions are formed?Suppose we have a Graph G=(V,E) , we need to remove some edges to make it into two connected components. The constraint here is that, the edges we need to remove , such that sum of edges removed is maximumThere isn’t a direct implementation that I know of but my best bet would be the Kernighan–Lin algorithm. Since the Kernighan–Lin algorithm returns the set with a minimized value, You would need to perform 2 pre-processing steps: Step 1: Identify the largest weighted graph, Lets call it w_max Step 2: relabel each edge with a new weight of [ (w_max +1) - old edge weight] Lets call [ (w_max +1) - old edge weight] the modified edge weight Perform Kernighan–Lin algorithm Then perform a post processing step to set the original edge weights: Step 1: relabel each edge with its original weight using [ (w_max +1) - modified edge weight] 107 Views · View Upvotes · Answer requested by 1 person