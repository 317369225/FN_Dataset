How can I represent an undirected graph with 100 nodes in c++?If the graph really has only 100 nodes, you probably should not worry too much about the efficiency of your data structure. But in case you want to, here are some tips: For the purposes of memory efficiency, the best choice of data structure typically depends on the vertex degree distribution of the graph. For complete graphs (or graphs near completion), you can use an adjacency matrix with little to zero redundancy. As you move towards sparser graphs, it becomes more useful to implement an adjacency list. If you are interested in a really compact data structure for sparse graphs, you can use a forward star representation: for each vertex, list all the vertices to which it is connected. Concatenate all these lists into a single array A A of size m m . Fill an auxiliary n n -sized array B B in the following manner: Bi Bi records the index at which the adjacencies of vertex i i begin to be listed. This way you can have the same features of an adjacency list, but with the additional benefit of sparing the memory it spends on the pointers for the linked lists. 237 Views