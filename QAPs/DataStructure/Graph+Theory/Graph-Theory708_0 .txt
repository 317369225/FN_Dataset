What rules should I follow to select all paths that are valid from one vertex to another vertex?Specifically, given the graph below:This might seem simple in the graph you gave. (We'll deal with 'simple paths' which are paths that don't go through a vertex more than once). For instance, here are all the simple paths from A to B: A, B A, C, B A, C, D, B A, C, D, E, B The number of simple paths from one vertex to another is exponential in the sum of the vertices and edges. So, generally, you'd like to avoid finding all the paths between two vertices. The good news is that we frequently want to find the shortest path from one vertex to another. In this case you can use Dijkstra's Shortest Path Algorithm. This a beautiful algorithm, and is very fast. But if you must find all the paths from one node to another, you can use a breadth-first search algorithm. If you're interested in it, check out Wikipedia's article, Breadth-first search. 49 Views  View Upvotes  Answer requested by Chris Purrone