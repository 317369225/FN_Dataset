Which are the fastest algorithms for the coloring of edges in a graph with max_degree+1 colors?Scan the vertices one by one. For each vertex, find the smallest color not already taken by any of its neighbors, and apply it to that vertex. For a graph with n  n vertices, this simple algorithm takes n  n steps, where each step is bounded by Δ+1  Δ+1 mini-steps of scanning the available colors (Δ  Δ is the maximal degree). It's as linear-time as they come, and you clearly can't do better than linear time. Edit: As Máté correctly points out, I’m considering the input size here to be n  n , the number of vertices, rather than the number of edges or the combined number of vertices and edges. Still, the algorithm is about as efficient as one can expect: we do have to scan all the edges, and this algorithm scans each edge twice. If the OP is wondering about extreme optimization of constants, the answer will depend on the data structure in which the graph is provided, and other unspecified factors. 3.4k Views · View Upvotes · Answer requested by 1 person