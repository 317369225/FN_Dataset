How does the BFS algorithm work in MapReduce code?Every node of the graph is first assigned to a mapper, that executes the Map function on it. The function's arguments are the id of the node and a Pair, containing the current distance on the left and a list of adjacent node ids on the right. This distance will be initialized to zero for the starting node and to any number higher than the graph radius for the other nodes. The Map function emits two kinds of outputs for a given node id: the adjacent node ids with the distance equal to that of the node augmented by one (it's the successive layer), and it also reemits its input. After this phase, the list of all outputs corresponding to a given node id (produced by different mappers) will be passed to the same reducer, which will call the Reduce function on them. There are two kinds of inputs to this function, for a given node id: a list of inputs (mapper's outputs) containing distances but no adjacent nodes, and just one input containing the adjacency list of the node. There will be many inputs with different distances, because the node will possibly have been explored by the mappers along many different paths, each with a different distance. The job of the reducer is to only keep the smaller value, that corresponds to the shorter distance to the origin. 351 Views