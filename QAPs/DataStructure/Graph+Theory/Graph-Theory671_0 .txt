How do I devise an algorithm to calculate the minimum cost spannnig tree in a graph with not including specific edges?There are few unreliable edges which should not be included in the calculation. I think we can make use of Kruskals Min spanning tree approach but I am struggling with how to by pass these given edges and compute the minimum cost.Input has how many edges and which edges not to be included.If you want to ignore a subset of edges in a graph algorithm, there are two very simple approaches you can take. The first is to make a copy of your graph with those edges removed and pass it into the algorithm. This way, the algorithm will ignore the edges. The second (more difficult) approach is to re-implement the algorithm, making explicit checks for whether the edge is in your ignored set before every time the algorithm makes use of an edge. For Kruskal's algorithm, it should be pretty simple to take the second approach. You should have a heap of all the edges in the graph. Either make sure you throw out bad elements when popping from the heap, or never add them in the first place when creating the heap. If you're using a black box implementation from a third-party library, it'll be a bit easier to stick with the first approach. 196 Views  View Upvotes  Answer requested by 1 person