What is an simple intuitive proof of why Bellman-Ford algorithm computes shortest paths?What is an intuitive or simple explanation of the correctness of BF algorithm for shortest paths with negative edge weights and detection of negative edge weight cyclesThanks for A2A. The algorithm unlike Djkstra, is not greedy, but dynamic. In the first iteration of the loops it builds one possible path between two vertex and then at each iteration it improves the path by at least one edge. As the longest path can use maximum n-1 edges, the iteration of the loop continues that much to find the shortest path. For negative cycle, algorithm at nth iteration checks one more time to see if an edge exists to decrease the weight of the shortest path having n-1 edges. If yes, then that edge must be negative as the shortest path with all positive edges should be consisted of n-1 not n edges. Hope that helps 157 Views  Answer requested by 1 person