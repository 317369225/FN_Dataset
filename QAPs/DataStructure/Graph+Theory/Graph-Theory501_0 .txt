Are Graph Theory and Dynamic Programming required for Machine Learning?So to answer this, you must first understand what Machine Learning actually entails. So Arthur Samuel, the Father of Artificial Intelligence, defines machine learning as a "field of study that gives computers the ability to learn without being explicitly programmed". It is as simple as that. Now Graph Theory (GT) is a branch of discrete mathematics, primarily. However, it is highly ubiquitous and is used in a lot of stuff. Graph Theoretic algorithms are sometimes used to track sparse relations, like the Min-Cut, the Graph Partioning. or the Graph Classification ones. Basically, even very ML-heavy algorithmic procedures that aren’t even remotely associated with graphs, have unique graph-theoretic representations. Then there are probabilistic graphical models, or PGMs, which involve : a) writing a proper probability distribution with your data, b) factorizing it into functions, and c) representing that factorization with a graph. There are also stuff like neural networks which find their application into both ML and GT. Talking about Dynamic Programming (DP), it works on basically the same principle as ML - looking at each probable step and choosing the most optimal one, if we’re to put it in laymen’s terms. ML uses many “models”, and atleast two of them, namely the Reinforcement Models and the Generative Models, use dynamic programming to find out optimal solution sets, and they kind of have to. Check this out : http://mlg.eng.cam.ac.uk/zoubin/... This is the Hidden Markov Model. Read it and you’ll understand how DP comes into the fray. Hope this substantially answers your question. Cheers. :) 505 Views · View Upvotes