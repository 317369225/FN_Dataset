How do I evaluate the number of ways to traverse a graph and the total number of spanning trees?Given an undirected and unweighted graph. In how many ways the graph can be traversed by using depth first search? How many different spanning trees can by formed from this graph?The algorithm to compute the number of spanning trees of a graph is a very cool and mysterious one. First, you compute the Laplacian matrix of the graph (basically, it is a matrix with degrees of vertices on the diagonal and “-1” in each cell (i,j)  (i,j) corresponding to edge from i  i to j  j , “0” in all other cells). Then, you remove any row and the corresponding column of this matrix and compute the determinant of the remaining matrix! It’s due to Kirchhoff’s theorem. The algorithm runs roughly in time O(n 3 )  O(n3) for determinant computation if we don’t think about multiplications of long numbers, and if we account for that, then it’s O(n 4 )  O(n4) . Number of DFS traversals of a tree is equal to 2  2 (n−1)  (n−1) ∏ n i=1 (d i −1)!  ∏i=1n(di−1)! , where n  n is the number of nodes in the tree, and d i   di is the degree of i  i -th node. To see this, first let’s consider only DFS traversals from some fixed root r  r . The number of ways to order the traversal of its subtrees is equal to d r !  dr! . Each of the subtrees will be traversed independently, so the numbers of ways for them multiply. For each of the children c i   ci of the root, the number of ways to order the subtrees of their children is (d c i  −1)!  (dci−1)! , and the same holds for their children, children of their children and so on. Thus, the number of traversals with fixed root is d r !∏ i=1..n,i≠j (d i −1)!=d r ∏ n i=1 (d i −1)!  dr!∏i=1..n,i≠j(di−1)!=dr∏i=1n(di−1)! . Summing for all possible roots, we get ∑ n r=1 d r ∏ n i=1 (d i −1)!=2(n−1)∏ n i=1 (d i −1)!  ∑r=1ndr∏i=1n(di−1)!=2(n−1)∏i=1n(di−1)! , because the sum of degrees of all nodes in a graph is twice the number of edges in the graph, and the number of edges in a tree with n  n nodes is (n−1)  (n−1) . However, there doesn’t seem to be an efficient algorithm to compute the number of traversals of an arbitrary graph. 403 Views · View Upvotes