How can I check if a graph can be represented as two partitions such that each one is a complete graph?Here’s a solution in O(n²)  O(n²) , where n  n is the number of vertices of your graph G  G (this is optimal for dense graphs, but I’m pretty sure we can do better for sparse graphs, even though I can’t find how) : Compute the complementary graph G ′   G′ of G  G G ′   G′ has the same Vertex set as G  G , and edge (u,v)  (u,v) is in G ′   G′ iff edge (u,v)  (u,v) isn’t in G  G Search for a 2-coloring of G ′   G′ This is usually achieved by doing a DFS in which you color each son in a different color than its father, actually verifying there’s no problem when being on an already visited vertex Two possibilities : either you can’t find one : that means your graph can’t be partitionned as asked if you have such a coloring, let’s say with blue and red, then your partition consists in the subgraph of G  G composed of vertices colored in red in G ′   G′ , and the subgraph of G  G composed of vertices colored in blue in G ′   G′ The only hard part when it comes to proving this algorithm actually works is to show it doesn’t miss any partition; To easily understand why it’s the case, see that the algorithm at step 2) only fails when there’s a triangle in G ′   G′ , i.e. when there exist three vertices u  u , v  v and w  w such that there’s no (u,v)  (u,v) , (v,w)  (v,w) nor (w,u)  (w,u) in G  G , which of course avoid any partition to work. 254 Views · View Upvotes · Answer requested by 1 person