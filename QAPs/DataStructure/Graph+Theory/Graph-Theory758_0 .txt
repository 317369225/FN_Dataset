Why does Dijkstra's Shortest path algorithm not work for graphs with negative weights?If there are no negative weight cycles, does Dijkra's alg still work? Can someone give an intuitive explanation rather than just counter examples?If the graph has cycles with negative scores, then you can get an arbitrarily large negative number as total score (by following the cycle again and again), so there is no single optimum path anymore. If there are negative weights but no cycles, then there is still a problem with Dijkstra's algorithm: it assumes that the first path you find to any node is always the shortest path. But if there are negative weights, you might later find improvements of the route to a node (via negative edges); this improvement is not handled correctly in Dijkstra's algorithm. Bellman-Ford can handle negative edges so long as there are no negative cycles; it can report if such cycles exist (in that case, you don't really have a problem since you can find an arbitrarily good route by repeatedly following the cycle). 524 Views  View Upvotes  Answer requested by 1 person