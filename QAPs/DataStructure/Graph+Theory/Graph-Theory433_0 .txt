How do I find the shortest path from each source to the destination?Suppose there are 3 sources A B and C, a destination Z, and 12 other nodes from D-O. Every node from D-O must be visited at least once, and each path must contain at most 6 nodes. The graph is complete, undirected and weighted.This is an idea and I don't guarantee it is the shortest path but it looks like a good approximation. ¯\_(ツ)_/¯ - With the Dijkstra algorithm [1] you can find the shortest path from one node to another. In this case from A to Z, B to Z, and C to Z. - Now you can chose the shortest path (considering the restriction of six nodes) from source A, B, and C. (suppose C is the shortest). - Then remove the used nodes, and recalculate the Dijkstra algorithm from A to Z and B to Z. - Then chose the shortest path from the source (A,B), and remove the used nodes. - Then chose the shortest path which include all the remaining nodes. If this works just let me know. {^^} Another solution is to create a Branch and Bound algorithm [2] which compute all the posible solutions. The Branch and Bound algorithm guarantees the optimal solution. And It is easy to implement. [1] Dijkstra's algorithm [2] Branch and bound 177 Views · View Upvotes