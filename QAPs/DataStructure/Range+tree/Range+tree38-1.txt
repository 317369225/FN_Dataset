What is the efficient solution to SPOJ CCROSSX?
Let [math] dp_i(h) [/math] be minimum number of stones we need to move so that height of i-th pile of stones is h. Function [math] dp_i(h) [/math] is convex function, it can be represented by set of slopes. [math] dp_i [/math] has [math] O(i) [/math] slopes. We can break this convex function in two parts: left (decreasing) and right (increasing). Slopes from left part we keep in one set (priority_queue) and slopes from right in another. Now you need to find out how to transform function [math] dp_i [/math] to function [math] dp_{i+1} [/math]. It can be done in [math] O(\log(n)) [/math]. And that gives you overall time complexity of [math] O(n \log(n)) [/math]. No need for complex data structures :) 