Which is the most Bug prone algorithm to code?
Pretty much most sorting algorithms and binary search. Binary search is just naturally bug-prone. In fact, Jon Bentley assigned professional programmers the task of writing binary search in any language they wished (including pseudocode) without any references. The programmers only had one chance to submit. 90% got it wrong. Most sorting algorithms, especially the recursive ones (e.g Mergesort, Quicksort) are hard to implement because most people haven't done it in a while. There are many libraries with these sorting algorithms already implemented, so most people haven't implemented a sorting algorithm by themselves in a while. Consequently, these people might have forgotten little intricacies to the algorithm that cause it to be buggy. 