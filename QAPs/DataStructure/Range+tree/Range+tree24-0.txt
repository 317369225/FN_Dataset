Can this problem be transformed into a segment tree problem where instead of updating a range [a,b] by a constant v, we are told to update the range in such a way that i is added to i th box in the range [a,b] ,i=1.. (b-a+1)?
Yes, you can transform it. I will give the basics here: long long SUM(long long beg, int inc, int leng) {// sum of AP        return  beg * leng + inc * ((leng *(long long) (leng-1ll)) / 2); }struct node {        int slope, range;        long long sum, ht;         node() { ht = slope = sum = 0; range = 1; }        void merge(node& a, node& b) {                range = a.range + b.range;                sum = a.sum + b.sum;        }           void split(node& a, node& b) {                a.ht += ht;                 a.slope += slope;                a.sum += SUM(ht, slope, a.range);                b.ht += ht + slope * (long long)a.range;                b.slope += slope;                b.sum += SUM(ht + slope*(long long)a.range, slope, b.range);                ht = 0;                slope = 0;        }   };int dist = 1;void update(node& n) {        n.ht += dist;        n.slope ++;         n.sum += SUM(dist, 1, n.range);        dist += n.range;} 