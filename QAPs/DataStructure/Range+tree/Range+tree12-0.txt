What is the best way of finding mean of a stream at any point?
It depends on what you are trying to optimise, and whether you mean 'by able to find out the average till NOW' or want to be able to retrospectively find out what the average was at any given time. Assuming that you want to store the 'rolling average' only, want it to be correct, but want to minimise storage space, then the following is worth doing: Store the average so far and the number of items so far When the next item comes in, you increment the number of items so far, and adjust the average by (the difference between the new term and the old average) / (number of terms so far.) The downside, of course, is that you are effectively throwing away the history, so the ONLY thing you can do with the stream is calculate the current average. If you want to be able to quickly get at any past average, and data space is 'effectively unlimited' then use the same algorithm, but store a triplet of index - value - rolling average to that point... then you can quickly get at a past average by lookup... without needing to potentially retrieve billions of past values and sum them at that point. If the values are coming in thick and fast, storage space is 'free' and you only want to do the averaging once in a while, just store the value stream and calculate at the point of need. (Thanks to Daniel McLaury for pointing out that it would be worth caching the calcs - at which point you might want to cache an index, number of values to point, and running average, so you could use it in the calculation of future averages.) Updated 211w ago â€¢ View Upvotes