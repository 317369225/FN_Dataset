What are the most important data structures needed to reach the ACM-ICPC World Finals?
The answer varies from Region to Region. In my personal experience (with Indian Regionals), the most important are: Binary Indexed Tree In this, you should not only know what a BIT is, but also be able to use it as a "dictionary" data structure with potential "what is the k'th smallest element of the current dictionary" also available. This should be so well ingrained, that it should be considered a black box that you can implement in 10 minutes. See Problem ORDERSET (SPOJ). A technique that also goes well with the BIT for dictionary, learn how to do Coordinate Compression - which will be required for ORDERSET anyway. Segment Trees, with lazy propagation Anything that can be solved with a BIT, can be done with a segment tree (I personally feel that segment trees are slightly harder to code, but others who are used to it would feel differently). This is such an unbelievably versatile Data Structure, that without it and its modifications, a number of problems are pretty much unsolvable. See Let us code: Segment Trees, blog post by Utkarsh and Raziman that is amazingly extensive in its discourse. Geometry Vectorized geometry to handle points and lines. Also learn how to code a convex hull. These I'd say are the most important. You could also have a look at Heavy Light Decomposition that extends the use of segment trees on trees, but this is relatively advanced (see comment thread with Nick Wu below) and should be concentrated on after being comfortable with the above. 