Can this problem be transformed into a segment tree problem where instead of updating a range [a,b] by a constant v, we are told to update the range in such a way that i is added to i th box in the range [a,b] ,i=1.. (b-a+1)?
This problem can be solved with the help of lazy propagation in a Segment tree . Suppose we have a array name lazy[] which contains the information about updation of each range.  Here we can see that each range updation will increase the sum of that range by a value which will be equal to the sum of an A.P Then each index of this array will contain two values :- 1. The first number of the series. 2. The common difference of the A.P At each updation we just have to do :-    lazy[range].A += new_A and lazy[range].D += 1; as after each updation the common difference of the A.P will increase by 1. The initial value of both the components of lazy[] will be 0. Let the sum[range] denotes the sum of elements in a given range then after updation new sum will be :-     new_sum[range] = previous_sum[range] + (N/2 * ( 2*A + (N-1)*D )) where N = number of elements in the range, A = lazy[range].A and D = lazy[range].D. Hope this helps you. 