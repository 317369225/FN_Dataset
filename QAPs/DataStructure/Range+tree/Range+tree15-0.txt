Is it worthwhile to finish every problem available in the USACO training pages?
Richard Peng, one of the most successful Canadian IOI competitors of all time, on the USACO training pages: USACO training was put  together before the major IOI escalation (Finland/Korea/Wisconsin). A  lot of the techniques described on it are no longer useful on *OI and a  lot of the 'hot' topics over the past few years are not covered. Also, a  lot of the bottle necks on training are quite meaningless, and they  typically cause a lot of frustration and time waste on the scale of  months. I would say USACO training is good for starting off, but things like  Ural, SPOJ and TopCoder are equally good for that purpose. For harder  problems at the IOI level, SGU and POI/BOI/CEOIs seems to be a must  these days. (I did some experiments with the US team last summer, and  the result seems to be going at POIs without seeing anything like those  beforehand is virtually suicidal) There's a contrasting point of view which I'd like to humbly offer, though. Rob Kolstad and I once spoke at length about the kinds of problems on the training pages at some point, particularly the problems that many would now consider obsolete for the purposes of IOI training. We discussed one problem in particular called Cryptcowgraphy---he grilled me on my kludgy solution to make sure I wasn't cheating, and I commented that this problem was just too hard for most people to do properly, and he admitted that it's the one problem on USACO that drives the greatest number of people to ragequit, and that other coaches (I assume Peng is among them) are in favour of eliminating some of them. He says he's the "minority of one" who still believes that optimization (which should be understood in context to mean pruning of recursive algorithms) is valuable for competitors to learn, in contrast to just piecing together standard algorithms. (You'd be surprised how far you can get just by knowing DP and range trees.) When I think about IOI 2010 it occurs to me that Kolstad might have been right. IOI 2010 was quite different from the previous IOIs, and had two problems that weren't primarily intended to be solved exactly (one about automatic language classification, and another about creating good mazes). It also had a very unconventional problem about encoding shortest-path trees in graphs. This was one of the few years when the U.S. outperformed China as a team (I don't know the exact stats, since IOI forbids explicitly ranking countries), and I think it's because the American training program better prepares contestants for ad hoc problems. Well, take from this what you will, I guess. 