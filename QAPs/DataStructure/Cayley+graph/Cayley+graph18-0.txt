What are some must-do problems on SPOJ?I am not a beginner. I have a lot of competitive coding experience. Its just that, I do not want to waste my time doing random problems and want to try only those problems which have new concepts.
Thanks for A2A :) I learnt many algorithms from SPOJ, so there are many problems that I feel are cool. Some of them are following : 1) CAPCITY and BOTTOM -- difficulty level easy-medium 2) AMR12H -- difficulty level medium 3) KOICOST -- difficulty level medium 4) OILCOMP -- difficulty level hard 5) XXXXXXXX -- difficulty level hard 6) SPCE -- difficulty level hard 7) OKRET -- difficulty level medium 8) GONESORT -- difficulty level easy 9) LEONARDO -- difficulty level easy 10) DOORSPEN and SPOINTS -- difficulty level easy-medium 11) SUBSN-- difficulty level easy-medium Why I found them interesting (SPOILERS) : 1) CAPCITY and BOTTOM -- learnt SCC from these problems 2) AMR12H -- probably because I'm not very good with probabilities 3) KOICOST -- cool inversion of a standard problem 4) OILCOMP -- proof is an extension of the KÃ¶nig's theorem for weighted graphs 5) XXXXXXXX -- sparse 2D segment tree. Need I say more :) 6) SPCE -- proof is an extension of the Cayley's formula 7) OKRET -- playing around with segments 8) GONESORT -- took me a long time to figure out. Looks very ad-hoc to come up with the algorithm 9) LEONARDO -- treating permutations as cycles. Proving correctness was pretty nice 10) DOORSPEN and SPOINTS -- convex hull 11) SUBSN-- several easy ways to do it. But despite the same complexity, not all of them pass the time limit (my guess is that order of array access changes time limit because of caching and prefetching done by the machine). 