How do I create a RDF database?
Assuming you mean you want create some triples or convert other data to triples and store them. The Apache Jena site has some good starting material and tutorials: Getting started with Apache Jena. Once you're familiar with this traditional method and RDF generally, you can try one of a variety of NoSQL graph database alternatives for RDF. This piece from Ben Lorica of O'Reilly provides a good overview. Improving options for unlocking your graph data. Neo4j, Titan and OrientDB are some contemporary graph databases that are more popular than Jena. Sail's a means of converting any graph database to an RDF store. See tinkerpop/blueprints JSON-LD is a contemporary method of representing RDF in JavaScript Object Notation. JSON is the most popular data interchange format or serialization method and the one favored by the NoSQL community. RDF/XML by contrast is verbose and out of favor. There are also a number of proprietary RDF triple and quad stores worth considering that like Jena allow inferencing and complex querying via SPARQL, but also have features Jena lacks. See What are the differences between a Graph database and a Triple store ? Essentially there are two communities who don't talk a lot to one another reflected in the demand for the toolsets described above: The RDF/OWL/SPARQL community who are very thoughtful about ontologies, semantic technologies and things like Dynamic Semantic Publishing, and the NoSQL community who tend to be less aware of advanced approaches to semantics but are very plugged into distributed computing and the most popular methods of scalable web application development. The latter community is on a higher growth trajectory, but the methods they use aren't always best suited for knowledge base work that thrives on the structuring and machine readability of less perishable content. The most powerful trend related to semantics has to do with machine readable knowledge graphs in use at places like Google, Yahoo, Microsoft, Baidu, Wolfram and Facebook. These graphs allow semantic search and retrieval that echo in some ways the question answering and machine learning abilities of IBM Watson, which can be considered a black box answering engine that runs on its own expanding and evolving knowledge graph. A very interesting development (as of June 2014) has to do with a graph database called Google Cayley that may provide some help in bridging the gap between the two communities. See Cayley: A Graph Engine Inspired by Googleâ€™s Knowledge Graph The challenge is how to get knowledge graph construction techniques in the hands of more people. Conferences such as the Cognitive Computing Conference 2014 are emerging to raise awareness about these techniques. Fundamentally, we will have to use a blend human-assisted NLP, machine learning or inferencing/reasoning, ontology development and image and sound recognition techniques to scale multimedia knowledge graphs. Crowdsourcing and gamification methods that boost and focus human assistance will have to be refined along the lines of what Tagasauris has done at places like Magnum Photo with mediaGraph, for example. Source: PwC, The game-based redesign of mainstream business, 2012 The issues of the PwC Technology Forecast on semantics, Big Data, analytics, social networking and gamification offer more context: Technology forecast: All issues 