How should one go about implementing a thread-safe doubly linked-list without locking the entire list in C?
The unsafe operations are insert and delete. These operations are touching only the two neighboring elements of the insert and delete so it's enough to make a lock on those and release them as soon as the operation is done. Note that some global changes to the list should still be protected not because it will destroy the list but because it will not lead to the correct result if performed while inserting or deleting (sorting the list, summing all elements of the list, ...) 