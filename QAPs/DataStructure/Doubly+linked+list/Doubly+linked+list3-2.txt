Data Structures: When is a singly linked list more useful than a doubly linked list and vice versa?
In general, a singly linked list is more useful than a doubly linked list. All the cons stated so far can be resolved by a singly linked list implementations. You can try the following functions as examples: 1. Print the elements of a singly linked list in reverse. 2. Delete a random element from a linked list (whose pointer you know) in constant time (it should take the same amount of time to delete an element near the start of the list, as it does to delete an element near the end of the list) To help you, you can consider using the following functions (assume that they are already implemented). 1. isTail(struct Node * node) - checks if the Node is the last element of the linked list. 2. reverseList(struct LinkedList * list) - reverses the linked list. 