You are given a linked list of N nodes. How would you prove or disprove that this is a Doubly linked list or not?
This is a general answer Say you have a linked list like:- Node1: NULL,1,2000 Node2: 1000,2,3000 Node3: 2000,3,4000 Node4: 3000,4,5000 and so on. Where first value is the address of previous node, 2nd value is the information field of the node and 3rd value is the address of the next node. Take two pointer arrays, say previous and this. The code below in a do while loop do { Step 1:Start with Node1 and capture values in array previous. Values like previous address(NULL in this case), current address(1000) and next address(2000). So previous array is NULL,1000,2000 Step 2: Move to the next node if Node1->NEXT!=NULL and capture values in this array. Values like previous address(1000), current address(2000) and next address(4000). So this array is 1000,2000,3000. Now compare previous array's and this array's,                       last two             and first two  pointers respectively. If they match implies node1 and node2 are linked. Similarly continue for other nodes. }while(NEXT pointer is not NULL); This is a very basic approach that i've followed in my answer provided we are checking a doubly linked list. I agree that conditions will have to be added to the above approach to counter for input errors like we are supplied with a single linked list, circular linked list, etc. I hope it gives you a basic algorithm for your problem. 