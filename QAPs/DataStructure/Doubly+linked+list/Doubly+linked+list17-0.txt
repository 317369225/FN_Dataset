How can we implement data structures like doubly linked lists in Python where there is no concept of pointers?
TL;DR Linked list is just a concept, and pointers is just one way to implement it. In python, we can implement linked-lists using classes and can store the reference to next nodes in the current node (without pointers). Detail The definition on Wikipedia: a linked list is a data structure consisting of a group of nodes which together represent a sequence. Under the simplest form, each node is composed of a data and a reference (in other words, a link) to the next node in the sequenceNote that it talks about nodes and links instead of structures and pointers. The Nodes and Links can be represented in many ways. The C way is to represent a Node using a Structure and Link using a Pointer. Another way (that can be used in python) is to implement Node as a class instance and a Link as a reference to another class. In python when you do a=b, you actually assign a reference of the data at b to a, so there is nothing special you have to do to handle links. class Node:    def __init__(self, data=None, next=None):        self.data = data        self.next = next 