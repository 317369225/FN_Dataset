Is there an algorithm that finds subgraphs of a graph such that each node in a subgraph is connected to at least k other nodes of that subgraph?I'm looking for extracting k-connected subgraphs from a graph. The application of such a problem being, given the mutual friends between each friend in a social network, a k-connected subgraph corresponds to a community amongst friends.
In general, the answer to your question is yes, but not very efficiently. The k-clique problem is the problem of finding a clique of k nodes in a graph, i.e. a subgraph of k nodes with every node sharing an edge with every other node in the clique.  So, in this example, the "community" would consist of friends (i.e. nodes) that each share an edge (i.e. friendship) with one another.  This sounds to be what you're asking.  The solution is polynomial for a fixed k, O(k^2*n^k), which is the brute-force method.  I'm not aware of better solutions off the top of my head.  Finding maximal cliques, or the decision problem of whether there exists a clique of a particular size or larger, is NP-complete, and so no polynomial time solution to the problem is known (the best known solutions are O(c^n), where c is about 1.2). If  you're asking whether there exists an algorithm for one to find  subgraphs where each node has a maximum collaboration distance of d with  every other node, then I'm afraid you're out of luck (this is analagous to the six-degrees of separation factoid you hear every so often).  That problem  seems intractable at first glance given that adding or removing nodes to  the induced subgraph would alter the collaboration distance of all  candidate nodes, so one would potentially need to run Djikstra's  algorithm (or a more efficient O(n^2) variant for the uniform edge  weight case) every time a node is added since shortest paths (i.e.  collaboration distance) are dependent on intermediate nodes for d>1.   One might be able to formulate this problem as the subgraph  isomorphism problem (by explicitly constructing graphs containing the  implied collaboration requirement) since a minimum collaboration  distance implies a certain regularity in the graph.  However, that  problem is also NP-complete, though polynomial solutions (Ullman's  algorithm) exist for finding fixed subgraphs, so it might be feasible if  you can construct collaboration subgraphs to search for in polynomial  time (which sounds feasible). Btw, the case of a collaboration  distance of 1 is exactly the k-clique problem, so one would expect the  k>1 problem to be even more difficult, though this doesn't  necessarily need to be true (think the generalized Poincare conjecture.   But I digress...) 