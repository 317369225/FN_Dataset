Are there any hashing algorithms that are mathematically proven to produce unique, collision-free hashes?
A hash function for which there are no collisions is called a "perfect hash function" (PHF).   A PHF for which the hash table has no holes in it (that is, the hash table is only as big as the search list) is called a "minimal perfect hash function" (MPHF).   It has been proved that a general purpose minimal perfect hash scheme requires at least 1.44 bits/key. The best currently known minimal perfect hashing schemes use around 2.6 bits/key.   Dynamic perfect hashing allows fast queries, insertions, and deletions into a large set of elements, while maintaining the collision-free characteristic.   Source: Perfect hash function (Wikipedia) Dynamic perfect hashing (Wikipedia) Generating Perfect Hash Functions Minimum Perfect Hash in C# CMPH - C Minimal Perfect Hashing Library 