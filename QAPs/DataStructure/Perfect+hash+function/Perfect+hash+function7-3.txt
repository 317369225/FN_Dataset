Are there any hashing algorithms that are mathematically proven to produce unique, collision-free hashes?
No and it is theoretically impossible.    The reason is all such algorithms produce a proper subset of their input (i.e. the hash will produce some finitely bounded integer and it's input is the set of all integers).   By definition this can not be bijective for any countable sets. EDIT: If you constrain your inputs it is possible to make a hash function that only works for those inputs *BUT* this is not generalization.   Additionally you gain nothing by doing this since it is no better then table lookup and that defeats both the search and secure hashing features of a general purpose hash. 