How is the size of hash table determined?
If the data amount you are going to store is static (i.e. Always consistent in every execution), it is good by directly allocating array for your hashtable as many rows as you need. It will save the execution time by avoiding reallocation/rehash But if the data amount is in growing manner, you should allocate it on demand in order to save memory. You can start by having 1024 rows, then when it reach third quarter of its size, the hashtable size quadrupled to 4096 and so on. If you want to employ multithreading, you can also make the execution of rehash/reallocating the hashtable in different thread. It is just an idea though, but for an implementation, never really try it. I think it will be painful. 