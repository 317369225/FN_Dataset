What is the best way to implement a HashMap for fixed-length strings in x86 assembly?
It depends... "best way" could mean fastest, easiest... and for hashing correctly, you need to know what is the nature of the data. You only say they are fixed-length, but don't clarify if you need to support duplicated strings, or they are unique; in particular, if your situation is a fixed dictionary, you could find out a "Perfect Hashing" function. Apart from that, which is independent of language, you should try to exploit the advantages of assembly language; using string-like instructions and XORs for example come to mind as useful tools to implement a fast hash function that would evaluate any string quickly. Again, if this will be a fixed table of strings, I would look for the appropriate "seed" values to my XOR-based hash function to make it perfect, so just with traversing the lookup string, I would get the right index in the array to get the data. 