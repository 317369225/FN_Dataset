What would be a good choice of bit vector size and number of hash functions to create a Bloom filter of 208 million URLs?
To extend Tim Wilson's answer, you can minimize the probability of false positives by choosing the number of hash functions [math] k [/math], given fixed [math] n [/math] items and [math] m [/math] bits. This minimizing value is approximated as [math] k = \frac{m}{n} \ln 2 [/math]   [1]. For your 208 million URLs and 1 GB bit vector, the optimal number of hash functions would be [math] k = 28 [/math], yielding a significantly lower false positive probability of [math] 3.73 * 10^{-9} [/math]. [1] Bloom filter 