Can I get all the shortest paths from source node to destination in graph using bfs?
Yes, assuming we're talking about an unweighted graph. Typically, we save the predecessor of each node (the node that lead to it being discovered and enqueued), in order to reconstruct the shortest path. Then, we just follow the predecessor links, backwards, from the destination to the source. If you want to find all possible shortest paths, we should save a set of predecessors for each node. This is because we can have multiple ways to reach one node with the same cost. Record the distance to each node. Initialise the distances to infinity. When processing an edge u-v, If distance(u)+1 < distance(v), enqueue v and set u as its predecessor If distance(u)+1 = distance(v), only add u to the set of predecessors of v After executing the BFS, generate all shortest paths by traversing all predecessors, starting at the destination until you reach the source. If the graph is weighted, the same idea can be applied to Dijkstra's algorithm. 