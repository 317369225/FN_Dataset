How can I find a path of a given length between two nodes in a weighted (undirected) graph?
Consider any node that is not the root: its possible distances from the root are all possible distances of its neighbors plus the weight of the connecting edges. If you think carefully, it's easy to see that there can be many graphs such that the number of paths to nodes in layers that are further away from the source can explode exponentially, making the problem intractable if the target is far away. A guarantee of acyclicity in the undirected case obviously avoids this problem because there can only be one (simple) source to target path. A DAG is trickier because you can have multiple source to target paths and paths can converge/diverge. The general directed problem (even cyclic) can in fact be approached using maximum flow to generate a set of edge-disjoint paths in the graph, but this is only a subset of all possible paths and the full problem is still, ultimately, intractable. You can probably prove this more formally with a reduction from a known NP complete problem. 