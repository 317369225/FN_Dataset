What are the most efficient route calculating algorithms to calculate the shortest time and shortest distance?
This problem can be modeled as a shortest path graph traversal where the weights would be time/distance. The best solution depends on several factors (negative cycles, single source versus all pairs shortest paths, sparse graphs, etc.) but there are well known existing algorithms to solve these problems in polynomial time. Dijkstra's algorithm is a common solution for finding a single source shortest paths on a positively weighted directed graph in [math]O(V lg V + E)[/math]. Floydâ€“Warshall algorithm can be used to find all-pairs shorted paths using dynamic programming in [math]\Theta(V^3)[/math] 