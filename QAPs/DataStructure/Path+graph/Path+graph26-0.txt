Can the shortest path problem for cyclic graphs be solved by BFS, and WHY?
Yes, BFS works on cyclic graphs. You maintain a set of vertices you've already seen, and when a vertex that has previously been seen is seen again, you avoid adding it to the queue of vertices to explore. This is the purpose of that set in BFS. Through it, we guarantee that each vertex will be added to the queue and hence explored only once, from where we get the O (V + E) time complexity. If you had a graph that was a tree (acyclic undirected graph), then the set is not required and you can simplify the algorithm by omitting it (this is what's known as level-order traversal of a tree). Note that the set is still required for a directed acyclic graph (why?). 