What is the most efficient and/or simple way to represent a path in a graph?
The easiest and memory efficient: a list of all nodes passed, in order. It is in some cases possible to reduce the necessary memory by only storing distinct elements of the path. If for example your path is the unique shortest path, then you will only have to store that it is the shortest path possible from a to b. By using that observation you can make a recursive algorithm that compresses a path by storing only a few selected nodes. Then when deflating the algorithm only has to compute the shortest path between those nodes. A possible implementation is to first check whether the given path is unique shortest. If not check for all sub paths of length minus 1.Â  Then of length minus 2, etc. Repeat until you have checked all subpaths. However, with such compression you can save a lot on memory but you have to compute what the actual path was any time you need it since it is not in a nice form suitable for most computations. 