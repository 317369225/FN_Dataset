What are the most efficient route calculating algorithms to calculate the shortest time and shortest distance?
Matthew's answer is correct. But I'll add that most practical systems use a technique called A* search. The intuitive way to understand it is that it's an extension of Dijkstra's algorithm. The difference is that you bias your search more toward the points closer to your destination, instead of exploring equally in every direction. As far as I'm aware, it doesn't improve the asymptotic running time. But for a typical road map, it works much better. And it's not hard to understand why. If you're driving from LA to San Francisco, there's no need to explore paths around San Diego. 