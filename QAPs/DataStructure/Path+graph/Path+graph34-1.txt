How can I find a path of a given length between two nodes in a weighted (undirected) graph?
You can use a customized version of Uniform-cost search. Use Uniform-cost search but do not keep track of visited nodes, and on each node keep track of all of the possible costs to that node. You then have to backtrack from a node, when either your computed cost for the node is more that the given wanted length, or if the computed length is already existing on the node. For a better performance you can use Dijkstra's algorithm (single-source shortest-path) from the end node so you can change the first backtracking condition to when the cost plus the shortest path to the end node becomes more that given wanted length. 