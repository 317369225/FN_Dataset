What is a program in C/C++/Java to find the shortest path between two nodes in a graph input as an adjacency matrix and the nodes traversed in that shortest path?
I would think that since you want the shortest path as an adjacency matrix, you would want to use Floyd Warshall. This is by far one of the easiest graph algorithms to code (probably even easier than BFS). It is literally 3 for loops and an if statement. However, finding out how it works is an exercise for the reader (it is really ingenious). The pseudocode for Floyd Warshall is below: let dist be a |V| × |V| array of minimum distances initialized to ∞ (infinity)for each vertex v     dist[v][v] = 0for each edge (u,v)    dist[u][v] = w(u,v) // the weight of the edge (u,v)for k from 1 to |V|     for i from 1 to |V|          for j from 1 to |V|               if dist[i][j] > dist[i][k] + dist[k][j]                     dist[i][j] ← dist[i][k] + dist[k][j]               end if Read more at Floyd–Warshall algorithm. 