What are the best programming interview questions you've ever asked or been asked?
"It says here that you're proficient in C and C++, is that correct?" "Yes, that's what I used at blah blah blah from blah blah blah to blah blah blah." "Remember malloc?" "Yes, of course." "Great. I want you to write malloc on the whiteboard." I laughed out loud. "Are you serious?" He laughed too. "Yeah! We'll do free if we have time." As I went to the board he said, "you might want to describe the design first." So I described a heap, and wrote some code to allocate from it. It kept me busy for a good long while and it gave the two of us a lot to talk about. There are a lot of decisions to be made about what to optimize for, and how to do it. We occasionally talked about how free() would work, but there wasn't really time to write it on the board (I wonder how many of his candidates got that far). The element of surprise at the beginning is part of what makes it such a great question. My first thought was "that's preposterous," and when I laughed, he laughed too. So that broke the ice, put both of us in a good mood, and helped to keep the whole thing fun. One of the nice things about this interview question is that once you sketch out the core concepts, you can very easily spend an hour exploring the details, the tradeoffs associated with doing it one way vs. another way, and so on. It's just one continuous conversation. And it's a one-sided conversation, and I mean that in a good way. Programming interviews are often a series of small puzzles, each completely unrelated, each requiring time to explain. When the interviewer is talking, they aren't learning much about the interviewee. With this approach, the interviewer wastes very little time talking. The interviewer's questions were all very short - because we both know what malloc does - so he spent almost all of his time listening, and that's what makes it a great question. Updated 77w ago â€¢ View Upvotes