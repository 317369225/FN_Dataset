What is a reasonable algorithm for generating a random triangular planar graph of given size?
I would start by creating a random 2d plot of points according to some distribution (uniform in your case, I guess) over the planar area of interest.  Then, use a triangulation algorithm like Delaunay triangulation to tessellate the points. ADDENDUM: You  could always try a modified version of the planar graph generating  portion of the Delaunay algorithm that's based on the  insertion of nodes into existing triangles, explained here: Delaunay triangulation.   You could also add points outside existing triangles to keep the convex hull interesting. The essential difference would be that you wouldn't do flipping or any other sort  of balancing of the triangles.  That way, you wouldn't need to store  nodes as Cartesian coordinates per se, though you might want to keep  track of existing triangles as objects to make insertion quick.  I  originally mentioned the unmodified Delaunay algorithm because it gives  "nice-looking" embeddings.  I didn't realize that you just wanted the  graph topology. Updated 145w ago • View Upvotes