What is a reasonable algorithm for generating a random triangular planar graph of given size?
How much programming work do you want to do, and how serious are you about an answer? I have written FORTRAN code that meshes a roughly convex polygon. Any typical shape can be subdivided to form the convex ones, so any object could be done this way. I used some simple rules going around the boundary to create a new boundary inside along the old one. The space between the boundaries was formed with triangles which were accumulated as the algorithm progressed. Since the new boundary is shorter than the old one, some corresponding segments can be eliminated. Not always, but often. Eventually the algorithm gets near the center, and a simple polygon can be divided in another way into triangles. It is a recursive algorithm with another algorithm used when stopping criteria are met. It is very fast, not that you are interested in that. I can describe this in more detail if you are interested. My work is not in this stuff, but I needed to do it for practical use. So the way I did it is pretty simple, fast and effective. I meshed a circle - the graph is below. You can see that it is triangles over the circle. 