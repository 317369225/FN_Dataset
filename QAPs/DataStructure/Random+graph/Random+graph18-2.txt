What's the coolest mathematical object?
Chaitin's constant: the probability that a random program terminates. It is a real number, with a precise mathematical definition. On the other hand, the number is incomputable (in the Computable number sense), so we don't really have any way of determining the number with a given precision. Note thatÂ  this is not an open problem of the "we don't know how to do it" kind. It is a provable fact that there is no algorithm such that you plug in any [math]\varepsilon>0[/math] and the algorithm outputs a value that is within [math]\varepsilon[/math] of Chaitin's constant. Here are some technical details. The exact value of the "constant" depends on the meaning of the words "random" and "program". Here's how its definition can look like: Pick a Turing-complete computability model (i.e., a programming language). Fix a prefix-free encoding of programs into finite strings of bits. (Prefix-free means that no valid program encoding is a prefix of another program encoding. This is a mere technicality that is trivially true for many programming languages and easy to guarantee for all others.) Start flipping a random coin and write down the bits you get. Stop once you get a string that represents a valid program. (Note that for some encodings it is possible to never reach such a string and flip coins forever.) Now, Chaitin's constant is the probability that the above process generates a program that takes no input and terminates after finitely many steps of execution. Formally, it can be defined as [math]\sum_p 2^{-|p|}[/math] where the sum is taken over all finite bit strings [math]p[/math] that represent the good programs. 