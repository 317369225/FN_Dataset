I have a bump in the road of learning object-oriented programming. What are some tips that you can give me from your experience?
Think of OO like this: You want to build a car. Before you do that and use your car, you have to determine what makes up a car and what a car does. We need a blueprint. This will be our class. Let's keep it simple and say that the following things are all you need for a car: an engine, a make, a model and a registration number These will be your global fields/variables. Now, what can you do with a car? You can drive it, right? So you should have a method called drive that does something. Maybe it simply takes in a location as a string (parameter) and returns the string: (make + " "model + " drives to " + location). This is the functionality of your class. So we now know what makes up a car and what a car does. Now, we need to build it. To do this, we need to know what size engine it has, its make and its model and its registration number. If we plan on creating multiple cars, we can't just hard-code these values - all the cars would be identical! Instead, we use what's called a constructor. Our constructor will take in the parameters (engine, make, model, reg_number) and assign these to our car's variables. (hint: we can use the same name for our parameters as we do for *this* car's variables). The constructor stores our car in memory so now we can use our car and drive("anywhere")! And we can now use our constructor over and over again to create *new* cars. There should be enough there for you to create a car object. Give it a go! Once you understand the basic concept of an object, your next step should be thinking about groups of objects. Your car is good but what if you want to create a motorcycle? It will still have the same fields as your car and the same functionality but it only has half the wheels of a car! They're both vehicles however so perhaps creating a vehicle class with those shared features would be better. You could then extend your vehicle class with a Motorcycle and Car class that accounts for the differences. OO can be difficult to grasp at first but before long, it'll click and you'll be surprised you ever had trouble in the first place! 