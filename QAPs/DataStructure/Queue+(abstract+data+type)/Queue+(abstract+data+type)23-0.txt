In what situation can I use linked list?
A true linked list can be used in any situation where data is meaningfully stored as a sequence that is accessed via a cursor. This cursor may be fixed, as when you implement stacks or queues via linked lists, or dynamic. You have the means to traverse the list to any point and to break/join linked lists as desired at any point in the sequence. (You can beak off sub-trees from a tree, but grafting a sub-tree is harder as there's implied ordering that you may violate.) True linked lists are common where the amount of data involved iis completely arbitrary. A linear array and a ring buffer have the same abstract data type as a true linked list, you can join, split, move the cursor, add wherever, etc. These are not true linked lists, in that the links are fixed and not dynamic, you have to garbage collect and block move, etc, but they are still linked lists because software engineers are forbidden by good practice from considering implementation details. Only the abstract matters and the abstract is the same. 