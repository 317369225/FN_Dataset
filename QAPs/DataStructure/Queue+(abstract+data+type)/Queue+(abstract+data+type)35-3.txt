Java Interview Questions: Which are the frequently asked interview questions for Java Engineers ?
I found this question interesting hope this helps someone who is going for an interview. Interviewer : Integer a = 100, b =100; Integer c = 1000, d = 1000; System.out.println(a == b); System.out.println(c ==d); Expected output of this program? Looks quite simple but try it yourself and understand the concept? Interviewer: public interface A{ public void method1(); public void method2(); public void method3(); } abstract class B implements A{ }//Question:How many methods do we need to implement in class B? Can we declare the methods as abstract in class B which are there in interface A? Interviewer: If compareTo() method returns zero this means that the objects are always equal? Me:Yes. But I was wrong at that point its not necessary the example displaying the failure of this is  java.math.BigDecimal class, whose equals method will return true is the value is equal in both value and scale for ex:- 6.0 and 6.00 will not be equal, but compareto() will return 0 if both objects are compared. On doing some R&D I found that: It is strongly recommended, but not strictly required that (x.compareTo(y)==0) == (x.equals(y)). Generally speaking, any class that implements the Comparable interface and violates this condition should clearly indicate this fact. The recommended language is "Note: this class has a natural ordering that is inconsistent with equals." This question can also be asked in an other way as: Can we store BigDecimal Class in TreeSet? Anser: NO because of the above reason. I would like to add few more common questions from different sources so that it may be helpful for someone and myself also when some quick revision is required. Difference between long xl = 1000*60*60*36*365L and long x = 1000*60*60*36*365? Page on stackoverflow.com this page explains very well about one of the famous interview question. Avoiding "!= null" statements in Java? This explanation is very good. Easy interview question got harder: given numbers 1..100, find the missing number(s) StringBuilder and StringBuffer Page on stackoverflow.com Tells about concurrent HashMap Output of the following program: Integer i1 = 127;Integer i2 = 127;Integer i3 = 128;Integer i4 = 128;System.out.println(i1 == i2);System.out.println(i3 == i4);    Output: true, false .Now the question is "why?!"   Reason: Integer.valueOf() uses internal cache to retrieve the value.Only if the value is not in cache new instance of Integer is created.This cache is initialized from 0 to 127 inclusive so when we try to get the value lesser than 128 we get the same value from cache and in case of values greater than 127 it creates new instance.  While browsing whole day through google I found some of the websites which you may find interesting and help you to perform good in interview's: Top 20 Core Java Interview Questions and Answers asked on Investment Banks Java Source Code Examples Java Programming Exercises Top 10 Algorithms for Coding Interview Hunting Memory Leaks in Java Update 1 : After a long time I am updating this answer, last night I was going through some topics and found them interesting please go through them before attending any interview Differences between abstract class and interface In the above link it is very well explained the difference between the abstract class and an interface even most of the experienced programmer are unable to answer this question correctly. A Strategy for Defining Immutable Objects Also go through the oracle documentation which clearly defines the strategy of defining the immutable objects in java. Update 2: Updating sone of the interview questions which I encountered recently: Question 1: one thread printing even numbers in an array and another thread printing odd numbers in the same array. Write a program to print the consecutive numbers in an array. For ex:- 1,2,3,4,5,6 Question2: Internal working of Hashmap? Question3: Class A is serialized and contains a refrence to the refrence to the class B will the class B also be initialized? Next question on the same scenario: What will be the case when the class be extends class A ? Question4: Question on Upcasting and Downcasting? Question5: What is System.out.print ln() ? Guys will keep on updating the answer in the future. Updated 9w ago • View Upvotes