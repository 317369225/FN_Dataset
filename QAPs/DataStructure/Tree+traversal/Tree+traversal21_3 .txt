Can we construct a binary tree having just its pre-order and post-order traversals?From the top of my head: Yes, that should be possible. Lets assume we have those two scans: pre-order 2 1 5 3 4 6 post-order 1 4 3 6 5 2 Note that a post order scan reversed is the same as a pre-order where you go "right branch first"! We start at the root, obviously 2. next in the pre-order scan is 1. Since the predecessor of 2 in the post order scan is different, we know that 2 has two children, 1 and 5. We continue recursively, 1 and 5 being new roots: Proceding to 1, seeing that it has a successor pre-order (5) that has already been used as a root and no predecessor in post-order, so it's a leaf. Starting at 5, seeing that successor is 3, predecessor 6, so both are children of 5 ... and so on.  -- 6  -- 5 -|  | | -- 4  | -- 3 -| 2-|  -- 1 - Start at root - Look at successor of root in pre-scan, count as "none" if previously used as a root. - Look at predecessor of root in post-scan, count as "none" if previously used as a root. - If both exist and are different -- :two children, mark as roots, attach and continue recursively, starting left - else if both are the same -- :only one child, mark as root, attach left if smaller key, right if larger. Continue recursively. - else if both don't exist {it's not possible for only one to be missing} -- :current root is a leaf, return from recursion. 