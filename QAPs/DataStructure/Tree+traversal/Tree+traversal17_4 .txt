It depends on the problem. For instance, how would you implement a tree traversal without recursion? (Yes, you can fake it by using an explicit stack, or back links, but it's harder.) In object-oriented programming you often create hierarchies of polymorphic objects that you have to traverse. I bet you wouldn't think twice about using recursion to do it. A tree is an example of a data structure whose definition is recursive. So is a linked list. An array, on the other hand, is an iterative data structure. It's easier to use loops when working with iterative data structures, and recursion when working with recursive data structures. 