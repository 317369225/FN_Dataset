How can we convert a binary tree to a doubly-linked list in zig-zag level order traversal efficiently  with/without using recursion?该网页不存在附加信息...1 2 3 4 5 6 7 8 9101112131415161718192021222324 void f(node& root) {  vector<node> v0, v1;  node cur;  v0.push_back(root);  bool flag = 1;  while (!v0.empty()) {  for (int i = 0; i < v0.size(); ++i) {  if (v0[i].left)  v1.push_back(v0[i]->left);  if (v0[i].right)  v1.push_back(v0[i]->right);  if (flag && v0[i].left && v0[i].right)  swap(v1[v1.size() - 2], v1.back());  cur.left = &v0[i];  v0[i].right = 0;  cur = v0[i];  }  reverse(v1.begin(), v1.end());  v0.swap(v1);  v1.swap(vector<node>());  falg = !flag;  } } 