What can be done to master recursion in tree traversals?The important skill to practice is converting thoughts to code. Some of them are super-easy (add one to the counter). Some of them are a little harder. Recursion's not usually hard. Think about what you're doing when you traverse a tree. Let's say it's a binary search tree. In a BST, each node has a Value, a Left node (which may be null) where all the values are less than the parent's value, and a Right node (which may be null) where all the values are more than the parent's values.  How would you traverse a BST and display all the values from smallest to biggest? To display a node and its children, you'd say  If the node we're looking at is null, do nothing. Otherwise:  Display everything less than the node I'm on.  Display what's in the node I'm on.  Display everything more than the node I'm on. So it would look something like void DisplayTreeLowValuesFirst(Node node) {  if (node != null)  {  DisplayTreeLowValuesFirst(node.Left);  PrintValue(node.Value);  DisplayTreeLowValuesFirst(node.Right);  } } The main call would look like DisplayTreeLowValuesFirst(baseOfTreeNode); The thing to note here is that the code is super-simple. How would you change the code if you wanted to print the values from high to low instead? 