How did preorder, inorder, and postorder binary tree traversals get their names?Why are they called that?If you look at the nature of these traversals it gets pretty obvious. In preorder each parent node is visited before (pre) its children. In inorder each parent node is visited in between its children. In postorder each parent node is visited after (post) its children. Here's example pseudocode of different traversals for BSTs, see how their nature of traversal also matches with their respective implementations. :)  1 2 3 4 5 6 7 8 91011121314151617 preorder(node)  if node == null then return  visit(node) // Before  preorder(node.left)  preorder(node.right) inorder(node)  if node == null then return  inorder(node.left)  visit(node) // In between  inorder(node.right) postorder(node)  if node == null then return  postorder(node.left)  postorder(node.right)  visit(node) // After 