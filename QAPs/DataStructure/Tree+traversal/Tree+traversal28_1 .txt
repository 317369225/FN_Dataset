Given a preorder traversal of a binary search tree, how can we reconstruct binary search tree efficiently?We can start with the first element arr[0] and divide the rest of the array in two parts for the left and the right subtree. The element arr[1] will be root of the left subtree, the problem arises in finding the right subtree. The root of the right subtree (right child) could be found by performing a modified binary search such that the element arr[i] has an element lesser then arr[0] on its left while itself is greater then equal to arr[0]. This binary search would be performed on elements to the right of arr[0]. Now since we have the two child, we perform the operation recursively on the subtrees we just found. If arr[0] is the root then its left subtree is from arr[1] till arr[i-1] and the right subtree is from arr[i] to arr[n]. This is an O(n logn) solution. 