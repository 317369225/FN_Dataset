Is this a good sequence to learn programming languages? What should I add?
Well, you're missing the point. There isn't a sequence in which you learn programming languages. There is what makes you tick and what you want to do, and there are the tools to do it. However, if I had to make a sequence... Javascript is a must if you want to do web development, and can be a nice language in theory. It's a multiparadigm language, though, and some of its hooks and cranks are just not really well adjusted for someone who's just beginning programming. PHP is a programming language, while MySQL is a database driver, and I see you group them together, that's how they're put on job ads, etc. but PHP isn't exclusively tied to MySQL or vice versa. If you've already learnt Javascript, you know about at least some of the things you'll use in PHP. I don't neccessarily think that you have to learn PHP to achieve anything, though, you could skip to Ruby here for a nicer experience. For one, no strange syntax all over the place, better builtin structures and a full object-oriented experience, no hacks. Once you know Ruby, even though you might have learnt it as a web development language and used it with something like Rails, you can use it for general purpose programming, doing whatever you want with it. Of course, this could be done with PHP but you won't see many people doing it. Going from there, you now know Javascript, which is functional and object-oriented; you know Ruby, which is full on object-oriented, so going to Java next seems like a nice ride. This will even let you see JRuby as a nice transition, because you'll get a chance to see how the JVM works through something you already understand. Java will bring some strictness into your life and discipline you in how to use strongly-typed types. Going from there, get a glimpse of C#: it's almost precisely the same as Java in its root, so you almost don't have to learn it if you know Java. However, there are some nice features and things that will make you go "oh, nice!" when you see them, that Java doesn't have. That's a nice adventure right there. Now, both C# and Java are languages running on a virtual machine, so you might want to, at this point, go down, deeper, and see the real deal. You already handle part of the syntax of C, that you've seen in all of the other languages you've been exposed to, so now you might want to jump in and learn C first hand. Let me stress that C is not C++. They are different beasts. I'd always tell people to learn C++ nowadays, because they'll have to learn C in the process (the common part of the language anyway), without the things that changed from C to C++ parts getting in the way. So, C++. You're learning how to live near the center of the world, where it's all low-level and running blazing fast. At one point, you will get to the part whereÂ  you want to go hands-down, and this is the point where C++ is compiled into assembly. So, you take a book and learn how assembly works. Note that you'll probably never write assembly by hand, but knowing it helps. Getting up from the assembly part in which you've been stuck, you'll see that the game engine you've been writing (hopefully not using all of these languages) needs a simple, yet remarkably ugly (sorry, Lua) scripting language, so you'll take Lua, look at it for a while and, using your experience from the vast number of languages you've crossed, understand everything about it. You'll see that it's easy to embed, so you'll say "ok" and embed it into C++ code. Somewhere along the way, you'll go "oh my, this is so bad, I can't work in a language where everything is a table!" and search for other solutions. During that trip, you'll see Python and decide that it may be a better idea. It will look like Ruby, which will make you reminisce and go back for a whirl. And just to be on the flip side, HTML and CSS aren't even programming languages. They just present the content of a page. You can list them with the other data/markup languages you'll see along the way, like JSON, XML, etc. Also, about the time this will take: that depends completely on you. Took me many happy years. Maybe you can do it in less. I wouldn't say that this is neccessary at all, mind you. There is no ultimate end to this journey. 