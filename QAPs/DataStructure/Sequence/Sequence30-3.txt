Is this a good sequence to learn programming languages? What should I add?
Hi I think its a difficult question to answer since Im not exactly sure what you want to do with your programming skills. If for example you wish to involve yourself in TCP/IP network programming and server/client programming that is to say socket programming then starting with C and a text on socket programming based on C would be great. Building your own server client systems and playing around therewith. If you wish to be a web programmer then perhaps you need to learn razor and MVC5 with entitiy framework and MVC patterns using abstraction. It really depends on what you want to do, also at the same time you can learn a lot of different entity framework recipes and patterns which will add value to you as an engineer. With regards to flexibility learning razor would also allow you to move on to server/client systems in C#, you could learn to write multi threaded sockets in C# which in itself is a good skill to have. Actually starting with Razor or C would be a good idea. Â  But seriously, why such a program knowing a lot of languages doesn't necessarily make one a good coder. Focus on your area of depth and be good at that and then have a breath area. Eg. You could decide to focus on C and become good at it and build applications that you place on GitHub and actually its what you can do with the language you know that counts and what you have built with it. In fact it should take you about 6 months of using a language to bleed yourself of the "training engineer" status. a friend of mine was given a 6 month engineer in training contract by BMW as a Java engineer, proving that 6 months is enough. I would personally advise that you stay away from PHP and Java(everyone knows it). Learn C and be able to use it well. Again Ive made assumptions in my answer and all the best :) 