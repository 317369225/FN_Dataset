What are the advantages/disadvantages of using Protein Alignment vs Nucleotide Alignment?
Very good answers by both Alex and Ian. I want to add a bit of information. Really, what kind of alignment you should use depends entirely on what you are trying to do. All alignment problems are not created equal. If you have a nucleic acid sequence and you want to find homologous or otherwise related sequences, then you should use a protein-protein alignment as Alex and Ian suggest. (Actually, you should use a special nucleic acid alignment called tblastx, on which more in a moment.) But if you have a sequence of known origin but unknown location in the origin sequence - for example, if you have a sequence read from a patient and you want to align that sequence read with the reference genome to see if there are any SNPs or mutations - then a protein alignment is overkill and it will be better to use a nucleic acid search like BLAST or even BLAT (which is much faster and much less sensitive than BLAST). This is because the computational difficulty of an alignment problem is proportional to the desired sensitivity of the analysis. If you expect that desired matches to your query are going to be fairly divergent, with lots of replacements, insertions, gaps, etc., you need a sensitive analysis like BLAST which will take into account a lot of different possible alignments, which takes more CPU cycles. However, if you expect that the desired match is almost identical to your query, with only a few mismatches - such as our clinical scenario above - then you won't need to do a very sophisticated analysis, because there will be one quite obvious alignment, and you (or the computer) will know it when you see it. In this case, you should run a simple algorithm like BLAT and get your answer in half a second instead of watching your BLAST ticket refresh itself for who knows how long. You probably know about this, but I wanted to add that my favorite BLAST alignment mode is tblastx, which combines the versatility and large database reach of a nucleic acid alignment with the sensitivity of a protein alignment. You can select tlbastx from the BLAST query page. The recommended target database is nt. Tblastx works by translating your nucleic acid query into a protein sequence in all 6 reading frames (3 forward, 3 reverse) and then performing a protein alignment against a nucleic acid database which has also been translated in all 6 reading frames. The alignments are returned as nucleic acid sequences with translation from the relevant reading frame. Why is this good? Well, as Ian and Alex both noted, regular nucleic acid alignments (such as regular BLAST) are not always sensitive enough to find moderately- or distantly-divergent homologues of a query sequence. Protein alignments like blastx can do better, for reasons which A and I have explained. But protein alignments have their own problems, mainly because protein sequence databases have problems. It's obviously easy to sequence nucleic acids, but very hard to sequence proteins. Accordingly almost all protein sequences in most protein databases (such as NCBI's nr database) are derived from translations of cDNAs, or automatically translated from DNA sequences by gene prediction algorithms.* This means that the vast majority of protein sequences present in the nr database have never been observed in any lab, and I'd imagine that for many of them we don't even have evidence on the RNA level that they exist. The gene prediction algorithms are good, but they aren't perfect, so there are many false positives and many more false negatives. To make a long story short, if you are looking at a record in a protein sequence database, unless that record corresponds to a well-known protein in a well-known organism, you should take it with a grain of salt. These shortcomings are especially acute for databases that have a lot of sequences of unknown origin, like the NCBI's metagenomics database, env_nt. (Yes, there is env_nr, but once again the protein annotation is done algorithmically.) The great thing about tblastx, then, is that you can combine the sensitivity of a protein alignment with the reach and integrity of a nucleic acid database (whose records are hot off the sequencers and hopefully have not been excessively mangled by an overly ambitious computer). Of course, there's no such thing as a free lunch: protein alignments are already more computationally complex than nucleic acid alignments, and each tblastx search performs 6 of them, so a tblastx will generally take >2 times longer than a comparable BLAST. It's definitely worth the wait. *One particularly important exception: the Protein Databank's database, PDB, contains only proteins with solved structures, which obviously cuts out most of the rifraff but also results in an extremely tight bottleneck on entrance into the database, preventing PDB from being of much use in most homology BLASTs. If you want to go to the next level of sensitivity and use something like HMMER or Robetta, PDB will be very useful, but that's another story for another time. 