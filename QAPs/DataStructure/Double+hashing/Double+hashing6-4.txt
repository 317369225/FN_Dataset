How much time did you spend preparing for Google's interviews?
Give yourself 3 months with 20 hours prep-time per week. If you haven't been interviewing often, you are going to be rusty. I started with CLRS and didn't feel quite as prepped after a month and a half. Though solving the exercises did give a real kick :) I then switched to a different strategy and that worked for me. I would prep on 4 fronts - 1. Algos [75% of the total time]. 2. System Design [10%] - Eg: How would you design twitter 3. Object Oriented Design [10%] - Eg: Design a poker game 4. Resume, Core Language/Technology Brush-up [5%] For the algos part - Queues, Stacks LinkedLists, Trees [Check Nick Parlante's notes on these - http://courses.cs.vt.edu/~cs2604... & http://courses.cs.vt.edu/~cs2604... String Manipulation (cover tries), Bit Manipulation [Online Resources] Graphs (DFS, BFS mostly) Dynamic Programming [Needs some head wrapping but worth the effort. http://people.csail.mit.edu/bdea... ] My recommendation would be to read up on basic theory and then dive into the interview cookbooks [Cracking the coding interview] and leetcode/careercup. Each and every question on my GOOG interview loop could be found online. And having solved a *similar* problem before gives you an edge. Yes, the interviewer will help you with subtle hints etc. But they do expect you to get to some base solution in the allotted time. One final note, if you are investing all this time in prep, why limit yourself to just Google. Go bazooka, I'd say. Interview with other tech giants. If not anything, it will give you some leverage in salary negotiations (if you make it through). Marginal cost is low. Feedback/Answers on the comments: 1.  I spent 2 months after changing track. The last 15 days were spent on real-world pratice - mock interviews [with various companies]. You don't want Goog to be your first interview shot. 2. I concur with the other answer that Goog prefers couple of high interview scores and you could get away with a bad interview or two. It appears, there is no feedback amongst interviewers apart from the questions asked. Contrast this to one of the other companies I interviewed with - Microsoft - where-in the first couple of interviews are important as they set the tone for the rest of the interview. There is a continuous feedback loop between interviewers. The book "Cracking the coding interview" delves into some of the interviewing formats used at the tech giants. 3. System Design and Object Oriented Design Preps - Object Oriented Design - Read "Head First Design Patterns" cover to cover. Skimmed through GoF book - was too dense for me :) System Design - Unfortunately, there isn't any single book that will help you prep on this. a) I read up on the whitepapers published by the company (GFS, BigTable, MapReduce, Chubby etc.) b) Followed official Engineering Blogs of various companies. c) Spent time on High Scalability - High Scalability site reading up on various scalable architectures.   4. I did make it through. Sorry, it isn't very obvious from my answer. Updated 135w ago • View Upvotes