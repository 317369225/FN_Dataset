How can one sharpen their problem-solving skills to prepare for an interview at a top-level software engineering firm?
Ask any skilled worker and he'd tell you practice makes perfect. To practice and work on your problem solving, you need to: Read good algorithm books (at least one of them, cover to cover): Robert Sedgwick's Algorithms in Java: http://www.amazon.com/Bundle-Alg... Introduction to Algorithms by CLRS is an all-time classic: http://www.amazon.com/Introducti... Mark Allen-Weiss' books on Algorithms are good too: http://www.amazon.com/Data-Struc..., http://www.amazon.com/Data-Struc... So are Adam Drozdek's work: http://www.amazon.com/Data-Struc..., http://www.amazon.com/Data-Struc... Hon'ble mention: Robert L Kruse et al: http://www.amazon.com/Data-Struc... Difficult books: Art of Computer Programming, Donald Knuth: http://www.amazon.com/Art-Comput... Programming Pearls, JL Bentley: http://www.amazon.com/Programmin... Those books will help you get a firm grip on data structures and common algorithms (sorting and searching). Provide you with a strong base (complexity analysis and design techniques) on which you can build your problem solving capabilities on. Solve tonnes of interview problems listed online Sites like CareerCup (http://www.careercup.com/) and GeeksForGeeks (http://geeksforgeeks.org/forum/v...) document company interview questions almost exhaustively. The trick here is not to read the solutions posted by others, but to formulate a solution yourself to the problem listed. If you cannot come up with a solution yourself after much thought, go ahead and read the solutions posted by others and try to understand them and evaluate your thought process with the thought process the solver could have possibly gone through to solve that problem. Familiarize with hard interview problems Subset sum, Max Subset Sum, Longest Common Subsequence, Longest Common Substring, Regular Expression parser, Edit distance between two words, Connectivity problem, Knapsack problem, TSM, generating combinations and permutations, Fuzzy string matching etc; If you don't have a book in hand, refer Wikipedia when in doubt, its a great reference resource: http://en.wikipedia.org/wiki/Lis... StackOverflow has some classic algorithm problems listed. Go through as many of them as you can: http://stackoverflow.com/search?.... Updated 251w ago â€¢ View Upvotes