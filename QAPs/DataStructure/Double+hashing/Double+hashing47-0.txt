Programming Interviews: How should I prepare to get placed in Dream companies (CS product-based)?
The answer below is a little tailored towards campus placements and my selection in Google. In case of off campus placements, the process remains the same, but you just have to make sure that you get that interview call. And you can expect the number of interviews to be more. Getting a job in a good product based company can be tough. The recruitment procedure is thorough and grueling. In my experience resumes don’t play a very important role beyond the function of getting the first interview call. Even in that the resume is mostly used as a rejection criteria rather than acceptance criteria. In reality nobody cares if you organized the technical fest, headed the Cultural Council, were the sponsorship lead, because at the end of the day they want you to write awesome code. Often the only thing that they ask from your resume is to describe your favorite project, which too mostly is an ice breaker. If you want to get a job in a good software firm, learn to code and that too code well. And not only code you must learn how to develop things. Contributing to an open source project and working on algorithms and data structures is important. A good book for Algorithms is “Algorithms” by Sanjoy Dasgupta Data Structures and Algorithms in C++ by Adam Drozdek Practice at least 50 interview questions for which company you are appearing for from sites such as MyCareerStack GeeksforGeeks CareerCup The best way to get selected is to practice loads of interview questions for the company that you are appearing, and not only solving them but also learning them. You should also watch MIT Online Course videos at ocw.mit.edu/courses Coming onto things more specific to the placement time. Placement season can be a tough time, especially since you have to appear for so many written tests, listen to ppts (that hardly help) and then prepare for interviews. However it gets more stressful when you see others getting placed and you losing out, sometimes out of sheer bad luck. The right thing to do is to maintain your nerve and understand that luck also plays an important part. However one of the most important things for interviews is that you should learn how to represent your knowledge accurately and confidently. You may know a lot of things but it is of no use if the interviewer does not get to know that. So you must be confident and clear in your answers and try not to fumble up things. Panic attack is a very common thing during an interview and it generally happens if you mix up in the beginning. Generally the first question is not very tough, so capitalize on that and try to give that correctly. Once you have a good start confidence builds up. Some tips are Do a mock interview. Speak out whatever you are thinking, the interviewers are generally helpful and they don’t mind correcting you, but for that you must saying whatever you are thinking. Let them understand how you approach any problem. Dress smartly and speak confidently. Speak at a pitch that is audible to them, confidence warms up the interviewer towards you. If you are unable to solve a problem, don’t waste too much time on it, try asking for a hint. But show the interviewer that you are trying Moving onto something that is more specific - My personal experience in sitting for the campus interviews. I sat only for two companies Facebook and Google. Facebook’s procedure was pretty arbitrary and is not worth talking about. The global Facebook recruiting procedure is pretty tough. It has one very tough online coding question and generally 3-4 personal interviews. (You can see sample questions at Facebook | MyCareerStack ) However the interview procedure at our campus was highly unexpected and I don’t expect they would be conducting their interviewers in the same haphazard manner the next time. Google’s procedure is pretty elaborate. They first have a written test (on paper) that has some objective type questions and 1-2 coding problems. You are expected to write a working code for coding problems and the MCQs are generally easy. They may contain small code snippets or can be theory based as well. You can’t specifically prepare for the MCQs, it’s all about your coding skills and general computer science awareness. The coding questions are very similar to the interview questions, it’s just that they are on paper. There are 2-3 interviews, generally of 50 mins each. The interviewer mostly comes with a target of 3 questions per interview, so if you allowed the interviewer to ask three questions in 50 mins then things are going well. During the interviewer the generally try to get the answer out of you, and hence don’t skip over any question. Google always and I mean always asks from Dynamic Programming (DP) and Puzzles. You should prepare well for DP but puzzles are a bit difficult to prepare for. The puzzles are mostly algorithm oriented and not IQ based. If you code in C++ then you should be well acquainted with STL, if you code in some other language then you must be good at similar constructs in that language. In data structures Google concentrates more on Trees than arrays or lists. My first two rounds were algorithm based and the third was puzzles. DP was asked in two of these rounds and the other had tree based questions. Please note that whatever I have written above is my experience of sitting in the interviews and in no way can be deemed as the standard campus recruitment procedure. Frankly there is no one thing that can describe it, a lot of people have different experiences and different things work for different people. Just try to gain the maximum out of my experience. Further my thoughts about the Google Interview procedure are just my deductions and not something of a standard followed at Google. 