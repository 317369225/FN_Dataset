Why does the size of 'a' equal 4 bytes?
Let us try to understand how values are stored in C variables. There are 2 major  data types. 1. Integer 2. Float First let us try to understand  Integer Data Types. In Integer Data Type the values are converted to  binary directly and stored in memory. For Example, Integer 75 is  converted into 1001011 = 64 + 8 + 2 + 1 Typically the storage area are  allocated in terms of 8 bits (1 bytes). char          -  8bit int             - 16 bit or 32 bit - Depends on the compiler. GCC assumes int means 32 bit, TurboC assume int means 16 bit short int     -  16 bit long int     - 32 bit long long int - 64bit - only in C99  standard if you store 75 in char then  01001011 will be stored if you  store 75 in short int then 00000000 01001011 will be stored if you store 75  in long int then 00000000 00000000 00000000 01001011 will be stored. if  you store 75 in long long in then 00000000 00000000 00000000 00000000 00000000 00000000 00000000 01001011 will be stored. So what is stored  in memory is always binary. Let us see the following cases of storage. For an easy to convert let us use 8 bit storage (char) char i; i = 49;   // Decimal    - Stored  value is 00110001 i = 0x49 // Hexa Decimal - Stored value is 01001001 i =  047   // Octal         - Stored value is 00100111 i = 'a'    // Symbol  -  Stored value is 01100001  - This is ASCII equivalent of 'a' i = -5   //  Negative Decimal  - Stored value is 11111011  - MSB is sign bit next 7 bits  are TWO's complement of 5. 