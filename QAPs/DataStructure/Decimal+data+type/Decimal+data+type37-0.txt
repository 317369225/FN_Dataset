Why would you append an F to the end of a value of a floating point literal in Java? (e.g. float ratio = 0.2363F;) Isn't that already specified in the data type "float"? What happens if I don't include the f? Does something similar happen in the integer data types?I'm learning java by myself reading some books. Im having some trouble understanding the following statement: "Java assumes that all floating point literals are of type double".
First of all, float and double are two different data types. Although the actual sizes can vary depending on the compiler and platform you're dealing with, "generally" (for some definition of "general") a Double is stored in twice as many bytes as a Float. Secondly, keep in mind that in the simple line float ratio = 0.2363F; there are multiple distinct things going on: 0.2363 is being declared It's denoted as a type "F" for float, giving it some precision This is assigned to a variable named "ratio" of type "float". If you were to do float ratio = 0.2363d; You would be trying to assign a number of type "double" to a variable typed as a "float", and either some casting would be done, or the compiler would complain, or both. Edit: Asker still had some confusion: Again, there are two different things going on. Another way of looking at it: One part of the line is declaring the variable: "float ratio". The other is assigning to it: " 0.2363f". Both parts to be in sync for everything to work as expected... double ratio = 0.2383d; is what you're looking for, if I understand correctly. 