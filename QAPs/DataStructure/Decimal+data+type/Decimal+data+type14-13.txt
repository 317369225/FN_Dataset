What's the hardest bug you've debugged?
A universally hard one to debug is the Heisenbug - the one that disappears when you attempt to observe it. I believe every experienced developer has had this one at one time or another. The program crashes, yet when you debug it - it's all fine. You approach it in another way - you add logging or tracing at key locations to peek at variables' values. The moment you get close to determining where things deviate from their expect course - the program starts working properly again! This happens quite often in multithreaded code, where debugging is often impossible and the slightest delay imposed by trace logs changes the race conditions. The last time this happened to me was with a custom authentication provider that substitutes the default ASP.NET WindowsPincipal object with a custom one derived from it. User authentication was crashing unpredictably, yet any attempt to debug or trace around the situation lead to a reliably working application. I ended up "fixing" it by deploying the code with the trace logs to production where it's working reliably to this day... and I still fear that I'm going to see it on The Daily WTF, although I now know what's the problem and that the extra tracing is a reliable fix. It turned out that the custom principal takes a little while to create and it's done asynchronously. Sometimes the first authentication request will be handled before this operation is completed, getting null as a result. Adding trace logging before the login attempt delays it a tiny bit, leading to a fully initialized custom principal object being returned. 