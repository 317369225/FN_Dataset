What's the hardest bug you've debugged?
I wish I could say this my brilliancy, but it's a good story.  In the 1980's the system we were developing ran mostly in 'high memory' on PCs in LISP, but there was a terminate and stay resident (TSR) portion that ran in the lower 640K that was written in C.  An exceptional coworker of mine was debugging a very strange intermittent behavior and had, by stepping through the assembly code, narrowed it down to a string comparison that seemed to fail when it shouldn't.  He described it to my boss, and, without missing a beat, she said: "I wonder if LISP is leaving the CPU's DF register flag set to reverse comparison?"  After investigation, it turned out that (of course) she was right.   LISP always set the direction flag before doing a comparison, and left it where it was. The C Compiler we were using always assumed it was set to forward, and only set it (and restored it later) if it needed a reverse direction comparison.  It still amazes me to recall that story.  I would have spent days if not years trying to figure it out. 