How do I multiply two large numbers stored as strings in the C#?
Maybe this question is best for StackOverflow, but here it goes... It depends on how large these "large numbers" are. You'll need to parse them to something numeric. If they are very large, I recommend parsing them to the "decimal" type. This is to help you avoid losing precison. The syntax for the parse is something like:  var foo = decimal.Parse(string1); var bar = decimal.Parse(string2); var foobar = foo * bar;   var product = foobar.ToString(); If you need to send the product back to a string, use the "ToString()" method as above—for example. If the product of the "large numbers" is more than 128 bits—the size of a "decimal" in C#—you'll need to leverage one of the more creative algorithmic solutions found in the answer to this question for C++ (How do I multiply two large numbers stored as strings in the C/C++ language?). It should be fairly straight-forward to code one of these algorithms in C#, as the syntax is very similar. I make no promises about performance though, if that is a factor to consider at all. 