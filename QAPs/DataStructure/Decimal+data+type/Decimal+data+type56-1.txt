What's the difference between a data structure and an abstract data type?
An abstract data type is a specification (or interface) for how to interact with a sort of data structure without making any statements about how the data structure works. So a list can be described in terms of an abstract data type (we can insert into it, get the nth element, delete an element, etc.), while a linked list is an implementation of that abstract data type (it implements the specified behavior by structuring the data as either an empty list or a pairing of a data element and another linked list.) We could implement the same list abstract data type in many other ways, for example with an array or binary tree. For what it's worth, I think the question is pretty silly, since you rarely hear a stack implemented using a linked list called a "linked list stack"—both the abstract data type and the implementation for a stack are typically called "stack". (The same goes for queues and many other data structures.) Updated 18 Feb 2014 • View Upvotes