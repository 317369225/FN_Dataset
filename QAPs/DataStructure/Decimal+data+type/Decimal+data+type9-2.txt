What is the difference between float and double in C language? How is it stored in the memory?
float and double are two different data types in C for storing real numbers. double occupies twice the memory occupied by float. Well, unlike Java, memory occupied by float (and double and all data types in C) depends on the architecture of the system. The difference between the two is that double is more precise than float. How? Lets take a snippet of code to make the fact more clear.. float f = 1.2; if(f==1.2) printf("True"); else printf("False"); What should be the output? Output: False What happened there?? Let's tackle the problem one by one. We know that numbers or any data in computers are stored in binary and not in decimals. So before storing 1.2 to variable 'f', computer converts it to its binary equivalent. So for converting that to binary, 1 is converted and then .2 is converted. Let's convert .2 into binary. 0.2 * 2 = 0.4 -> 0 0.4 * 2 = 0.8 -> 0 0.8 * 2 = 1.6 -> 1 0.6 * 2 = 1.2 -> 1 0.2 * 2 = 0.4 -> 0 and so on... So in binary 0.2 is equivalent to 0011001100110011...... While storing this vale in float variable, only some bits are stored, depending on the size of float variable, and rest are discarded. So the number stored is bit smaller than 1.2 itself. And hence the comparison fails. If we have used a double instead of a float, the output would have been "True". In this case, when 1.2 is stored in double, more bits are stored than float. This leads to a number nearly equivalent to 1.2. Hence the comparison works. 