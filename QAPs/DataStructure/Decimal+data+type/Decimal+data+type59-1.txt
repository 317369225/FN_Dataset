How can I compute the average of a large array of integers without running into overflow?
It's pretty straightforward to compute the sum as a mixed fraction (x,y)=x+yN   without any worry of precision.  For example we can write (a,b)+(x,y)=a+x+b+yN =  (a+x+⌊b+yN ⌋,(b+y)(modN))  You can then apply this to solve the averaging problem with code like int x = 0; int y = 0; for (int i = 0; i < N; i++) { x += A[i] / N; int b = A[i] % N; if (y >= N - b) { x++; y -= N - b; } else { y += b; } } /* Average is exactly x + y / N, 0 <= y < N. */ This particular implementation assumes your entries are non-negative (although this is fixable). 