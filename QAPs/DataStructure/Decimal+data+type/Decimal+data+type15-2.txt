What is the best way to store monetary value in a relational database system like MySQL?
In most systems I've used, we store monetary values as "cents" (or the lowest possible monetary unit) and store them using integer types.  $1 would be stored as 100 in the database.  I've also seen apps that use 100ths of cents as the "root primitive", so $1 would be 10000. We also avoid doing manipulations on these values in the database: just fetch values, do comparisons, etc; currency conversions and such are done by apps outside the database, depending on the biz logic (either the conversion is done upon INSERT or upon display). Apps that want to display monetary amounts using decimal points do any conversions to dollars and cents themselves. 