What are the things you must learn in C?
Level 1 - Beginner Allocation - Data Types Storage  - Assignment Operators  - Statements Decision Making - Control Statement Allocation - Data type There are 2 major data types. 1. Integer 2. Float First let us  try to understand Integer Data Types. In Integer Data Type the values are  converted to binary directly and stored in memory. For Example,  Integer 75 is converted into 1001011 = 64 + 8 + 2 + 1 Typically the  storage area are allocated in terms of 8 bits (1 bytes). char          -  8bit int             - 16 bit or 32 bit - Depends on the compiler Quincy  assumes int means     32 bit TurboC assume int means 16 bit short int     -  16 bit long int     - 32 bit long long int - 64bit - only in C99  standard If you store 75 in char then  01001011 will be stored If you  store 75 in short int then 00000000 01001011 will be stored If you store 75  in long int then 00000000 00000000 00000000 01001011 will be stored. If  you store 75 in long long in then 00000000 00000000 00000000 00000000 00000000 00000000 00000000 01001011 will be stored. So what is stored  in memory is always binary. Storage  - Assignment Let us see the following cases of storage. For an easy to convert let us use 8 bit storage (char) char i; i = 49;   // Decimal    - Stored  value is 00110001 i = 0x49 // Hexa Decimal - Stored value is 01001001 i =  047   // Octal         - Stored value is 00100111 i = '0'    // Symbol  -  Stored value is 00110000  - This is ASCII equivalent of '0' i = -5   //  Negative Decimal  - Stored value is 11111011  - MSB is sign bit next 7 bits  are TWO's complement of 5. Now let see two cases int i; i =  0x12345678; Since i this is integer, it occupies 32 bit (4 bytes) The  values stored in 4 bytes are 0x12, 0x34, 0x56, 0x78 Operators  - Statements  Arithmetic  -  + , - , * , / , %  Bitwise binary operators - &, |, ~,  ^, <<, >>  Logical operators  -  &&, ||, !  Increment/Decrement - ++ , --  Relational  - < , > , <=, >=, ==, != Decision Making - Control Statement  if / for / while/ The above 4 types are important to start programming. A good programming skill can be gained by using the 4 types. ************************************************************ After practicing the above 4 type then move on to Arrays String *********************************************** char a[5] = "1234"; Since a is an char array of 5 elements, it occupies 5 bytes. "1234" is string of 4 symbols and a NULL character at the end. So 49 (ASCII value of 1) is stored in a[0], 50 (ASCII value of 2) is stored in a[1], 51 (ASCII value of 31) is stored in a[2], 52 (ASCII value of 4) is stored in a[3] 00 (ASCII value of NULL) is stored in a[4], ************************************************* Pointers In C there are three types of pointers are  there.   Let us see through this with the following  examples.   Ex 1.   int a;   In the above example a is variable and &a is  pointer   Ex: 2   int *a;   In the above examples *a is varaible and &a is pointer but  a is pointer (for *a) and  variable (for &a). So a is called pointer varaible   Ex: 3   int a[10];   In the above example  a is pointer and a[0],  a[1], ... are variables.   In example 1 &a = 10; is illegal. In example 2 &a = 1000 is illegal In example 3 a = 1000 is illegal. After practicing the above 3 types then practice writing functions. Finally Structures and Data Structures. You need to master every stage before going to next stage. 