What happens when I cast an integer pointer to a character pointer and vice versa in C?
Whatever may be the data-type of variable that pointer variable is pointing, a pointer variable takes same no of bytes of memory to store the address.Then why we have to give the data-type of pointer variable? It is because the data-type which it is pointing does not take the same amount of memory like char takes 2 bytes, int takes 4 bytes (in modern compilers) and pointer variable stores the address of first byte of that memory location so by specifying the data type of pointer variable we tell him to go uptill that no of bytes which that data type variable takes(i.e to convert those no of bytes from binary to decimal which that data-type takes) and then we get actual value at that memory location when we de-reference the pointer. And hence when we cast the int pointer to char pointer we tell him to convert only 2 bytes instead of 4 bytes from binary to decimal from the memory location it is pointing from binary to decimal... 