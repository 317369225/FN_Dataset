How is an integer value stored in the memory in C?for example for the statments int a=456; signed int a=2357;and how is a float value been stored float a=34.125;
Integers are easy to store with 4 bytes, since each byte has 8 bits we have a total of 2^32 possible integers that can be stored. (2^31 of these numbers are negative, 1 represents zero and then there are 2^31 - 1 possible positive numbers an int can hold. The special thing about ints is that they are exact, which is generally why they're preferred. Floats on the other hand, need to express much larger values in the same amount of memory space. We still have only 32 bits to store them but since the numbers tend to be larger than the amount of space we have, they are inexact. We also need a different way of storing them. One way that they are stored is by using the first bit as signifying if the number is negative or positive. The next 8 bits are used for the exponent of the float number as if you were representing it in scientific notation. Finally the remaining 23 bits are used to specify the significant digits of the number that the computer can hold. This is the standard way to hold floating numbers. I believe it is the IEEE-754 standard. Of course, if you want more accurate floating point numbers you can declare them to be long, which will double their size to 64 bits. (Same is true for ints). You can find more information here: Articles - Understanding Floating Point Number Representation - Cprogramming.com 