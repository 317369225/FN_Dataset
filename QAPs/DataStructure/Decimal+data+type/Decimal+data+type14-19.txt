What's the hardest bug you've debugged?
While working on an A/B testing framework, I had some extremely occasional bugs (maybe one request would fail every few weeks from it) in which we'd get a key error trying to look up a test bucket. Due to the infrequency of the bug, I had to add debugging information and wait a few weeks to get more information. I eventually found out that we were trying to retrieve a negative index from a Java array. The index was produced by something like Math.abs(hash) % buckets.length which left me completely flabbergasted as to how it could end up as a negative number. Since buckets.length can't be negative and the absolute value of the hash can't be negative, the index couldn't be negative. For a long time I assumed the bugs must just be the result of the occasional hardware error, until I finally got frustrated enough to double-check the documentation Math (Java Platform SE 7 ) and found that the spec for Math.abs calls for the absolute value function to return a negative value when given Integer.MIN_VALUE. I put in a quick fix and spent quite a while afterward telling everyone about this. No one knew that Math.abs had such a spec, but there were a lot of different opinions as to how reasonable this is. Any time you use Math.abs with Integers in Java, make sure you write a special case for Integer.MIN_VALUE, as you almost certainly don't want a negative value coming out of Math.abs. 