Why would you append an F to the end of a value of a floating point literal in Java? (e.g. float ratio = 0.2363F;) Isn't that already specified in the data type "float"? What happens if I don't include the f? Does something similar happen in the integer data types?I'm learning java by myself reading some books. Im having some trouble understanding the following statement: "Java assumes that all floating point literals are of type double".
C# is much the same way.  Essentially what is happening is you are specifying a precision to the constant you are referring to.  Integers don't have to do this because they are are as precise to the ones place...but adding a decimal changes the whole game.  A float is as precise as as any number that can be stored in 4 bytes.  When the "f" is left out, it is assumed that the constant is a double, which is accurate out to 8 bytes.  Roughly, this means that floats can go out 6 or 7 decimals, while doubles go out 15 or 16.  Doubles are much bigger though, so they are not always appropriate (especially if you are talking about things like mundane amounts of money). The JITS compiler does not know what a constant is at any given moment, even if you are making it equal to a float (who knows? you might cast it as something else...), so the specifier is needed if it is to not be assumed as a double. 