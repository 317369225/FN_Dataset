What should I expect in a Software Engineer interview at Google and how should I prepare?
Great answers here. But I joined Google one month back as Software Engineer and just wanted to share my experience also. Recruiting Process: I had two telephonic interviews and five onsite interviews. Each telephonic round is knock out but onsite interviews are not. Each onsite interviewer gives independent feedback about the candidate and these are processed later after all five interviews. So you can start fresh even if you don't perform that well in one interview. And as mentioned in "Cracking the coding interview", it's really true that a packet with scores of 3.6, 3.1, 3.1 and 2.6 is better than all 3.1s out of 5. Google off campus recruitment takes time (mine took 6 months) and good thing about it is you get enough time (2 weeks in avg) before each telephonic interview and the onsite interview day. So be patient and it's really worth the wait :P Interviewers' Expectation: 1. First of all, for S/w Engineering role in Google, most of the questions are technical and it will be the obvious expectation that you KNOW algorithms and coding. And also you should know the core CS subjects like Operating System, Computer Network, Distributed systems (overall basic ideas). 2. Interviewers can give you vague questions and that's intentional. You should always ask relevant questions to make it more clear without making assumptions on your own. Make the problem clear before directly going to solve it. 3. You can always start with the naive solution first but make it brief. Think in different directions and try to give multiple solutions until you reach the most optimal one. And think out loud. Otherwise interviewer will have no clue what you are thinking. 4. In Google, scalability is always important. So expect design questions which will be ambiguous real‐world problem for large size system. They are looking for process of thought and how you break things down to ultimately get to creative and scalable solutions. 5. And of course after you reach to the good solutions, expect to write the clean code of your algorithm (some parts of it sometimes for the big problems). You can choose any programming language you want but it should be clear and intuitive so that interviewers can understand it easily. Some tips for preparation: 1. Go through Cormen Algorithm book deeply and make very strong understanding of algorithm and data structure. Make sure you have a good understanding in complexity analysis because you may have to answer the complexity of your solutions pretty much every single time. 2. Make sure you can implement your algorithm no matter what. Keep coding and practice in whiteboard. You have to be fast and clear. 3. Keep solving good problems. Think about the solutions in different approach. Good resources will be GeeksforGeeks - A computer science portal for geeks, Programming Interview Questions | CareerCup, Cracking the coding interview etc. 4. Don't expect known questions in Google interviews. So don't look at the answers immediately when practicing. Try to solve it yourself. It's not about giving right or wrong answers in interviews. It's about your problem solving ability, how you approach to a problem in real time. So try to increase that by practicing. 5. Even if you can solve the problem, it won't be counted until and unless the interviewer understands your logic properly. Always try to express yourself clearly and think out loud. That will clear your progress to the interviewer. Communication with interviewer becomes very important for deliberately ambiguous real‐world problems given in Google interviews. 6. Last but not the least, the most important thing is to keep your calm. Being relaxed helps you the most solving problems in real time. No matter what the result is, in onsite interviews you will have a great day sharing your thoughts and ideas with great minds which will help you in future. Good luck! :) Updated 30 Oct 2014 • View Upvotes • Asked to answer by Anonymous