How do I go about preparing for interviews on geeksforgeeks.org? It's so vast.
Don't be scared by just looking at the size of GeeksforGeeksYes, it is a bible for interview preparation. You will find most of the things here and you should be help to crack any top MNC interview(viz Google, FB, MS and AMZ) with honest practice. I said honest because many readers just walk through the solutions instead of trying hard on their own. This weakens their thought process which is what these companies look for. While Ashish Kedia has written a good approach to use GeeksforGeeks for preparation, I would add few more points: Practice core Data Structures Stack, Queue, Linked List, Tree, Heap, Graph are few DS which are very common and you should know ins and outs of them irrespective of company you are targeting. Start these topics in the order I have mentioned. Solve few questions of each and then you will start observing patterns. For example: Most of the tree questions boils down to solving it in three parts: Solve left subtree, solve right subtree, combine the results Problem solving Based on my past experiences, I find Problem solving and strong coding skills are the two major areas top MNCs look for. You know DS and coding. Great! But how and where to use these are more important. Here comes the Algorithms part. Practice below topics: Divide and Conquer Archives - GeeksforGeeks Greedy Algorithm Archives - GeeksforGeeks Backtracking Archives - GeeksforGeeks Dynamic Programming Archives - GeeksforGeeks Pattern Searching Archives - GeeksforGeeksOut of all, Dynamic Programming is one monster which is most challenging to master upon. And guess what, you should expect to face at least one DP problem in each round of Google interview. Bonus: I had talks with my friends at Google and FB and they say DP section on GFG is well compiled and sufficient. Practice Advanced Data Structures Once you are comfortable with Core DS, it's time to move to Advanced Data Structure Archives - GeeksforGeeks. Trie, TST, Interval Tree, K Dimensional Tree are also important. Additional tips While practicing, don't rush for solutions. Try to solve on your own Use paper and pen instead of compiler to write code. This will help you to minimize your dependency on compiler to find errors Take part in discussion. Read comments by other readers. Sometimes, this helps to focus on corner cases and you are also likely to see an alternate solution You might find my other answer(s) useful: Aashish Barnwal's answer to What should I do in the next 6 months to get into a company like Amazon/Google? What is easiest approach to tackle Dynamic programmingÂ  problems? 