What are some good MapReduce implementations for graphs?
Before looking at individual implementations, it's helpful to narrow down the search by identifying some essential features of distributed graph processing frameworks. Here are three important ones: Efficient iterative computation. Graph algorithms tend to involve multiple iterations over the same data. It's possible to express them as a series of MapReduce jobs, but the only way to communicate between two successive iterations is to write the graph state to stable storage, like HDFS. This incurs overhead from disk I/O and serialization. A graph framework shouldn't have to pay this penalty. Fault tolerance. Large-scale applications need to be fault tolerant, but frameworks including Parallel BGL and CGMgraph (and GraphLab) don't handle failure automatically. The standard way to implement fault tolerance is to periodically checkpoint mutable state, and most of the frameworks below use this technique. Graph-oriented programming model. There are plenty of general-purpose frameworks for distributed computing, but writing graph algorithms in them introduces unnecessary complexity. Graph frameworks should offer specific abstractions that make it easier to work with graphs. Next, here are some open source graph processing frameworks that offer these features. Most of them follow the Bulk Synchronous Parallel model, where vertices send messages to each other in a series of iterations called supersteps. Giraph [1], a Java BSP implementation that runs on existing Hadoop clusters and provides fault tolerance for both the workers and the master using ZooKeeper. Giraph came out of Yahoo! and is now an Apache Incubator project. GraphLab [2, 3], an asynchronous programming model in C++ from Carnegie Mellon. Phoebus [4], an Erlang BSP implementation that can use HDFS for storage. Golden Orb [5], another Java BSP implementation on Hadoop. Signal/Collect [6], a Scala BSP implementation from the University of Zurich. Signal/Collect also supports extensions including an asynchronous mode. Update: GraphX [16] is a new graph processing framework embedded in Spark that allows viewing the same data as a graph and as tables. It comes included with Spark 0.9. (I'm on the GraphX team.) Finally, here are a few general-purpose systems that might be a good fit for graph processing: Spark [7], a Scala framework from UC Berkeley that aims to balance efficiency and fault tolerance by providing immutable, distributed, in-memory collections that remember how they were created and can repair themselves automatically. Bagel [8] was an early BSP implementation on top of Spark, and GraphX [16] is now the canonical way to do graph processing on Spark. Piccolo [9], a C++ system from NYU that provides an in-memory shared table with checkpointing for fault tolerance and accumulation for concurrency. There's an example PageRank implementation on Piccolo [10]. HaLoop [11], a version of Hadoop from the University of Washington that has been modified and optimized to support iteration. Here's PageRank on HaLoop [12]. Twister [13], another iterative MapReduce runtime from Indiana University. Here's PageRank on Twister [14]. Ciel [15], a Python system that, along with the Skywriting language, provides a variety of data flow operators and handles fault tolerance in a similar way as Spark does, although without the performance advantage of keeping data in memory across jobs. [1] Giraph: http://incubator.apache.org/giraph/ [2] GraphLab: http://graphlab.org/ [3] GraphLab programming model: http://graphlab.org/abstractiono... [4] Phoebus: https://github.com/xslogic/phoebus [5] Golden Orb: http://www.goldenorbos.org/ [6] Signal/Collect: http://code.google.com/p/signal-... [7] Spark: http://spark-project.org/ [8] Bagel (BSP on Spark): https://github.com/mesos/spark/w... [9] Piccolo: http://piccolo.news.cs.nyu.edu/ [10] PageRank on Piccolo: http://kermit.news.cs.nyu.edu/br... [11] HaLoop: http://code.google.com/p/haloop/ [12] PageRank on HaLoop: http://code.google.com/p/haloop/... [13] Twister: http://www.iterativemapreduce.org/ [14] PageRank on Twister: http://www.iterativemapreduce.or... [15] Ciel: http://www.cl.cam.ac.uk/research... [16] GraphX: GraphX Programming Guide Updated 96w ago â€¢ View Upvotes