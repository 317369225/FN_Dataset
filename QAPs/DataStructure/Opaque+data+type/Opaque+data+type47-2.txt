Can you show me a simple C++ code that can't be done without using pointers? (I'm a beginner and I don't understand why people use pointers)
First, where can you avoid pointers? a. Temporary variables (locals, function parameters) that only live as long as a function call can indeed be referenced without a pointer, if you so choose. int addTwo(int v) {   return v + 2; // v: param that lives as long as the function call} b. Global variables can also be named, but that is a bad practice, frowned upon some some, completely forbidden by others - as they are the root of much evil. int myval; // smelly global variableint main() {   myval = 37;} c. Variables within an object can also be referenced by name, but the object in which they reside is typically referenced via a pointer.  So the variable can avoid pointer syntax, but typically does not and is preceded by "->" anyway. customer->age = 54;  // really a shortcut for (*customer).age d. There are many other places where the syntax may not look "pointer-ish" but, it is usually deception and you are really using a pointer and should be aware that you are doing so.  For instance, you can pass a parameter reference into a function and then treat the parameter as it it were not a pointer.  But it is still a pointer and comes with most the baggage of a pointer. void myFunc2(Customer& customer) {   customer.age = 54;} So, answer the question already... If you are used to Javascript, C#, Python, Java, or whatever, you are spoiled because the language handles a lot of the complexities for you.  But C++ is a lower level language and, underneath it all, the computer is actually using pointers for most variables, even the ones that are locals (a) or globals (b) most of the time. Answer: You can almost always write code that does not use pointers, but you shouldn't. Pointers are useful, flexible, and expose what is really happening in the computer - and if you are writing code in C++ you generally want to be aware of that.  If you want a ride to school, take the bus, but the bus is not a good vehicle to use on a racetrack.  For racing you would use a race car and you would not want to seat dozens of people, you wouldn't expect to have A/C and a fancy stereo, and the steering would be tight and take some strength to turn.  You wouldn't want it any other way.  The same goes for pointers in C++. Why is it all so confusing? You really should learn about memory areas if you are going to program in C++.  Look up Dataseg/BSS and Static Memory to learn about global memory space.  Look up Execution Stack and Frame Pointer to understand how local variables and parameters are mapped into memory.  Look up Heap Management and Dynamic Memory to learn about the memory that contains the values that pointers typically reference.  (Of course pointers can reference stack variables and statics as well, but let's not try to make it too confusing yet.) 