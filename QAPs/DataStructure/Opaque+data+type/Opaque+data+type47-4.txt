Can you show me a simple C++ code that can't be done without using pointers? (I'm a beginner and I don't understand why people use pointers)
Pointers are very important concept in C/C++, because they accomplish a lot of what C/C++ intends to do, i.e. low level programming and manipulation, without having the performance costs of hiding these from the user. In other words, C/C++ are designed to be "close to metal" languages. Pointers help us to manipulate entire regions of memory, including objects and structs, without having to do bookkeeping to create special interfaces. I will write here about a simple use case which I encounter very often in my daily work. They are known as opaque pointers. An opaque pointer is usually used to hide the details of the underlying data. For example, you have a struct of type ContextHandle which can be declared without knowing the members of the struct. typedef struct ContextHandle *PContextHandle; You can then write code like PContextHandle context = NULL; You don't even need to know the underlying structure. Then in the actual definition, you can implement the structure in whatever way you want. For example, I can put actual data, and a reference count inside the struct struct ContextHandle {	int *data;	size_t dataSize;	int refCount;} The user of your implementation doesn't even need to know the implementation details. This is particularly useful when you are dealing with libraries. Here, suppose I am providing ContextHandle as a part of a library. I can add a new variable to hold some other state data without the need to recompile the data which consumes my ContextHandle struct. This is only one of many examples where pointers are really helpful. 