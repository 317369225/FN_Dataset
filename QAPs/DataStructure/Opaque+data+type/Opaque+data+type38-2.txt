What are the advanced topics in C which are not taught in college but one must know?
Undefined Behavior and avoiding them: This isn't really an advanced topic, rather a pitfall that you tend to ignore while in college.  In college, writing obfuscated/terse code is generally looked up to and if you have studied in an Indian engineering college, you will realize that all those "trick" exercise examples in books like "Let us C" were in fact reeking with undefined behavior.     eg.questions like what is the output of x=i+++i; Once you start writing production code in C/C++, writing idiomatic, portable and  well defined code is necessary and you tend to care more about avoiding undefined behavior. Common  sceanrios for undefined behavior include: 1.computing addresses of pointers past the end of an allocated block such as an array. ]int arr[4] = {0, 1, 2, 3};int* p = arr + 6;  // undefined behavior 2.the order of evaluation of function arguments is not guaranteed printf("%d %d\n", ++n, power(2, n));    /* WRONG */ 3.Though precedence and associativity define the order of operations, they do not guarantee the order of evaluation of individual sub expressions x*(i)+(++i)   Though multiplication is guaranteed before addition, the third expression MAY be evaluated first. Also among compiler options , understanding  compiler optimizations  and understanding tradeoffs between compilation time,execution time and code size... 