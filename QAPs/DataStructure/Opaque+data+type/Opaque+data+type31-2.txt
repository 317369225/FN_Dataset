What are the worst code smells you have ever encountered as a developer?
Specifically this: try:   do_stuff()except:   pass I have seen this way too often on "internally developed" frameworks. This grinds my gears for multiple reasons. Imagine a new college grad is tasked with finding weird run time errors in an organically grown framework. He wants to understand why a certain feature is present and what specific use case it solves. After weeks of staring at code he gets how everything is glued together with duct tape instead of designing unit tested self contained modular pieces of code. And to keep this hacked up infrastructure working they had to sweep a bunch of  "benign" errors under the rug and guess what, the rug started to look exactly like except:pass blocks. So for the love of everything that is dear to you, propagate appropriate error codes up the stack and deal with them there instead of silencing the errors. Whenever I see this piece of code I can only imagine we're doing this with a bug and whispering "Shh.. Its almost over, may be if I do this now, I might never see you ever again... " Img: gentle persuasion - Google Search  