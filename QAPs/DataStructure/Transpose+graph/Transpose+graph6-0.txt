Can we implement an AI search algorithm other than a tree or graph structure?
To me, "Search" means that you are trying to find a solution, but you don't have a linear path of steps that is guaranteed to find the solution.  So: computing a square root is not search, because there is an algorithm that computes the answer with the same steps every time (although with different numbers and perhaps a different number of iterations).  But finding, say, a set of assignments for a 3SAT formula (that is, finding true or false values for boolean variables that makes a logical formula true) can only be done by trial and error: you might start out by assuming that A is true and B is false, but later determine that one of those is wrong.  So there is a branch point where you choose whether to consider A being true, or A being false.  So, almost by definition, a search is a tree or a graph, because it has branch points.  But there are some search techniques that minimize the tree/graph metaphor. As Toby points out, hill climbing does not branch, it follows a single path -- but it can get stuck in a local maximum, in which case the standard fix is random restart hill climbing, which is a tree-based approach.  The other methods he mentions can also be considered as tree/graph based or not, depending on which metaphor you prefer. 