What is Kosaraju's algorithm to find the number of SCCs?
Kosaraju's algorithm is a linear time algorithm to find the strongly connected components of a directed graph. It makes use of the fact that the transpose graph (the same graph with the direction of every edge reversed) has exactly the same strongly connected components as the original graph.     Detailed Step of Algorithm are - 1) Create an empty stack ‘STK’ and do DFS traversal of a graph. In DFS traversal, after calling recursive DFS for adjacent vertices of a vertex, push the vertex to stack. 2) Reverse directions of all arcs to obtain the transpose graph. 3) One by one pop a vertex from STK while STK is not empty. Let the popped vertex be ‘v’. Take v as source and do DFS . The DFS starting from v prints strongly connected component of v. How it Works ?     The above algorithm is DFS based. It does DFS two times. First one to number the vertices according to their finish time and second one to get the actual SCCs. 