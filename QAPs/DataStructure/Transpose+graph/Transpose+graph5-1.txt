Is there any difference or advantages or disadvantages between Kosaraju's algorithm and Tarjan's algorithm for finding strongly connected component? Which one is most useful?
I would have to say that Tarjan's algorithm is a lot easier to implement, slightly implying that it is a little more simpler (and I'm pretty sure it is). Tarjan's also is useful for learning the DFS tree (low+disc), also used in biconnected components, articulation points, etc. (fun stuff!) I would recommend learning Tarjan's, but surely go into Kosaraju's as it goes over topological sort also (which is also fun to learn!) There is never a time where learning something else will hurt, so just run free with these algorithms and always implement, implement, implement. 