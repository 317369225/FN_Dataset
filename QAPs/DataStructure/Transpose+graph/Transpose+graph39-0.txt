I would like to use evolutionary algorithms for engineering optimization, is it good to use python?
Hi there, Yes, python is a good choice as there are plenty of libraries like numpy, scipy, etc which provide necessary data structures (like matrices) and mathematical operators (like matrix multiplication, transpose of a matrix) out of the box. This would ease your efforts in implementing algorithms. There are opensource machine learning libraries like scikit-learn which have the implementation of most widely used classification and regression algorithms with measures too. For visualization purposes, you could use matplotlib to bring up graphs and charts. It is very close to what you get from matlab. Hence it is a good choice. The interfaces to database, file IO are pretty good in python. Python was built with text processing in mind. With all the libraries in your python environment, its more than game. With web frameworks like django, you can couple the algorithms with browsers to take instructions from user and present fancy results of the algorithms. Entire stack could be built in one environment. That's the beauty of using python for implementing algorithms. Python is an interpreted language, hence it comes with an interactive shell where you can type a line of code and see the results. This helps you in research based coding. There are couple of IDEs which are good. They will be helpful as python is indentation based language. You dont get to use braces {} for blocks of code. You need to indent all the lines of a particular block by using spaces or tab spaces. The following link lists the available IDEs with feature sets IntegratedDevelopmentEnvironments - Python Wiki It depends on what features you require. 