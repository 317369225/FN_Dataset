What's the best way to use a Queue in C++ to automatically sort a list of numbers as they are input?
Two options: If you know when your list is finished you could postpone sorting until that moment. Sorting has complexity $N\log N$. You could also keep the list sorted at all times. This is necessary if you need to access the list before it's completely finished. In that case you need to find a binary search to know where to insert the element. Since you're inserting N elements you get again $N\log N$ complexity. Oops. But every time you insert an element you need to shift part of the array. That looks like a total complexity of $N^2$.Interesting. I wonder if it's possible to keep the array sorted and have less than quadratic complexity. You could use a linked list, but then your search term becomes quadratic. How about if you use a tree data structure? 