Given an array with n elements, how to find the number of elements greater than or equal to a given value (x) in the given range index i to index j in O(log n) complexity?Note that there may a several such queries and X will keep on changing so segment and Fenwick trees can not be used.
There might be a simpler way to do this but you can always use a k-d tree to implement this. A k-d tree can store data of k dimensions. Suppose you have an array A of size n. The elements you store in this are (i, A[i]) for all 0 <= i < n. Now, augment this tree to store the number of elements below a subtree. Since, the data to be put in the tree is already present, build a balanced tree using it. The height of this tree will be O(log n). Now, if you want to get the number of elements greater than X between indices i and j. Query the tree for all elements with index >= i and value > X. Do a second query for all elements with index > j and value > X. Subtract the output of the two queries to get the answer. This take O(log n) time per query once the tree is built. As with the augmentation the two queries take O(log n) time. 