What are some things that algorithms and data structure lovers knows that others don't?
Hahah! I love Siddhartha Chhabra 's response! To help me answer this question, define "others". Do you mean those who are programmers only as opposed to those who have studied Algos & DS as part of their degrees? Just like any skill, I think with study and practice, anyone can gain insight into these two as well. If you love something and are interested in it, you'll get it! And you'll apply it! There are numerous resources online for both topics. But as it stands if I understand your questoin properly here is what I'd say - if you are programming and don't necessarily have a background of DS and Algos, it is possible that you may choose and alternate DS than the best one, to perform a task, or,  a less efficient algorithm. A very very simple example is  - say you're looking for constant access time when solving a problem, someone with a DS background knows to run to Hashtables, where as someone without that knowledge may develop an iterative lookup which doesn't necessarily have the best access time possible. This is a super simple example. In short,  a strong background and proven concepts in these  two things enable you to make informed decisions when it comes to time and space complexities, and tradeoffs, when developing a solution to a problem. 