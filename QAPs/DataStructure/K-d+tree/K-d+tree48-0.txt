What are some things that algorithms and data structure lovers knows that others don't?
The most important factor is the size of your input, not the asymptotical complexity. This may have pretty pleasant consequences: easiest solution may be in practice the best, although it may be asymptotically worse. Also, many very cool data structures are useless for solving smaller inputs Examples: 1. (hope it's not considered advertising) In the following app WhatWine - The Wine List Scanner thereÂ  was a very interesting task to do - match the best wine to the food. The problem could be extrapolated as finding the nearest neighbor to a given point in a 5-dimensional space.(when a wine is not available, find the nearest good wine) First I thought, using k-d tree would be the perfect solution to the problem. But when I further thought about it, I realized, that for the given input, the easiest (and the FASTEST, because of the multiplicatory constant of the former solution) way would be simply to go through all the elements. 2. we can also sort numbers in O(n) via radixsort/bucketsort. Still, it's not the most common algorithm. 