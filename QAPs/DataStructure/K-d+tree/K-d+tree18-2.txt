What are all the data structures that you have come to know about? Which of these do you use very frequently?Please group them in "Basic" and "Advanced".
Weight balanced structures (binary tree, skip list, treaps, etc...) is an idea that is very very important, but is usually not taught (I would consider myself very lucky to be exposed to it by my grad. algorithms professor, Dr. Bender :) ). I would classify them under intermediate. There's also a whole set of external memory data structures, a lot of which can be found beautifully explained by Dr. Bender here: http://www.cs.sunysb.edu/~bender... Data structures are also called "crystallized algorithms", and you can (sometimes) convert an algorithm to a data structure - by stealing ideas from there. Examples include: 1. binary search <-> binary tree 2. merge sort <-> COLA (cache oblivious lookup array) There are also other techniques such as indirection that can be applied to both algorithms & data structures to reduce the running time of certain operations. Indirection is a technique to split up the input into a big-universe & a little-universe and handle them separately. Examples include linear time LCA, liner time in-place merge, etc... Other commonly used techniques used in conjunction with data structures is amortized analysis (linear time heap creation, union-find, binomial heaps, etc...) and lazy propagation. Recursion is always another useful technique to know. Examples: Binary trees, heaps, vEB trees. These are all useful techniques to know and make use of. 