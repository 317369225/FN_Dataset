As a starting Python programmer I see a lot of praise for the Python language (and so far I can only agree). Isn't there anything bad to say about it? What is a real con?
I'm with Alec Cawley on this one.  I really like Python and have written lots of code in it, including some very big programs, and I've been bitten several times by bugs that would not have happened in a statically typed language.  Over the last year I've been developing a product using C# and as the code base has grown and I've had to refactor or rename things, I've noticed how much easier and more reliable that process is in a statically typed language.  Had I written the code in Python, I'm sure I would have introduced a lot of bugs as I refactored.  In C#, my unit tests almost never failed after refactoring/renaming and it was much easier to find all the places that needed to be fixed. So, if your code base consists of lots of discrete and largely independent scripts that are written in Python, you probably won't run into this problem.  But for a big integrated code base it's probably harder to grow and evolve it -- especially as a team -- without introducing quality issues.  Even if you are a solo programmer working on a large code base, then you'd better have a very good memory because it's pretty much up to you to make sure you don't inadvertently change the "type" of a variable by assigning it a value of the wrong type. 