What are concordant and discordant pairs in R?
You mean Concordant, Discordant and Tied Pairs in Logistic Regression, using R? I take the pleasure in explaining that. Logistic regression is used to estimate probabilities for binary data or discrete ordinal data. Used mostly in social and medical sciences, LR is beneficial and advantageous in pin-pointing the Probability of the occurrence of an event, based on the relationship between one dependent (mostly, categorical) variable and multiple independent variables (mostly and obviously, numbers). What we try to do basically is that we shall not find an exact quantitative relation between the dependent and the independent variable, rather establish the probability of an event occurring by (treating the dependent variable as the outcome of a Bernoulli Trail), but NOT of the event not occurring. Well, well, I hope I haven't put you to sleep there, here is what those terms mean : (Source : Calculating Concordant, Discordant and Tied Pairs ) Percent Concordant : Percentage of pairs where the observation with the desired outcome (event) has a higher predicted probability than the observation without the outcome (non-event). Percent Discordant : Percentage of pairs where the observation with the desired outcome (event) has a lower predicted probability than the observation without the outcome (non-event). Percent Tied : Percentage of pairs where the observation with the desired outcome (event) has same predicted probability than the observation without the outcome (non-event). Implementing them in R Men love women â€“ but even more than that, men love CARS! Let's consider mtcars dataset, I try to estimate the probability of a vehicle, with over a 150 Horse Power engine and has a displacement over 400 cu. in., fitted with a manual transmission. (highly unlikely, so let's prove that) P.S. Follow the explanations inside the comments. options(scipen=999) #To avoid scientific notations in numbers #I will try getting a generalized linear model from the data, with the am #variable being our categorical variable and hp and disp act as a #conditional and independent variablesam.glm = glm(formula=am ~ hp + disp,data=mtcars,family=binomial) # to see the contents please run summary(am.glm)#Coerce our required conditions of 150 hp and 400 disp to a data.framenewdata = data.frame(hp=150, disp=400)#Use predict function to get the probability of occurance.predict(am.glm, newdata, type="response") The output from the predict() would be : > predict(am.glm, newdata, type="response")               1 0.00000001007501 Which is almost NIL probability that such a huge effing car would give you a mere manual transmission, duhh!! Well, again, I hope I didn't put you to sleep, and we're not done yet. The am.glm that I formulated, I wish to know the Concordance, Discordance and Tied Pairs from the GLM model... Based on the code that can be found here, I have a similar function for that : CalcPairs=function(model){  Data = cbind(model$y, model$fitted.values)   ones = Data[Data[,1] == 1,]  zeros = Data[Data[,1] == 0,]  conc=matrix(0, dim(zeros)[1], dim(ones)[1])  disc=matrix(0, dim(zeros)[1], dim(ones)[1])  ties=matrix(0, dim(zeros)[1], dim(ones)[1])  for (j in 1:dim(zeros)[1])  {    for (i in 1:dim(ones)[1])    {      if (ones[i,2]>zeros[j,2])      {conc[j,i]=1}      else if (ones[i,2]<zeros[j,2])      {disc[j,i]=1}      else if (ones[i,2]==zeros[j,2])      {ties[j,i]=1}    }  }  Pairs=dim(zeros)[1]*dim(ones)[1]  PercentConcordance=(sum(conc)/Pairs)*100  PercentDiscordance=(sum(disc)/Pairs)*100  PercentTied=(sum(ties)/Pairs)*100  return(list("Percent Concordance"=PercentConcordance,"Percent Discordance"=PercentDiscordance,"Percent Tied"=PercentTied,"Pairs"=Pairs))} We would now call the function and the output is what all we need : > CalcPairs(am.glm)$`Percent Concordance`[1] 94.73684$`Percent Discordance`[1] 5.263158$`Percent Tied`[1] 0$Pairs[1] 247 Concordance test is seen as evaluation of existence of positive reason supporting "x is at least good as y" while Discordance is seen as evaluation of existence of negative reason. So if my model has a Percentage Concordance of 94.7%, then it definitely would give me an accurate probability the occurrence of the event that I'm interested in. 