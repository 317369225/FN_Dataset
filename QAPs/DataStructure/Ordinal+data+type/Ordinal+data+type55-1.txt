In reality, which is better: one size fits all database or polyglot persistence?
It's all about scale.  At small scale, a single storage solution can be scaled up to handle even workloads it wasn't designed for.  As your own scale increases, that stops being a cost-effective solution (and eventually stops being a solution at all).  Just as every other part of your organization and infrastructure needs to become more complex, so does your storage solution. The idea of a "one size fits all" database that can absorb the lessons from every specialist system is also a myth because of scale.  Code complexity doesn't scale well either.  There is no single approach that can handle all data types and workloads optimally, any more than there's a single kitchen utensil that can do everything.  Embedding multiple approaches within one database, plus a layer to choose or manage them, means more code and a larger testing matrix than several task-specific solutions put together at deployment time in a particular environment to solve a particular problem.  Anybody who claims to have a "one size fits all" solution is just trying to trick you out of your money. 