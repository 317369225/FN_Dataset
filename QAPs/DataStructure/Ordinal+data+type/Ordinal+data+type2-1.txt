How do you best represent ordered lists in a relational database, allowing for easy and efficient updates (insertion/deletion of list elements)?
This is bound to be awkward in a relational database, because one of the characteristics of a relation is that has no implicit order. So you need to provide the order as values in a column. Modifying the list is also awkward if you want the order column to also represent the ordinal position. That is, to be an integer with consecutive values. But keep in mind that if you only need to represent order, not position, you don't have to use consecutive values. You don't even have to use integers. You could use a FLOAT data type, and take advantage of the fact that there are a lot of potential values between 1.0 and 2.0. Eventually, if you modify the list thousands of times, you might conflict with the limit of precision of a FLOAT. But then you could periodically re-number the order column. And you probably won't even have to re-number all the rows in that table, just because you have a tight spot between a few individual rows. 