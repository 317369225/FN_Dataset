What are the top 10 algorithms every software engineer should know by heart?
Are you asking the ones you need to know to pass an interview to get a job? Or the ones you need to know because you’ll use them every day? I agree with those who’ve answered that you need to know the principles, not the specifics. Because honestly, you probably don’t need to know stuff like ‘Finding an optimal hash for a static hash table’ because you’re probably not going to implement your own. And if you know algorithmic principles, you can probably guess. But since I’m guessing you are new to algorithms, I’d say that what you need to know is how and why things work in the languages/librar... (more)