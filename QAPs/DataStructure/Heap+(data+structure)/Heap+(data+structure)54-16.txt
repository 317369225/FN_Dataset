What algorithms and data structures should any software engineer know?
Honestly, for general purpose software engineering, I'd estimate that 99% of use cases can be handled adequately with pointers (indirection) and the off-the-shelf list, map, and set data structure in your programming language. If you know when and how to use those to their fullest, you can go far. Perhaps the most important skill is knowing when and how to replace an O(n)-time operation with an O(1)- or O(log n)-time operation from your standard library. You should know the performance trade-offs between lists based on resizing arrays (aka vectors) vs. linked lists. And between maps/sets bas... (more)