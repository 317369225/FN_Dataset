Why did the C++ containers get named ordered/unordered sets/maps instead of the underlying data structures such as heap and hash?
It is a matter of specifying the semantics, rather than the implementation. As a user of the API, you do not (or should not) care about how it is implemented. (You may care about performance characteristics). I know how to implement a heap, and how to implement a hash table. I’ve done it a gadzillion times, before C++ was invented. But when I’m writing an application, how to write them is the last thing I want to think about. Do I need to be able to iterate over it in a sorted order? Yes or no, that determines my choice, and if it’s called “unordered_map”, then it is clear to the reader why I made that choice. The names reflect the contract and purpose, not the implementation. 275 Views · 5 Upvotes