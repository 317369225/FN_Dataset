What algorithms and data structures should any software engineer know?
Dynamic array, linked list, stack, queue, binary search, binary search tree (with its four traversals), hash map, depth first search, breadth first search and merge sort. Those are the 10 most basic ones I can think of. A programmer who truly understands these can derive a multitude of other algorithms and data structures, be it by composing them or by exploiting the mechanism that makes them work. I'm assuming an arbitrary number, like 10, is just a guideline. For this reason, I'll also add to the mix: heap sort (mostly due to its binary heap), Rabin-Karp string match (mostly due to the ... (more)