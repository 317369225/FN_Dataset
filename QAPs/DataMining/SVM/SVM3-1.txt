★Why is kernelized SVM much slower than linear SVM?
It depends on a lot of parameters. For some datasets a kernelized SVM won't be any slower. One situation where this comes up is, with a linear SVM you can optimize on the coefficients on the dimensions directly, whereas with a kernelized SVM you have to optimize a coefficient for each point. With a lot more points than dimensions, the solution space is smaller for the linear SVM. Another situation this comes up is if you choose a slow kernel function, the cost of a single distance calculation can be a lot larger than with a linear SVM. In general if the speed of this algorithm is a bottleneck, you are probably doing things wrong, but my perspective is from industry rather than from academia so there's a lot of situations where things could be different for you.    Embed Quote