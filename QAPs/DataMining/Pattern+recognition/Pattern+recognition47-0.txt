★How can Genetic/Evolutionary programming be used for Pattern Recognition or statistical learning?
In the simplest example, there are two slot machines. The computer wants to earn the most money from the slot machines. It begins by pulling from each slot machine and keeping track of expected payout (pattern recognition).The genetic algorithms job is to allocate the percentage of pulls of each machine in accordance with it's expected payout. So if one machine always paid and the other never paid, the computer would eventually place all it's bets on the "paying" machine. TL;DR The goal of a genetic algorithm is to reduce the search space required to find a near-optimal solution. For example, a genetic algorithm that plays chess looks only at the moves that could be derived from the present state (instead of every possible chess move known to man). Chess is deterministic, which is to say that there are finite number of possible moves. But too many for a normal human or computer to consider all at once. So a simple computer agent that plays chess may simulate millions of games to detect the pattern "win" or "lose".  A genetic algorithm could be used to then sift through all possible moves in a way that quickly eliminates the bad and impossible moves, in order to maximize the likelihood of a move that "wins." Sword fighting, on the other hand, may be considered non-deterministic. That is, there are an infinite number of angles, positions, and times that I might use my sword to attack or defend. A computer agent that was designed to sword fight could benefit from both pattern recognition and genetic algorithms to find near-optimal moves as fast as possible. The first computational task might be to model your opponent with pattern recognition. The agent would like to determine whether its opponent is attacking or defending. To do this would require keeping track of many variables like sword position, opponent position, sword rotation, opponent movement, etc. A genetic algorithm, in theory, could reduce the amount of variables that need to be taken into consideration, thus decreasing response time and increasing sword fighting ability of the agent. This is known as feature selection. For example, suppose the opponent raised his eyebrows right before he attacked with good consistency. (In poker this is known as a "tell".) A genetic algorithm would allow the sword fighting agent to use the tell ("feature") to respond to the attack faster than it could otherwise do by tracking every variable and derivative.    Embed Quote