★What are some of the good Reinforcement Learning libraries ?There are tools like WEKA for working on Machine Learning algorithms in general, similarily NNToolBox for neural networks, Theano for Deep Learning, NLTK for Natural Language Processing. I came across RL-Glue, but it provides us with a skeleton  to implement RL algorithms.
The RL-Library contains a fair number of algorithms in Java using the interfaces defined in the RL-Glue project. These are mainly contributed by students from a few of the RL research groups. I've used these for reference before and they are generally of pretty high quality, though they aren't organized into a convenient self-contained library. Another library that has been recommended to me, but I've not used personally, is PyBrain. These libraries have some of the standard RL algorithms. However, in my experience trying to implement a useful RL toolkit, the biggest challenge that sets libraries for RL apart from libraries for supervised learning is that you must connect the perceptions and controls of a dynamical system into the learning algorithm (unless you are during pure policy evaluation in which case you can use offline data and the problem becomes more akin to regression or classification). The flow of data for supervised learning or NLP is simple to define: [format data correctly into training pairs] --> [split into train/test/validation] -> [send through learning algorithm] --> [evaluate]. In reinforcement learning, on the other hand, you must have a closed loop between the learning algorithm and dynamical system to evaluate exploration/exploitation performance. Because so much of the work required to get reinforcement learning algorithms to work is in defining domain-specific representaitons for observation and action and in choosing the right feature extraction, it becomes increasingly unclear how to make the generality of a library pay off for solving the specific quirks of your problem. The issue basically comes down to which part of the RL algorithm can be treated as a black box and what are the inputs to that black box? This, of course, is the reason RL-Glue is useful is that it allows a standardized way of describing observations and actions to connect algorithms to complicated simulations or robotic controllers.    Embed Quote