★Why isn't supervised machine learning more automated?
I think it's just a matter of time before more end-to-end solution appear and mature. Some ideas: Open-source MLaaS (Machine Learning as a Service): There's a project called MLbase under development at UC Berkeley.  It's designed with distributed computing in mind, and another goal is to automatically (and somewhat efficiently) try many different algorithms and hyperparameters.  The second thing (which they call ML Optimizer) isn't ready yet, as far as I know.  For now, you might find their Scala/Spark implementations of distributed algorithms useful if you decide to roll your own model search scheme. More detailed from their website: MLlib: A distributed low-level ML library written against the Spark runtime that can be called from Scala and Java. The library includes common algorithms for classification, regression, clustering and collaborative filtering. MLI: An API / platform for feature extraction and algorithm development that introduces high-level ML programming abstractions. MLI is currently implemented against Spark, leveraging the kernels in MLlib when possible, though code written against MLI can be executed on any runtime engine supporting these abstractions. MLI includes more extensive functionality and has a faster development cycle than MLlib. ML Optimizer: This layer aims to simplify ML problems for End Users by automating the task of model selection. The optimizer solves a search problem over feature extractors and ML algorithms included in MLI. The source code of MLI and MLlib has been released, but the ML Optimizer is under active development and I don't see anywhere to download it (which is annoying as the ML Optimizer is the layer that would match the OP's requirements). The whole MLbase framework relies on Apache Spark (free, open-source). MLlib can be considered as one module on top of it amongst a few other useful ones: MLlib fits into Spark's APIs and interoperates with NumPy in Python (starting in Spark 0.9), and Spark can be run standalone, on EC2, Mesos or Hadoop. The MLlib's user guide lists all supported machine learning models: There have been a bunch of publications on MLbase: E. Sparks, A. Talwalkar, V. Smith, J. Kottalam, X. Pan, J. Gonzalez, J. Gonzalez, M. Franklin, M. I. Jordan, T. Kraska. MLI: An API for Distributed Machine Learning. In International Conference on Data Mining, 2013. (pdf) T. Kraska, A. Talwalkar, J.Duchi, R. Griffith, M. Franklin, M.I. Jordan. MLbase: A Distributed Machine Learning System. In Conference on Innovative Data Systems Research , 2013. (pdf) A. Talwalkar, T. Kraska, R. Griffith, J. Duchi, J. Gonzalez, D. Britz, X. Pan, V. Smith, E. Sparks, A. Wibisono, M. J. Franklin, M. I. Jordan. MLbase: A Distributed Machine Learning Wrapper. In Big Learning Workshop at NIPS, 2012. (pdf)    Embed Quote