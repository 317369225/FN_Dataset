★What is the best machine learning algorithm?
This question is a good question to ask at the beginning, but it is also a question that will quickly turn out to be misleading. So, rather than algorithm names, I will try to answer with an approach to building predictive models. The best algorithmic solution for a prediction problem will almost never be a single machine learning algorithm. You will most likely want to clean your data first with an outlier removal algorithm. Also, not all the features may be good ones, so you may also want to get rid off some features with a feature selection algorithm. But this part requires some insight into data and algorithm, i.e. someone may ask: "Why did the algorithm remove these features? I thought they were important." The answer to this question will require domain knowledge of your data set as well as knowledge of your algorithm. After cleaning the data, I would personally suggest trying out multiple learners (possibly with different characteristics) with multiple parameters to get an idea of their success. Even then, you don't need to settle with a single learner: You can pick a subset of the best performing learners and build an ensemble out of them (Ensemble learning). Once you have a high-performing solution to your prediction problem, I also suggest having an understanding of why your solution (the algorithms you chose to use) perform well on your data, because someone is likely to ask this question and it also helps to understand your data and its relation to various learners. In summary, a high level approach can be: 1. If possible, gain domain knowledge on your data (which feature means what, how it was collected and how "clean" it was collected) 2. Get rid of possible outlier instances 3. Select only relevant features 4. Sweep a set of learners with different parameters 5. Try alternatives (e.g. ensembles or other creative ideas) 6. Have answers to "why" questions    Embed Quote