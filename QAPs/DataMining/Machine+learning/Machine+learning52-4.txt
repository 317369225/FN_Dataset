★What are some Machine Learning algorithms that you should always have a strong understanding of, and why?I want this to be a general question that could cover different disciplines. If you have any algorithm from an application point of view, then please do mention that as well!
With a  few simple, convex methods, you can solve just about any real world problem pretty well: 1.  support vector machine 2.  matrix completion 3.  (convex) nonnegative matrix factorization 4.  compressed sensing  (i.e. svm regression w/ L1 regularization) this will handle almost everything you encounter and are basically available in vowpal wabbit  (VW) and/or libsvm / liblinear also, notice that, in principle, NMF is convex Advances in Convex NMF:  Linear Programming although NMF is usually solved using non-convex methods (good seed + ALS solver)  , and VW does something  slightly different) Furthermore, you can run all of this off the command line in unix, and at scale to hundreds of millions of instances and features. Compare this to, say, deep learning, which is an convoluted mess of heuristics and special knowledge, and you will see the convex methods are much better for professional engineering on most problems. I also think it is useful to understand the basics of transductive and semi-supervised learning Machine Learning with Missing Labels:  Transductive SVMs    Embed Quote