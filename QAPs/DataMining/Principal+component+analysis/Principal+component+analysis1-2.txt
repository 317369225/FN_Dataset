★Quantitative Finance: Are there any analogies between portfolio optimization and principal component analysis?
I’m re-writing this answer in an attempt to assume less knowledge. Short Answer For an N asset universe, PCA provides us with N uncorrelated “eigen-portfolios” and (roughly speaking) tells us how much of the universe’s variance they each explain.  Portfolio Optimization gives us the portfolio with the highest risk adjusted return (Sharpe Ratio), scaled to your desired risk.  It turns out that the optimal portfolio from an optimization allocates risk to each of the “eigen-portfolios” in proportion to their Sharpe Ratio. Long Answer 1) Markowitz Portfolio Optimization Informally, the standard Markowitz mean-variance optimization problem is as follows: Inputs N assets, each with a known expected return and returns volatility Known covariances between asset returns, Covariance and variances are combined to form the covariance matrix , where Output The portfolio optimization finds a weights vector which maximizes risk adjusted return (Sharpe Ratio, or excess expected return divided by expected volatility), and sizes the portfolio according to your “risk aversion.” [You would actually solve this using a utility function with a risk penalty but you get the same answer] The solution, the optimal portfolio, is , where is the matrix inverse of your covariance matrix, and k is a constant that depends on your "risk aversion" and determines how much risk you want to take in this portfolio. Note that the expected return of a portfolio given a weights vector and expected returns vector is .  The volatility of that portfolio given the covariance matrix is .  Therefore the Sharpe Ratio is Bottom line: the purpose of the optimization is to give you a portfolio with the best risk adjusted return, given your assumptions (inputs). 2) Principle Components Analysis [I use SVD and PCA interchangeably here since they are the same thing when we are dealing with covariance matrices.] Given a covariance matrix , PCA is simply an eigenvalue decomposition of that matrix.  It gives us N eigenvalues which each correspond to an eigenvector .  If the columns of matrix V are the eigenvectors , and the diagonal matrix has all the eigenvalues on its diagonal (in the same order as the eigenvectors in V), then we have decomposed the covariance matrix: What do these outputs mean in a portfolio context? The eigenvectors each represent a portfolio, a set of weights on the N assets.  The eigenvalues represent the variances of those eigenportfolios (this follows from the fact that is the variance of a portfolio, and is the property of any eigenvector x with eigenvalue of matrix A).  All of the eigenportfolios are uncorrelated. Why do people do PCAs?  They want to decompose their universe of assets into N uncorrelated "risk factors," and PCA does this, with a nice ranking in order of "importance" (as measured by the risk of that factor, i.e. the eigenvalue of that eigenportfolio). The first risk factor is often a portfolio that is long every asset - it represents the "market."  Other portfolios might represent things like the outperformance of a given industry.  Or a portfolio might represent the outperformance of one asset over another very highly correlated asset. 3) The Relationship Between PCA and Portfolio Optimization Recall that the solution to the optimization problem is .  When all assets are uncorrelated, this reduces to .  This implies .  w represents the number of dollars, as a proportion of your total portfolio dollars, that you allocate to an asset.  When the weight in an asset i is multiplied by the volatility of that asset, it represents the volatility of a portfolio with w_i allocated to asset i.  It's the amount of volatility you expect that position to have, ignoring the rest of your portfolio.  So what the above equation means in words is that the notional weight w times volatility, or the amount of volatility you expect in a given asset, is proportional to the expected Sharpe Ratio of that asset. PCA provides us with N uncorrelated portfolios (the eigenvectors ).  We can figure out the expected return and risk of any arbitrary portfolio, as we showed above.  We have now reduced the optimization problem to one we have already solved.  Just pretend your N eigenportfolios are N uncorrelated assets, and now the solution to any optimization problem becomes: the amount of volatility we target in a given eigen-portfolio is proportional to the expected sharpe ratio of that portfolio.  We add up those portfolios at those proper weights and we get our optimal solution.  Quasi-Technical Quasi-Derivation: To show this, recall that . But by doing PCA, we can rewrite the covariance matrix in terms of its eigenvalues and eigenvectors, and we get the following: Where is simply a diagonal matrix, with diagonals Reading this expression from right to left: a) is simply a vector, where the i'th element represents the expected return of the i'th eigen-portfolio: b) Pre-multiplying that vector by the inverse eigenvalue matrix yields a vector whose i'th element represents the expected returns of the i'th eigenportfolio divided by the variance of that portfolio (recall that the eigenvalues represent the variances of the eigenportfolios): c) Pre-multiplying that vector by the eigenvector matrix V is simply doing a weighted sum of your eigenvectors, where the weight on each eigenvector i is the i'th element of the zeta matrix from (b). This explanation, in addition to providing an intuitive understanding of mean-variance opting, explains some of its pitfalls.  If you have eigenvalues that approach zero, that means there exist portfolios with close to zero variance.  That generally means you have highly correlated assets, and your eigenportfolio is taking some sort of spread position to capture an uncorrelated source of return.  If your expected returns are slightly different between those assets, you now have an extremely high sharpe portfolio and the opt will try to lever it up like crazy.  There are two things going on there - the sharpe ratio is very high because the volatility is low, and in order to take any reasonable amount of risk you need to lever it up (because the volatility is low).  This, by the way, is why you divide by variance and not vol in the optimization answer - one vol is to convert to sharpe, the other is to target risk instead of notional.    Embed Quote