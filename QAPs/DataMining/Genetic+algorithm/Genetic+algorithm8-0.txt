★What is a simple example of a genetic algorithm?
A simple example of a genetic algorithm would be to find the maximum digit wise sum of 10 bit string each taking a binary value. Typically, we would start off with a random population, of say 4 chromosomes. Each chromosome would be the 10 bit string itself. The encoding is simple, and obvious. 10 integers, each 0 or 1. now the fitness function for this is really simple too, _ _ _ _ _ _ _ _ _ _ where each _ is filled with 0 or 1, and from this it's really obvious, that it'll be most fit when all spaces are 1's. So let fitness be the sum of the digits. Simple enough? next we go on to the operators. First is selection. We don't always want to select the best two chromosomes. it'll get stuck at local optimum if they exist, and calculus based methods work better anyway. So we randomize it. The fitness of each chromosome is  divided by the sum of all the fitnesses. Then we generate a random number and select it. say w,x,y,z, are strings with fitness 5,2,4,9. so the normalized values would be .25, .1 .2, .45 lets arrange them in that order,[0,.25]+[.25,.35]+[.35,.55],[.55,1] and generate a random number between 0 and 1. and whichever region it lies in, we choose it we repeat the process and choose another one. We now have the two parents. unlike in life, where twins are a bit rare, in GA, the parents always have twins. say 9 and 2 got selected. say 9 was that string [1111011111] and 2 was [0010000100]. we then do a crossover. There are many ways of doing a crossover. you can just divide it by one line and get two regions, like [1111]+[011111] and [0010]+[000100] And you mix them up to get two offsprings. the point of division is chosen at random you can also generate a random number between 0-1, and for >.5 select the 1st one for offspring one, and 2nd for offspring 2, and the vice versa. So, you again select two more parents from the original 4, and create another two offsprings. and thus you have a new generation of 4 offsprings. this might or might not be fitter than the last generation. continuing this process usually converges. there's' other concepts like mutation and elitism which are used for faster convergence. In this case, mutation would be flipping one bit. the chance that it'll be good or bad is 50% (trivial). Mutation occurs randomly. we set a bound, usually low (.01, or .05) and we generate a random number between 0 and 1. if it's lesser than the bound, we flip a random bit (random number between 1 and 10) Elitism is just simply saving a copy of your current best chromosome. for example, in this example, fitness 9 would be saved. once the offsprings have been generated, we replace the least fit chromosome, with the elite chromosome. over several generations, this process usually converges to a very good solution. I hope i was clear in this answer. if not, comment what else you need clarified    Embed Quote