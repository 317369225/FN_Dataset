★What should every programmer know about genetic algorithms?
GAs are very creative in their solutions because they do not think at all like humans. The biggest problem with GAs is communicating what you want them to create. You do this when you define the fitness function. Here are some examples which highlight what I mean: 1) Karl Sims created a sophisticated physics engine, and evolved the brains and bodies of articulated creatures for various tasks, such as swimming, jumping and running. However, early on in this work, the physics engine had precision problems which meant that collision momentum was not 100% conserved. Sometimes more, sometimes less. Evolution discovered creatures that exploited this by hitting themselves with a paddle to propel them along. Clearly not what the creator wanted, but evolution didn't care. 2) Josh Bongard created a very similar work, evolving creatures that grew with a simulated biochemistry. He evolved creatures to seek out a small box. His fitness function was simply inversely proportional to distance of the creature from block at the end of the simulation period. His system found a very fit creature. However, when he demonstrated it, he let the simulation run longer than the 8 seconds allotted for fitness testing. The highly evolved creature carried on walking indefinitely, completely ignoring the box. It turned out that all evolution did was evolve a creature to move at a certain speed in a certain direction. It exploited the fact that the initial conditions were always the same (obvious in hindsight). 3) Adrian Thompson evolved FPGAs for limited voice recognition. His solutions used far fewer logic gates than theoretically possible by exploiting crosstalk between components ad only worked for that specific chip (I mean the resulting circuit would not work on other identical chips). While this was a wonderful and fascinating result, it just goes to show that while the results of evolution might be good, they might be very difficult to understand, analyse, recreate or scale. What I am trying to say is that the quality of a GA is only as good as its fitness function, and you need to give an awful lot of thought about the human biases and assumptions that go into it. Remember, GAs don't have any common sense at all, they only know what you tell them.    Embed Quote