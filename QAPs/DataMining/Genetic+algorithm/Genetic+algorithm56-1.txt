★How would you go about generating Jokes and Puns using Genetic Algorithms?As a final year project at the CS bachelor's degree level, if I decide to do something regarding Joke/Pun generation using GAs, what all do I need to know? Where do I start?
I don't know if Joke/Pun generation can be done correctly using GAs. Let me briefly explain the fundamentals of how Genetic Algorithms work. GAs work by starting with an initial population of possible solutions, encoded in some way. These encoded solutions are referred to as genes/chromosomes. Then, in each iteration, the goodness of each solution is evaluated using a fitness function. Then, solutions which are more fit are kept, while the less fit solutions are eliminated. This is known as selection. Then, some of the surviving chromosomes undergo crossover and mutation. Crossover, also known as reproduction works by combining two chromosomes (parents) to get a new chromosome (child). The child encodes a new solution which is different from both the parents. The motivation of crossover is that the child may combine the good characteristics of both parents, and thus, be better than both parents. Mutation, on the other hand, is a random change made to a chromosome (solution). Mutation has been known to introduce better characteristics, both in biological evolution, and in GAs. The extent of mutation and crossover done in each iteration depends on the crossover and mutation probabilities used by the algorithm. A good design of crossover and mutation probabilities depends on the particular problem. Some problems may benefit more from crossover, and some may favour mutation. The chromosomes after crossover and mutation form the population for the next iteration. The GA may terminate after a fixed number of iterations, or after a solution of fitness > threshold has been found etc. Given these basic facts, the questions I would have about a joke/pun generation system are. 1) Seeding the initial population. This could possibly done by starting with a number of sentences with varying degrees of "punniness". 2) How do you determine the "fitness" of a sentence as a joke/pun? That is, what fitness function can be used? How do you determine if a sentence is funnier than another? What about personal preferences? This could be a very non-trivial problem. 3) If we apply crossover to solutions, i.e. somehow combine the elements of two "punny" sentences, would the resultant sentence be a good joke/pun? I think it is highly unlikely that you would be able to find a good way. 4) If we instead apply mutations, and change the letters/words of joke/pun sentences, would the result be better? I don't think that will  be the case. Note that I am not saying that such a system cannot be built. I just feel that this problem is a very poor fit for GAs. Other ML approaches can certainly be applied here. I have seen many papers about emotion detection systems that analyze text. Perhaps such approaches could be adapted to your case. My only qualification for expressing this opinion is that I have studied the concepts of Genetic Algorithms, I have read papers about some practical Genetic Algorithms and how they are used to solve problems, done toy implementations etc. Seeking expert opinions would be good.    Embed Quote