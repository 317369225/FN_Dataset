★How do I do predictive modeling without domain expertise?
The answer below is to the question "How do I do predictive modeling without domain expertise?". The question has been changed after I posted the answer. My answer deals with real life, not competitions. It's very important. I am not going to go over differences between competitions and real life (which are numerous), just going to give you examples of things that I have observed in over 10 years in analytics. Things that happened or may have happened. Churn propensity modeling in subscription business. Customers were found to be meaningfully more likely to disconnect after their promotion price has expired. Further analysis identified that the reason for the disconnect was extremely likely to be move/relocation. Turns out, promotion prices and rental leases were generally the same length. Most people in the business knew that move churn among renters spikes at very specific times. Customers who were over 60 days late on their bill were more likely to disconnect... or as we call it in business get disconnected for non-pay in the next month. Duh... Customers who called retention the month before, were more likely to disconnect. With most customers calling you to disconnect a couple of weeks in advance that's really not a surprise. Calling to disconnect, and then disconnecting... who would have thought! Customers with tenure of under a year were more likely to disconnect for non-payment. While technically correct, the analysis missed the point that those disconnects were highly concentrated at a certain point in tenure (that's what happens when you cut variables like tenure arbitrarily). Example from another analysis. Addresses that were disconnected for non-payment were most likely to have a new connection in the next month. Ditto addresses that showed a move disconnect.There is also another issue that plagues predictive modeling, in marketing in particular. It's the fact that most models optimize the wrong variable, and thus cannot be effectively used in practice. While many in-house modelers may fall into this trap, most "no business expertise" modelers are simply blissfully unaware of it existence. I wrote about it before, so I am just going to quote myself. Let's consider a common use case for predictive modeling: estimating propensity to churn. Since we run this model on our existing customers, we know a lot about them, from their name and address, which we can link to demographics to what products they use, to what their payment history has been. While churn forecasting can be challenging at times, generally speaking, we should expect to create a pretty good model. For the purposes of this explanation, let's presume that we need to find the best segments to target for churn reduction. How is our predictive model going to help us here? It does not. While it does tell us a lot about natural propensity to churn without any intervention, it tells us nothing about our ability to convince customers to stay longer. Turns out, this is not a trivial problem. In fact, many researchers have found that our ability to influence customers may be unrelated or inversely related to their propensity to leave. In other words, just having a customer segment being marked for high churn risk does not mean that it is best segment to spend our money on. The problem with using propensity to churn model is that it optimizes for the wrong thing. It predicts what the customer is going to do. It does not tell us which customers we can effectively persuade to change their minds. The model that does this is sometimes called an "uplift model". This type of a model can only be run in conjunction with an in-market test, where we look at different factors that help us find customers that are persuadable. Building an uplift model is usually quite challenging, and my general experience suggests that creating a model is usually an overkill. Many times we can get away with measuring your program(s) against a control group, and then cutting our results by most important variables. This is a very efficient, yet simple way to resolve this conundrum.When predictive analytics is not enough    Embed Quote