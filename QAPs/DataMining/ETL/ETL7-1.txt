★What are some best practices when writing ETLs?
I have worked on building an ETL layer for analytics and reporting purposes and here  are the few things I learned 1. If any of the existing ETL frameworks are not powerful or flexible enough to meet your business requirements, build your own ! 2. Keep scalability as one of the goals right from the start. 3. Break the ETL process into as many independent sub-modules as possible. If one module is dependent upon another, make sure you code for both success and failure scenarios in dependent module. 4. Sometimes data source might have some issues but that should not let your ETL layer to corrupt or push wrong data into destination data layer. Design and code for robustness. 5. You should not access the whole db table from source unless you  have to. Keep checkpoints of what have already been seen and what's new in the data source. Keeping things incremental in nature saves a lot of query time. 6. Have a backup of any metadata tables you might be using. For ex, if you are in fact maintaining the checkpoints of source data at your end, make sure you use daily replication techniques to keep copy of that metadata. 7. Reduce dependencies as much as possible on code being used for other flows. Nothing wrong in having different copies of the code for different flows even if at present they have same function definitions. The problem is you don't know when someone might change something in the code and your thing might break. 8. Measure everything. Every single query should be logged with time taken by it. The queries which are taking long time, see if they deserve to take that time or not. 9. Test, test and test before pushing into production. It's far better to be little frustrated on your dev box than the panic situation of things breaking in Prod. 10. Understand and anticipate your client requirements and constantly ask questions. 11. Learn about Query optimization, storage engines and database tuning techniques    Embed Quote