★Why should I use an existing ETL vs writing my own in Python for my data warehouse needs?I've been reading the Kimball Group Reader and they strongly recommend I use an existing ETL. Looking at solutions such as Kettle, SnapLogic, and Talend it seems their GUIs complicate the solution instead of making it easier to model and understand.
It's really not possible to answer why you should use an ETL tool or why you shouldn't given the limited amount of information provided in your question.  But since this is Quora, I'll try to add some information that will enable you (and others in similar situations) to answer the question you have for us. Complexity - The first question is "How complex is your environment?"  Complexity can be a measure of how many source systems you have feeding your data warehouse, how many "sources of truth" for the same basic piece(s) of information reside in your various source systems, how difficult it is to transform data from the format that exists in your source system to the format needed in the (data warehouse) target system, the need to have metadata in your warehouse to give the data an appropriate pedigree, and the need to develop feedback loops to clean data in your source systems as problems are identified in the load process. Generally speaking, the more complex your environment is, the more likely you are to benefit from a tool as opposed to writing your own routines. Stability - Are your source systems constantly changing (or likely to?)  If so, you may be better off using an automated tool instead of creating a maintenance nightmare for yourself.  What about your target system?  If lack of experience in creating data warehouses is likely to cause you to revisit the design of your warehouse schema, automation could make life easier as well. Available Resources/Time - If your project is small/simple, then it you may be better off utilizing existing skillsets as opposed to taking the time to go through the learning curve needed to use a new ETL tool.  But if developer resources are scarce, you are in a time crunch, or your project is complex based on factors mentioned in the previous section, you may be better off using an ETL tool. Like any other problem in this field, there are multiple ways to arrive at a solution.  The key is understanding the tradeoffs you have to make and then determining what solution works best for your environment.  The answer to that question is always based on technical issues, personnel issues, and the culture of the company involved.    Embed Quote