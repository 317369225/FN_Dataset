How do we validate the robustness of the clusters chosen in a cluster analysis?
There are a two simple ways you can measure how "good" your clusters are: (I'm not sure what you meant by in-time or out-time but I'll assume you mean in-sample and out-sample. Either way, clustering is a way to find structure among unlabeled data i.e. unsupervised learning, using all current samples, so in-sample or out-sample would not be so relevant. If a new sample comes along, you would have to recluster the whole thing)  1.  CH Index The CH index is essentially the ratio between the "dissimilarity" and "tightness" of an average cluster. "Dissimilarity" measures how a cluster, in it's own right, is different from other separate clusters, while "tightness" measures how members within a cluster are similar to each other. One can say that a robust clustering occurs when, on average, the members within a cluster are very different from members of the other clusters (i.e. belonging in the right group) and at the same time very similar to members within (i.e. belonging to the same group). Here's an illustration: Source: Cluster Analysis: see it 1st Thus, a high CH index ratio would indicate high dissimilarity between clusters, and 'strong' tightness within a cluster (low distances among the members), suggesting robust clustering.  For those who are interested, the mathematical details can be found here [equation (8) - Page on Proteomesci]. You can easily implement the CH index in the 'get_CH' function under the R package clues [Page on R-project]. There's documentation on wikibooks as well [Data Mining Algorithms In R/Clustering/CLUES] 2.  Average Silhouette Measure The average silhouette measure calculates, on average, how members within their own clusters are closely grouped and at the same time how loosely these members belong to neighboring clusters. A silhouette measure close to 1 implies that the members are, on average, in their correct clusters, while a silhouette close to -1 implies that the members, on average, have been assigned to the wrong clusters. Mathematical details and expression can be found here at the wiki page [Silhouette (clustering)]. Besides the already mentioned R package clues, you can also implement average silhouette measure under the 'silhouette' function in MATLAB [Silhouette plot - MATLAB silhouette] Please feel free to add or comment =) Additional sources: Page on Cmu (slide 18 - 24) Unsupervised learning Page on Cmu (page 29 - 30)    Embed Quote 