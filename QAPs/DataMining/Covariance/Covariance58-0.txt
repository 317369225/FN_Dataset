What is the most efficient way to compute just the largest eigenvalue of the covariance matrix of a small-sized data (max 10x10)?
After googling covariance matrix (I don't do statistics) I found it's symmetric positive semidefinite. The fastest method at your disposal then is the RQI iterations, which have proven cubic convergence rate in this case Rayleigh quotient iteration It's a very beautiful method. I'm afraid I don't know what software packages you're using so I don't know what functions you can use to apply this method. It isn't hard to implement, though. I should add: I say "fastest" but arnoldi/lanczos iterations may well beat it in some cases  (this is what your standard sparse eigenvalue solver will use). It depends on how you're using each method. RQI can be extremely fast on SPSD matrices, though. Edit: I was looking at this again and realized this may not be an optimal approach if you need to do this for many small matrices as in your specified case, because of the required inversion. You could attempt to approximate the inverse using a few iterations of conjugate gradient in this step to keep the inversion step at a cost of , but I highly suspect the resulting method would be a form of polynomial preconditioned shift/invert Lanczos method. Either way you win out against standard dense eigenvalue solvers (e.g. MATLAB's "eig") since they can not target a specific portion of the spectrum, and must solve for all eigenvalues before you can be sure you have the largest one.    Embed Quote Updated 29 Jun, 2013. 841 views.