★Can quadratic assignment problem be solved use dynamic or linear programming?
Your question has two parts : For one, here is how you draw a DAG[Sugiyama et al.]: First assign  a preliminary y ranking  to vertices of the DAG ,such that if there is an edge from i to j, then it is likely that . This is to ensure that the final drawing has directed edges pointing mostly downward. Generate the y coordinates are  so that, if there is an edge from i to j and , their y coordinates are as close as possible, but separated by a set minimum. This ensures that the final resulting drawing does not have many long edges. This process assigns the vertices into a finite number of layers. If an edge lies across a number of layers, virtual vertices are added. Assign a preliminary x ranking  to each vertex to minimize the number of edge crossings. The x coordinates are generated by minimising subject to the constraints that vertices on the same layer obey the x ranking generated in step 3 and are separated by a set minimum.For the other (general) part about solving QAP with lp: you can use sdp ,which is but an extension of LP: Pick a Qap: Identify the matrix ,with vector, for a matrix    , let be block corresponding to in the matrix ,then is bounded by . s.t. ,where E is the matrix of ones & is 1 for i=j and 0 otherwise.There are in it,But two of them are actually redundant. Remove them when solving the standard SDP generated from the QAP above. (SDP problems  typically do not satisfy the constraint nondegenerate conditions  and  at the optimal solutions ), find out the Lagrangian dual of the QAP. Apply the algorithm (e.g. some gradient augmented Lagrangian) , that delivers the ( dual feasible ) solution ,that gives a lower bound and an acceptable gap%. Here are some QAP Instances and SDP Solutions for an idea of experimental results for lower bounds See also: [1]OK, What's NUG30 Times Pi? [2] http://www.ics.uci.edu/~eppstein... [3] Forced-directed graph drawing.    Embed Quote