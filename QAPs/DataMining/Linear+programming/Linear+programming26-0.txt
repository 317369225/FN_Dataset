★How bad is the performance of GLPK on linear programming?It seems that all the LP solver benchmarks are focused on the integer linear programming. These benchmark indicate that the GLPK is far behind those commercial LP solvers. But how about the case when all the variables are continuous?
I was asked to answer, and unfortunately, I have not been able to find any LP benchmarks apart from Mittelman's benchmarks which seem to have dropped GLPK as a test candidate (in fact it doesn't seem to have benchmarks for serial solvers anymore). Performance of LP solvers GLPK generally doesn't have a reputation for performance. Most mathematical modelers who need to solve serious-sized LPs would not even consider GLPK to be in the running in the performance race. However, there are several reasons why GLPK still pops up on the radar every now and then: 0) It is free. 1) It is part of the GNU project hence it has cachet among free-software enthusiasts. 2) It may not be the best solver out there, but it is frequently "good enough" for the job. For developers who just need to plug-in a simple library to solve an LP in their program, GLPK is as good a solver as any. Also, most software developers don't do enough serious mathematical modeling to know that there are better options out there, so they keep recommending GLPK on forums, which serves to boost its popularity. 3) It is "fast enough". For certain small to mid-sized LPs, the performance delta between GLPK and the best LP solvers is probably not that huge. 4) It is "simple enough" to be used in courses on optimization. 5) It is actually better than Excel's built-in solver. I know at least one application in industry where it is used in lieu of Excel's solver. Of course, this was before OpenSolver for Excel (which links to COIN-Cbc) was created. I've only used GLPK a few times, and I found its performance characteristics to be entirely unsuitable for my (very large) problem. But it may be good enough for yours.    Embed Quote