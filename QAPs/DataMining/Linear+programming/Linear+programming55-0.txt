★How do I build a linear programming model and interactive application for a diet problem?
Thanks for A2A First of all. I have no idea how this diet problem looks like. So I cannot give you any hints about constraints. So this is up to you. But let's talk about implementing the problem. First of all: What exactely do you want to build? Is it a web application? It sounds like that if it is interactive. Is it for comercial use? This is important to know since many solver are not free and maybe very expensive. If it is a webapplication which programming langues do you want to use for your backend. These are thinks you should evaluate first. For now I am going to assume you want to create a web app. Step one: You need a solver. There are dozens of linear solvers available. Some are comercial and very powerful. Some are free for academical purpose and some are open source. Open source tools can e.g. be found here: Computational Infrastructure for Operations Research Home Page. If you need one for academical purposes, ask at your university, if they have licenses for GuRoBi or Cplex available. Otherwise you can also use SCIP (SCIP). Depending on the language of choice there might also be other open source libs available. I am sure you will also find good Python, Ruby or Java libs online. In case of Ruby you could think about your community gem host. Step two: What is the user supposed to do? Which input can (s)he give to your LP? Evaluate how your UI could look like. Evaluate how you persist the input and think about a design for starting the optimization. Since an optimization process can take a while, it should be an asynchronous process. Otherwise you will have timeouts in your client app. Maybe use queueing libraries (e.g. Messaging that just works) where you add optimization tasks resolved by optimization workers. Implement this messaging and return dummy values from a dummy worker to test the comunication Step three: Implement the worker. I think this is the most interesting part for you. My problem is that I have no idea how you optimization problem looks like. So I cannot give you any hints about designing it. The usual way to go is you create (depending on your library) an optimization instance and add constraints step by step. Constraints can usually be divided into contexts. So you can create functions returning you all constraints regarding one topic. So start to identify constraint topics and implement constraint creator methods for it. Ensure, that these constraint creators keep the information, of what variables are used for since you will need to translate the variables into an interpreted result at the end. These constraint creators also should create and extend the objective function. Step four: Test your worker. Create small test problems and ensure the worker returns the correct result. Automate this. Write unit tests with different examples and ensure that all constraints are fit at the optimal result. Step five: Write integrative test to test the communication between app and optimization worker. This can partly also be done in step two while implementint the communication. Step six: Implement the UI (if you haven't already done) This is just a basic skeleton how you could implement it. As mentioned, I don't know how your problem looks like, so this is the best I can offer. I hope this helps. If you have further questions, just ask. Happy coding    Embed Quote