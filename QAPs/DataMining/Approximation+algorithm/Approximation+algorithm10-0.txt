★What is the difference between non-deterministic and approximate algorithm?
I am a little confused about how you posed this question. The two factors are not opposed to each other. You can have an algorithm that is non-deterministic and approximate and an algorithm that is neither. A non-deterministic algorithm has a random component. That means if you give it the same input twice in a row it will not process the output in the same way both times. An approximate algorithm returns an answer that is close to the solution. This may be because the exact solution is too hard to compute or you do not have enough time to get the exact solution. Now a non-deterministic algorithm can either be exact or approximate. If a non-deterministic algorithm is exact it will return one of the optimal solutions. If it is approximate it will return one of the approximate solutions. Similarly, an approximate algorithm can be non-deterministic or deterministic. If it is deterministic and receives the same input twice, it will process the input the same way and return the same answer. If it is non-deterministic, it may process the input in a different way and potentially return a different output. I know this was a little redundant but hopefully it helps to get the point across.    Embed Quote