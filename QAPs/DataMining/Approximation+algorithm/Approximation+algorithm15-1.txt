★Why is it that all NP-Complete problems don't have a unifying approximation algorithm?I normally think of NP-Complete problems as equivalent. Hence, why doesn't this mean that once we have an approximation algorithm for one NP-Complete problem, we have one for all of them? I remember I was told the reason once, but I forgot it. Anyone has a rigorous or intuitive explanation for this?
This builds on Tim's answer. What you are looking for is an approximation preserving reduction.  There are several kinds of reductions that exist from one problem to the next.  I think Wikipedia does a good job of explaining some of the better known ones (see Approximation-preserving reduction ).  Though there is a polynomial-time reduction between certain problems, it need not imply that the quality of their solutions will be carried over as well (as normally the reductions shown for NP-complete proofs usually relate to showing there is a ____ if there is a ___ (or sometimes bolder statements such as there is a ____ if and only if there is a _____)).  For more detail, check out Page on lcbb4.epfl.ch Hope this helps!    Embed Quote