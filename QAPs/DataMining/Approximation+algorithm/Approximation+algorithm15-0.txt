★Why is it that all NP-Complete problems don't have a unifying approximation algorithm?I normally think of NP-Complete problems as equivalent. Hence, why doesn't this mean that once we have an approximation algorithm for one NP-Complete problem, we have one for all of them? I remember I was told the reason once, but I forgot it. Anyone has a rigorous or intuitive explanation for this?
One intuitive reason is that approximations don't necessarily survive reductions. Take two NP-complete problems: P1 and P2. The fact that they are NP-complete implies that we can transform instances of P1 into instances of P2, in polynomial time, in such a way that an exact solution to P2 maps to a corresponding exact solution to P1. (We say that we have reduced P1 to P2.) But let's say that S2 is an approximate solution to P2. If we do the same transformation of P1 to an instance of P2, we have no guarantee that S2, when transformed back into the problem space of P1, will be a good approximate solution to P1.    Embed Quote