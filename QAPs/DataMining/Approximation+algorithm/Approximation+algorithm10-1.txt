★What is the difference between non-deterministic and approximate algorithm?
They're basically completely different things, although they are related in that both are ways that sometimes make "hard-to-compute" problems a little easier. Consider the following problem: given a list of cities you want to visit, assuming it's easy to find the cheapest airline fare between any two of them, figure out which order to visit the cities in that has the cheapest total fare while visiting each city at least once.  (People familiar with complexity theory will recognize this as the Traveling Salesman problem.)  An approximation algorithm for this would be an algorithm that is guaranteed to give you a set of airline tickets that might not be the cheapest, but will be no more than (for example) 5% more expensive than the cheapest option.  That said, if you run the approximation algorithm multiple times for the same cities, it'll give you the same result every time, and if that isn't the cheapest you're out of luck.  A nondeterministic algorithm won't give you the same result every time, but if you listed all the possible results it could give you, one of those would be the cheapest set.    Embed Quote