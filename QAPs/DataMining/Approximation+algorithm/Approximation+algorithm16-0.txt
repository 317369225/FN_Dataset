★What is the significance of approximation algorithms? How should I study them?
They are important because most problems in the real world are solved approximately. Take swimming for example, when you first start swimming your forms are bad and you are very inefficient. But even though your swimming "algorithm" is not optimal, you manage to move in the water anyways and for the short term until you get better, that is a perfectly acceptable solution to the task of swimming. Many problems in programming/engineering has a similar property, sometimes you don't know how to compute the perfect optimal solution, sometimes the optimal solution is prohibitively expensive to compute. In such cases, people resort to approximate solutions. Like others have pointed out, approximate algorithms shows up all over engineering and is incredibly diverse. You'll probably learn them as you go. If you want something concrete to look at for the short term, gradient descent is perhaps one of the most popular approximate algorithm, so look it up.    Embed Quote