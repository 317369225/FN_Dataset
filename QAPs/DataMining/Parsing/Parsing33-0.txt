★Is Ruby easier/better than Python for text parsing?I have experience with Python, and one of the things I love most is its text/string functions. It's been a while since I've used Python and I need to get started again. I'm trying to decide if I should stick with Python or learn Ruby instead for my startup.
I use Ruby exclusively for my work in text processing, while the other guys use Python.  Generally I find the ruby the code is prettier, but python is a bit more mature for many things. For example, recently I tried to run a ruby script to parse some fairly complicated web pages.  I choose to use the tokenizer in Ferret (ruby's clone of Lucene) and while it worked quite well once it was done because I could do things like detect URLs , ignore HTML tags, read the CDATA directly.  But there were all sorts of memory leaks and problems detecting the correct UTF-* encoding.  It tooks days to get 10 lines of code to work.  Looking back, I should have just done it in Java or Python, or perhaps another package like Xapian or Sphynx.  Ferret is a great example of a once was pure ruby /C package that died to due memory leaks and lack of support. Do you want to detect / perse sentences? Do some traditional NLP?   Well, you can use the python NLTK, or try to get the Stanford Java NLP jar working in ruby (but it fails under 1.9). Moreover, doing any advanced text processing in ruby is ridiculously naive. For example, there are several simple gems and blogs describing how to do Latent Semantic Analysis) using ruby--and the discussions are absolutely purile--like much of the ruby community. For example, the ruby SVD code uses a crude dense matrix package copied right out numerical recipes.   Apparently they did NOT want to link to the systemn BLAS libraries.  WTF?!   It's worthless.  And here are at least 3 other examples of this.  The Python guys, however, have integrated ARPACK into a text processing package for large scale, parallel SVD.  Now this is the way to do it !    And if you don't like restarted Arnoldi as your eigen solver, there is ANOTHER python package that integrates a SVDLIBC (single sparse vector Lanczos).  Now had the ruby guys done something like integrated Jacobi-Davidson solver, or maybe use second order perturbation theory, the ruby packages would be useful...but a dense solver for text SVD ?!   Likewise for NMF...sure there is an NMF library in ruby...but it uses the GNU Scientific Library...and there is no easy way to get this installed on a Mac because there are no-prebuilt shared libraries, and you can't build the lib from source on a standard mac without installing a whole new unix OS Dudes...why didn't you just write the NMF gem to work with the default BLAS (or PBLAS!) install on the machine.  Or use the rnum gem? WIth python, you can just buy an NumPy/SciPy install for your mac for like $100 and Bam, you are up and running. Another example...you want to do some text similarity matching and would like good implementation of Locally Sensitive Hashing.  Good luck fiding that in ruby...you can, of course, write your gem to wrap the C++ LSH libraries...or you can use Python and LSH our of the box The point being there are lots of academic researchers releasing great text processing code for python.  For ruby...if you are building CRUD websites or facebook games...you are golden.  For text processing...ehh...it may start to wear on you I am kinda stuck using ruby for a while, and I see it now as a pretty version of awk-- which runs 5-10X slower (than, say, mawk, which is byte compiled awk).    The syntax is awesome in ruby, and writing your own DSL is fun. The APIs to text related things  like Xapian and Redis are solid.  If you do use it, you may try using JRuby...it's twice as fast and has real threads.  Now I will add that Python might face the same problem Perl did...it could die due to back compatibility..there is python 2.7 and python 3...I have seen major companies having to support 2 versions of Perl ... this is a huge mess.  The Java guys did the RIGHT...The ruby guys...well, ruby 1.8.6/7 and ruby 1.9 have some core language difference...but it's no where as bad as python 2.7 / 3 Mostly I use python 2.7 and moving back to ruby 1.8.6 (for JRuby)  But pound for pound, I have found very little in ruby that can not be done very well in python (excepting writing a pretty DSL) for real text processing,  and python has lots of great packages like NLTK for parsing and LSH, SVD, NMF, etc for advanced text processing    Embed Quote