★What else is a finite state machine used for except language parsing?
If you want to do things right then you normally have to model it using a state machine. You don't have to but it generally best if you did to avoid the pain of redoing things when an inconsistency occurs. In my line of work, I deal with a lot of business or end customer facing applications. With these applications, it is normally driven by some form of workflow. These workflow-driven systems have documents/files/processes that transition from state to state. It is best practice to model these states in a state machine to ensure its consistency.  It is also a nice simple diagram a large team can share to ensure that everybody is on the same page - especially when working on large workflow systems.    Embed Quote