★Will "knowledge-based programming" languages like Wolfram Alpha be superior to more traditional languages like Java?Or will it make everyone can program and professional programmers lose their jobs?
I recently attended the Wolfram Tech Conference in an attempt to find out if they had a viable strategy for makers of web-based products (SaaS) to use the Wolfram Language in a performant way. In short, the answer was "no." I completely agree with Phil Jones above. WL is on the cutting edge for research, computation, and exploration, however their current strategy for commercial products is to simply provide an API endpoint that can externally do a calculation and return a result. But that strategy is too slow and unreliable for web-scale deployments. This is unfortunate, because I love WL and think it could be a great solution for easily embedding intelligence into products. I asked Stephen Wolfram if he would be willing to address our concerns by creating a way to use the Wolfram engine within our own cloud infrastructure so we could get answers with native APIs (much faster) and spin up new kernals as needed. His response was basically: no ... that we should build the entire product with WL ... that everyone should. He actually does want to take over generalized programming and believes it will happen within the next 10-20 years. This is unfortunate, because I think it's a delusion that will limit how far his language can spread. In talks with their product management team, I kept emphasizing that SaaS products (today) aren't made with a language, but rather with an ecosystem of diverse services and vendors working together. After two meetings, they didn't show any understanding of that fact. That being said, not integrating might be a good move for them. Microsoft and others are beginning to build Machine Learning into their offerings, which will make product-based intelligence a very difficult space to compete within. I wish Wolfram would find a marketing message more congruent with their actual offerings ... or layout a future strategy to archieve their aspirational goals.    Embed Quote