★What are P, NP, NP-complete, and NP-hard?
If you are still confused, it might be due to some assumptions that you are making incorrectly/unknowingly. To clarify: NP: Doesn't stand for Non-Polynomial but Non-deterministic Polynomial NP & NP Complete are decision problem (Yes or No) NP: Given a problem that non deterministic turing machine solves in polynomial time, and its solution, can you verify in polynomial time if the solution is correct? NP Complete: Is this an NP problem in disguise? That is, given an NP problem, can I transform it into another NP problem in polynomial time? The significance of this is, if I can solve an NP Complete problem in polynomial time, then I can solve all NP Complete problems in polynomial time. NP Hard: Not necessarily decision problems. 'Harder' than NP problem. Why? Because there might be some NP Hard problem whose solution you cannot verify in polynomial time (See NP above). These are the problems that can be transformed from an NP Complete problem in polynomial time. The significance of this is that if I can solve NP Hard problem in polynomial time, then I can 1) solve all NP Hard problems in polynomial time and 2) solve all NP Complete problems in polynomial time (but reverse is not true). In this way, I can solve all NP problems in polynomial time. However, if I can solve all NP problems in polynomial time, then it doesn't necessarily mean I can solve all NP Hard problems in polynomial time. Why? because a NP Hard problem can be such that given its solution, there might not be a polynomial verification (a requirement for NP)    Embed Quote