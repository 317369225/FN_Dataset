★What are P, NP, NP-complete, and NP-hard?
My aim is to provide the intuition for this question as other answers did a good job describing the technical terms. Consider a scenario in which you walk into the exam hall and have the following three questions: Does there exist in set  such that ? Do there exist in set   such that ? Do there exist in set   such that ?  While skimming through these questions, you feel that the first question is easy but the last two are difficult. What exactly do you mean by easy or difficult? Both are relative and vague terms, right? Can we classify the problems which are indeed easy (or doable) and which are difficult (not doable)? Before we start, lets assume two things -- 1) You are no less than Arthur T. Benjamin[1] and can do any calculation in one sec no matter however complicated that is. 2) You don't know about complicated stuff like square-root smare-root! With this you start to solve the first question. Your approach is simple and robust: trying all the possible values of . So there are 1000 possible values to try. Estimated time to solve this problem -- 1000 secs. But you realize that has to be even if you hope to satisfy the equation. Cool, now you have only 500 possibilities to try from. Estimated time to solve the problem -- 500 secs. Another realization is that increases as you keep increasing and you remember that 20 * 20 = 400. Hence, if at all there exists a solution, it should lie within the first 20 numbers. Now you only need to check 20 possibilities. Estimated time to solve problem -- 20 secs. Wow! This is 50 times improvement over the naive approach. Now let's turn to the second question. Consider as a tuple. Since every element in the tuple can take any value between 1 and 10, we have 1000 such possible tuples. You still need only one sec to check whether is indeed equal to 4564 for given . Estimated time to solve problem -- 1000 sec. There is hardly any hope to reduce this time. There is no special property or structure that you can exploit to reduce the number of possibilities of the tuple (and hence the time to solve) significantly. Not willing to waste your 1000 secs on the second question, you turn to the third one. You are again stuck with the same difficulties but you realize that if you could solve the second question, you will very well be able to solve the third one too. You can just rename some variables, rearrange some terms and it looks exactly like the second problem. So having realized that now you have only one problem to solve, you turn your attention to the second question. Since the clock is ticking, you can't explore all the possibilities. Now you have two options -- You can ask the guy/girl sitting next to you for the solution and s/he does tell you the solution, say . Instead of merely copying his/her solution, you check it in one sec. Notice that you can't solve the problem in one sec but if someone provides you the solution, you can check it in one sec. This is possible because s/he has done all the hard work (creative part) and you are just verifying it. If your moral values don't allow you to copy, you can take the following approach. Guess the values of and check the solution. So your scratch paper for Question 2 looks like (1st possibility) -- (4, 8, 2) (2st possibility) -- (3, 9, 13) ... and so on and so forth, unlike for Question 1 where it looks like (1st possibility) -- 1 (2nd possibility) -- 2 ... You can predict with certainty what comes as the next possibility for Question 1 (and hence deterministic approach) but not for Question 2 (non-deterministic approach). These two words are used in the same context while defining P and NP. We broadly divide the set of all problems into two categories. First, where you can find the solution in reasonable time, we call it class P. Second, where you can't find the solution in reasonable time but you can check the solution in reasonable time, we call that class NP. So Question 1 is in P and Questions 2 and 3 are in NP. (Strongly because of second assumption. Please see footnote.) Now it is an open challenge is to solve all problems in NP in reasonable time. And in the quest of one million dollars [2], you and me start to attack every problem which is known in NP. But it is foolish to attack hundreds of problems at once, right? So we decide to pick the hardest problem in this world and put all our energy in solving that problem. The set of such hard problems is called NP-Hard. But wait, we are making this matter more complicated than necessary. If we could pick the hardest problem in the class NP and solve it, we would be able to solve many problems which are less harder than that and are in NP. The class of such problems is called NP-Complete. So, I can vaguely say, Question 2 is in NP-Complete as once you solve that, Question 3 is easy. But why should you worry about classification in the first place? Since resources are limited, you don't want to assign them to some problem which takes lots of time. If you don't care about this, you could get lost trying to solve the second problem losing points for all three questions. Note - Technically, 2 and 3 are NOT in NP if you include algebraic tools. The P vs NP approach in Russian Math circle was to check whether a given problem can be solved without exploring (almost) all the possibilities. In this sense, we can classify Questions 2 and 3 in NP. References - 1 Arthur Benjamin's Home Page 2 Clay Mathematics Institute    Embed Quote