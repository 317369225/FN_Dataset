★What is your web development workflow like?How / where do you develop, test, upload, deploy? What services are you using?
Interesting question. I personally like keeping it simple as its worked for us. When we start a new project, we have a small team discussion to make sure everyone is on the same page. 1) Designers start with basic wireframes. Either using a tool or using grid based print outs. 2) Simultaneously, we do a story board. Basically chalking out the work flows. 3) While the designers are busy with the wire frames, I design the data base models and discuss with the designers about the kind of information that is to be shown on the screen. When they're waiting for me to finish this, they design for multiple screens as well(phones, tablets etc). 4) We then initialize a code repo(I like bitbucket), and the implementation begins. 5) The designers start writing html code to convert wire frames while the programmers start with the application code. We use TDD. I should be honest here, for smaller projects, we sometimes don't use the TDD approach at all. 6) Everyone has code access. Everyone includes designers and programmers and database programmers. 7) Once we have enough code to make the application work, we tag it with a version. Version 1.0, then 1.1 etc. 8) Once we test is locally, we have a final run with the entire team. At this phase, we discuss any design changes, code reviews etc. 9) After we're all happy and we agree if the code is ready. If yes, we make a production branch. We use git for our versioning. Tag that branch and pull it on to our server. 10) We manually test the live version, and see if anything breaks. 99% of the times, it works well if the other steps were done correctly. If it fails, we immdiately switch to the last working code, and work on bug fixes. 11) For the next few hours, we'll have one of our programmers rigoursly using the system like an end user. Here, we see if our interfaces are intuitive etc. If not, we sit down with the tweaks required. 12) We celebrate, and move to the next module. :) one important part of our workflow is that, we don't try to push towards the deadline. We don't speak of 25 days forward this is where the product should be. Instead we focus on what we can ship today. In other words, we focus on a series of small actions and usually we end up finishing way before our deadlines. The tools we use: 1) Text editors 2) Git Version Control 3) Testing framework(phpunit) 4) A development server(ubuntu) 5) We have seprate desktops for browser testing. 6) Grid based tools or papers. Can be found at the zurb foundation website. I guess it'll be under resources or downloads. Kindly check. 7) A simple task management system. Nothing fancy here. Also, if you're using git, have a look at git flow. The above are a few things that I can think of right now. Workflows are usually based on the enviroment, the team size and many other factors. Its never just one way to do it. That being said, this works for us as we're a lean team. If you're working with a larger team, you'd probably need a different approach. I'd love to see more answers to this question. Hope this helps. :)    Embed Quote