★Why doesn’t "sizeof(a)/sizeof(a[0])" work for an array passed as a parameter?
Because there really are not arrays in C, just anonymous stretches of memory with a base address.   When you pass an "array" in C, the compiler passes the base address of the array AND NOTHING MORE.   So the receiving function has no way of knowing the exact type, dimensions, or size of the array.   The declaration for the parameter in the function header is mostly there for decoration- sizeof( param) will give you the size of that parameter type, but you can actually pass in ANYTHING and the sizeof() will still return the constant that is the size of the declared function parameter, not the actual array.   what you CAN do, sort of, is to write a macro, something like:  PassArg( A )    &A, sizeof( A ) / sizeof( A[0] ) which you pick up i the function as:  ( void * Param, int Paramelements ) This will KIND OF WORK, one level deep.    Embed Quote