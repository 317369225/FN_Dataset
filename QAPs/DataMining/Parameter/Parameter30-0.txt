★In the C programming language, can a void function return any parameter?
If you declare it like: void func(){} then it can't return anything. Perhaps you're thinking of function that (urp) are like this; void *  func(){} Just one little star of difference, but oh, what a difference it makes. In C-speak, "void *" means the exact opposite of what it says, it says that ANY pointer type is compatible with this type.  So you can pass back a pointer to any data, and if yo properly cast it at the receiving point, you do have a pointer to whatever.     This is in general not a great idea, as you're violating every spirit and intention of having types at all.  To make things a little bit less counterintuitive, I usually define a type just for this and use it religiously: typedef   void *   DangerWillRobinsonThisCanReturnAnyTypeOfPointer; DangerWillRobinsonThisCanReturnAnyTypeOfPointer FuncThatReturnsBlah(){} If possible make up a specific type for what you're returning: typedef  int IntArray[100]; IntArray * getarray() {  ... }    Embed Quote