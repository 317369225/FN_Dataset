★Which graph representation is better for competitive programming in C++: adjacency list or adjacency matrix?I want to implement some basic graph algorithms such as - bfs, dfs, dijkstra, mst- prim's and kruskal, max bipartite matching etc.. I want to know which is better representation for graph in terms of easy to manage with time and space - especially for competitive programming.
For Competitive programming, adjacency Matrix is always preferable. Because...   1) It is very easy to create, than the adjacency list.  2) It is very fast to use, requires just a unit of time to access any element.  3) It is very easy to handle, and there is less chance of making errors,   when you have to write larger codes in less time. 4) There is no issue of managing space, as in List where we do dynamic allocation of memory. Some people say, list saves space, but it is only in theroy. Each node of list requires, much more space, since it is structure(class) in itself.    Embed Quote