★Is C++ much better than Python for implementing a Markov-Chain Monte Carlo algorithm?
You could write it in Python, test/prove that your algorithm is correct, profile it and then rewrite the 'slow' parts in C++ and integrate them with Boost.Python or SWIG. That way you can use the strengths of each language. Personally I find it much faster to develop algorithms in Python first anyway - the environment is better suited to fast iterative development, with excellent debugging support, interactive introspection and visualization libraries. Even if I rewrite parts or all of it in C++ later, I can use Boost.Python to reuse the unit tests I've already written. The Python version then becomes my reference implementation.    Embed Quote