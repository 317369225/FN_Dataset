Data Modeling: When should we not use a relational database?
The most difficult - and expensive - thing to do is to with an RDBMS is to scale write traffic.   In order to maintain atomic transactions and consistent state across the entire database, all updates must by necessity go through a single transaction log.    NoSQL (IE non-relational) databases are able to scale out writes horizontally by distributing write operations across multiple transaction logs, thereby sacrificing atomicity and hard consistency.    Massively Parallel Processing (MPP or NewSQL) databases combine much of the scalability of NoSQL with many of the advantages of an RDBMS for OLAP workloads, but have very limited support for OLTP.   RDBMS also gets expensive (and slow) when your table size gets to the multi-terabyte range.  Scaling to 2x data throughput with an RDBMS may cost 10x or higher;  NoSQL and MPP scale horizontally so 2x throughput predictably costs 2x more.  Furthermore, an RDBMS has to be provisioned for predicted future capacity over the expected life of the system;  NoSQL and MPP databases can be scaled out incrementally on a just-in-time basis. Brewster's CAP theorem dictates that of the three properties of a data store - consistency, availability, and partition tolerance - any given implementation can possess at most two.    RDBMS gives you consistency and availability but cannot be easily partitioned.   NoSQL and NewSQL generally sacrifice hard consistency in favor of partitionability. Aside from scalability concerns, RDBMS tools generally have poor support for unstructured or semi-structured data.   While you can store a blob object or a text field in an RDBMS, there's very little you can do with it inside the database besides barf the whole thing out to a client, and even less you can do without severe performance implications.  So quick summary: Use RDBMS if you need atomic transactions, have a low to moderate write volume, and don't need to deal with complex or unstructured fields Use NoSQL if you need extreme write performance, need to deal with unstructured data, can use a flexible schema, and you don't need atomic transactions. Use NewSQL/MPP database if you need to do OLAP queries on extremely huge sets of fast-growing structured data.    Embed Quote Updated 17 Apr. 202 views.