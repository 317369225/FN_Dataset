What are the most important things to consider when designing a data model for a performant website?
Some starting questions I'd have in the back of my head when embarking on a brand new project: How large a userbase? What type of data is going to be stored?  (Traditional relational style?  Documents?  Simple key-value pairs?)   This may determine whether you use a relational data model or one of the NoSQL data stores. How much data?  How fast will it grow? What is the read/write ratio for the data?  Read-heavy data scales well in traditional ways with caching and RDBMS type replication.  Write-heavy data takes more thought. What are the common types of questions you want to answer from the data?  Do you need to join data together to answer common queries?  Analyze it offline?  Run data warehousing type queries? How expensive will these queries be to answer on the data models and stores you're considering using? How is this data likely to change over time? How important is it that data is consistent, and how soon does it need to be consistent? How important is it that you avoid data loss?    Embed Quote 