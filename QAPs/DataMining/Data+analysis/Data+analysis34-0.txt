★Which is better for data analysis: R or Python?
The general principle I've found is that R's advantages play more strongly the closer your task is to mathematics proper, and Python (or other similar languages) is better the closer your task is to programming. For me, R's strength is its widespread support in the statistical community. This is a really huge plus for data work. You can find already-written packages to do all sorts of fancy things. Mathematical tasks are often relatively easy to get running right out of the box. R's array-oriented syntax can make the translation between math and implementation easier, especially for someone who isn't an experienced programmer; it's relatively straightforward to move your vectors and matrices and functions on them from paper to code. However, Python, being a more general-purpose language, is great for handling the myriad tasks you'll have to do when coding other than mathematics. And even in the context of data analysis work, these certainly pop up. Need to parse data in a funny format? Want to represent your data with custom classes that can't easily be shoehorned into an array structure? Python might be preferable. And I think Pandas is great, really makes your data easy to work with, and scikit-learn has an actively supportive community. I also think Python is syntactically cleaner than R. I've definitely been meaning to get around to Julia at some point as well...    Embed Quote 