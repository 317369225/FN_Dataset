★Which is better for data analysis: R or Python?
For traditional statistics applications on typically sized data, R and Python are equally worthy. For exploratory work, R is a lot easier for beginners. However, when the task becomes more specialized, code is much easier to write and debug in Python. The tipping point which highly favours Python over R is the IPython notebook: useful for exploratory work using its interactive development environment, offline record of results, easy transfer to other formats (esp. html) for web tutorials/presentations, native support for markdown and LaTeX -- in short, excellent reproducible research, even for non-statistical purposes. Python's pandas package is now mature enough to outclass R dataframe, especially where time-series indexing is concerned. Resampling is a snap, and the data munging problems when using R almost completely disappear in pandas. R does have a slight advantage in terms of graphs and charts, but only if your plotting needs are ultra-sophisticated (do compare R's ggplot2 vs. Python's bokeh for yourself). The major downside to Python adoption for data analysis is the large number of packages and their interdependencies -- relative to a simple R installation. One workable solution is the free mega-package called Anaconda which includes a manager for updates to all the machine learning, IPython, and scientific libraries involved. Once a project is prototyped in Python, the benefits around moving to production code become clear. The specialized numerical data formats can be directly read in memory by low-level languages such as C, and any bottlenecks revealed by superb profile tools can be easily rewritten in Cython or C++ and linked for optimal speed. Forget about any production code in R -- too many algorithmic inefficiencies currently lurk within R. Also, R is neither suitable for large-scale parallel computing nor for real-time streaming data. And finally, for readability and maintaining a large code base (even trivial namespace :-), Python definitely takes the prize.    Embed Quote 