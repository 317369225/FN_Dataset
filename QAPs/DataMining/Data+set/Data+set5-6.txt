How do data analysts at companies like Facebook and Twitter run queries on extremely large data sets?
While all the new technologies that have evolved in the last 2-3 years to handle "Big Data" challenges have performed above and beyond what traditional systems could do, one technology that receives very little mention apart from niche circles of quants in high frequency trading is something known as KDB+. KDB+ is an in-memory columnar database that has been around for more than 20 years, it incorporates seamless Map-Reduce with no additional user programming. In-Memory, Columnar, MapReduce ... these are concepts that KDB+ had already mastered in the 90s. It is based on the Q language which in itself is a dialect of APL (programming language), a language first used in the 60s when programmers had to have a fundamental knowledge of the hardware-software layer to write code that super optimized the use of expensive resources such as Memory, and other things we take for granted today. Imagine building a database using the same principles of ultra-conservation where even each 'character' in the source code has been chosen carefully with optimization in mind. Indeed, the entire KDB+ database and its language is about 300-400 KB - that is kilobytes. As for speed, there have been numerous comparisons done to benchmark KDB+ vs other "Big Data" systems, and in nearly each and every use case, no matter how diverse, KDB+ easily beats out the competition by a factor of 10, 100, 1000 ... . The "competition" in this case includes Hive, Spark/Shark, Impala, etc and the benchmarks were run on TB scale datasets. This is no exaggeration, in fact, to us and the group of people who use KDB+ to perform millisecond and microsecond level analytics, KDB+ is the best kept secret of the "Big Data" world. It was handling terabytes of data with ease in the early 2000s and we all thought it was normal, ... until we started seeing a buzz around Big Data and terms we had been familiar with for years only to realize that these new "technologies" weren't able to deliver close to the performance of KDB+. Arthur Whitney who wrote KDB+ and Q was also one of the developers of the LISP language. There is an anecdote about Arthur where, during a visit to Ken Iverson, he wrote the J language in a single sheet of paper on a summer afternoon (The Origins of J). KDB+ is not suited for all types of situations, for eg., you need Hadoop or Hadoop-like systems for unstructured data, but for what it does it does it better than anything else I have yet to encounter in the Big Data world. KDB+ - Big data analytics, time-series database Jeff Borror of Morgan Stanley has a superb tutorial on Q available at QforMortals2/contents - Kx Wiki    Embed Quote 