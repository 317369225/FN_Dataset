★What is an intuitive explanation of the FFT algorithm?
We will start from the broader perspective of divide and conquer algorithms and make an analogy from an integer multiplication algorithm to a polynomial multiplication algorithm, finally presenting the fast Fourier transform (FFT) for the latter problem. The inverse FFT is explained in terms of linear algebra, which may give some better intuition for some (it's not a complete rehash of the previous section). The following should be understandable to someone who hasn't studied divide and conquer algorithms in depth. I highly recommend you read Mark Eichenlaub's answer to What is an intuitive way of explaining how the Fourier transform works? if you haven't, although it's not crucial to know what it is for understanding how the FFT algorithm works (at least, for the explanation I'm going through here). This answer is pretty long and there is a lot of mathematical notation that might look intimidating. I promise you that it is all very straightforward if you take it slow and pay close attention. If something is unclear, please ask about it and I will explain further. I wrote this answer using my notes from Dasgupta's Algorithms, chapter on divide and conquer algorithms. Integer multiplication with divide & conquer Suppose we want to multiply two numbers and . Represent them as two -bit integers, where is a power of two (for simplicity). Then you can rewrite the numbers by splitting them into left and right halves, and same for . For example, you can see that the number Multiplying and together,                    Notice the first term is just left-shifts, so that operation and the addition are trivial. The multiplications are the more intense operations, but we just make a recursive call and we get , but with a little trick, you can get . The trick is in noticing that the product of two complex numbers, , which looks like it requires four multiplications, can actually be done in only three multiplications if you notice that . Polynomial multiplication with divide & conquer Write a polynomial of degree as You can represent a polynomial in two ways. The first is the coefficient representation, The second representation utilizes a fact about polynomials--that they can be represented by unique points. Thus the value representation is just, Multiplying two -degree polynomials and will give you a degree polynomial . If you had to pick a representation, you might think to pick the latter since if you wanted to find some value you would just need to do , and that would completely specify in linear time (since you only need points). But obviously you need to transform from the coefficient to the value representation, and that would require roughly steps, motivating us to try and do better with the transformation... The fast Fourier transform We could use an idea from the first section with integer multiplication, namely, to try and split the representation in two parts and see if we can do something interesting. One idea is to pick evaluation points around zero so that we have positive-negative pairs . So if we have a polynomial we can rewrite it as or, more generally, since the terms inside the parenthesis are polynomials in . Then, when we evaluate our points, we have,... (more)Loading...