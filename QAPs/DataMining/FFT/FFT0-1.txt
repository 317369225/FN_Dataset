★What is an intuitive explanation of the FFT algorithm?
One way to think about it is to consider what a pure tone looks like when downsampled.  For concreteness, let's suppose you're sampling 44kHz audio, with 44 samples in a 1ms time window (N=44).  Then you downsample to 22kHz by considering the even samples and odd samples separately. First, consider what happens to the DC level.  Any DC level will affect both the even and odd samples, and it's clearly the sum of the two DC levels of the samples.  But what about a 22kHz tone?  You can sort of see it in the original 44kHz sample, but it matches the sampling rate of the other two samples, so to them it looks like DC level.  However, it has opposite phases on the even samples vs the odd samples, so you can reconstruct it by subtracting them. The same thing works for other frequencies.  If there's a 25kHz tone, then in the downsampled spectra it will appear at the beat frequency of 3kHz, and not at any other frequency.  You'll also hear 3kHz tones at 3kHz.  But again, there will be a difference in phase between the even and odd samples.  The real 3kHz tones will be almost in the same phase in the even samples and the odd ones, but the 25kHz ones will be almost exactly out of phase.  These are the only frequencies in 0..43kHz which contribute to the 3kHz band in your spectrum.  You can figure out the amount in each band by canceling the other.  To find the real 3kHz band, cancel the part that's in the 25kHz band by adding with a small phase correction.  To find the real 25kHz band, subtract them with the same small phase correction.  This is what the butterfly transform does. And that's the Cooley-Tukey algorithm.  Take the even samples and odd samples, recursively compute their DFT, and combine the two with phase information to reconstruct the big DFT. You can see that there's nothing special here about even and odd.  We could have divided the samples into 3 groups instead, and the logic with beat frequencies, phase differences and cancelation would still have applied.    Embed Quote