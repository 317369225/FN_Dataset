★What is the bottleneck holding back true (non-statistical) Natural Language Processing?
You may want to change your wording. Statistical people may not appreciate it this way :) . Anyway, regarding rule-based (or rather, linguistics-based) NLP, it is mostly the scope of the task, like Mostafa Hany Gomaa said. To summarise it, the main showstoppers are: low monetary value of the classic one-trick-horse language models expensive and slow development of NLP products It is, however, not as hopeless. The way I look at it, it is mostly the balance of creating a working development flow and making the end result more valuable. Let me expand a bit on the way I believe it can be handled. This is exactly the angle from which we attacked this problem in LinguaSys (Welcome to Linguasys). 1. We have a shared kernel (called Carabao Linguistic Virtual Machine™), which reuses the same language models for many tasks, from sentiment analysis to natural language user interfaces, crosslingual retrieval and even automatic translation. We've put a ridiculous amount of work in it (nearly a decade in development), and added options which most developers won't have time or resources for - our own morphological analyzers, decompounding, Asian language segmentation modules, anaphora resolution, pro-drop support, clitic extraction, etc. 2. The binaries themselves know nothing about nouns, verbs, adjectives, etc. All this stuff is stored in an external database, which comes together with an IDE, much more powerful than an average "linguistic workbench". Programming IDEs have been developing rapidly since 1980s, but what about the linguists? Imagine if we still had to program with gcc command-line, how do you think the software would look like? With our IDE, a working language model can be built in as little as 3-4 months by one computational linguist. Basically, we're taking the programmer out of the process and delegate the whole development to the experts (computational linguists). Plus, everything can be tweaked and grammatical concepts can be invented on the fly. 3. The actual applications simply send textual content to the Linguistic Virtual Machine and get back a stream of discreet semantic objects. Hence, their development is reduced to a mainstream IT effort. Every correction, every new language added to the pool of Linguistic Virtual Machine, benefits all of them across the board. Read more about the bottlenecks and how we address them here: http://www.linguasys.com/web_pro....    Embed Quote