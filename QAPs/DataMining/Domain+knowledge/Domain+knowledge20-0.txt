★What are some good ways to capture an expert's domain knowledge for writing a program to implement it?
I'm currently experimenting with "Acceptance Test Driven Development".  I've had a lot of difficulty getting any sort of organized requirement from a client of mine.  So after a lot of dead ends I'm having my client help me understand the requirements by having her write tests in Fitnesse.  These tests essentially become executable requirements.  She writes failing tests, and I write code (in Drools, in this case) to make the tests pass. To oversimplify, when she feels like she's written all the tests that describe the scenarios of the domain, and when they all run green, the business logic of the system is done. That is an oversimplification, but not by too much.  These tests will live on as regression tests.    Embed Quote