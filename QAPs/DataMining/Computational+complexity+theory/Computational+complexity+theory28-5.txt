★Computational Complexity Theory: How would you explain P vs NP problem to a child?
I've written an intuitive explanation for P vs NP in this article: 40 Key Computer Science Concepts Explained In Layman’s Terms. Here's my attempt: Say I give you a multiplication question like: Q1: 7 x 17 = p The answer is 119. Easy to solve right? What if I reverse the question: Q2: p x q = 119 (p & q cannot be 1 & 119) To solve Q2, assuming that you haven’t seen Q1, you probably have to go through all possible numbers from 2 to 118. We are yet to discover an efficient algorithm that can find the factors of a number easily. What if I ask you: Could p possibly be 7? You can easily verify the answer right? Just divide 119 by 7! Multiplication is easy. Finding the original factors of a number is hard. So Q1 is a P (polynomial) problem because it is easy to solve. Computer can easily multiply 2 super large numbers without spending significantly more computer time than small numbers. Q2 is a NP (nondeterministic polynomial) problem because it is easy to verify, but hard to solve. Finding the factors of 119 is still fairly easy for computer to solve, but how about a 500-digit number? It’s impossible for any computers right now. Here’s the important part: Are NP problems (e.g., factorization) also P problems (e.g., multiplication), just that we haven’t discover the efficient way to solve NP problems? Are NP problems really hard to solve, or we just need an “aha moment” from a brilliant scientist (or you?) to come out with an efficient algorithm? Or maybe humans are too dumb? Imagine there exist machine or life that possesses much higher intelligence than human. They see us like how we see ants. Our level of intelligence is too insignificant to them. Solving P vs NP problem is like solving 1 + 1 to them! So why is P vs NP problem important? If we are able to prove P=NP, that means all NP problems can be solved easily within reasonable computer time. We will be able to cure cancer, break passwords, etc. It’s world-changing.    Embed Quote 