Computational Complexity Theory: What are some NP-complete problems involving complete graphs?
I can't think of a "natural" NP-complete problem on unweighted complete graph. For weighted complete graph, the most famous one would be Traveling Salesperson. You can also reduce many NP-complete problem on general graph to complete graph by assigning a large weight to the edges that exists in the original problem and a small weight to the edges that don't. For example, start with an instant G(V, E) of Hamilton Cycle, construct a complete graph G'(V) such that each edge in E has weight 2 and each edge that is not in E has weight 1. Now ask if G' contains a Hamilton cycle of weight 2|V|. If it does, then G has a Hamilton cycle; otherwise, G doesn't have a Hamilton cycle. Since Hamilton Cycle is NP-hard, the following problem on weighted complete graph is also NP-hard: "given a weighted complete graph and a target, check if the graph contains a Hamilton cycle whose weight is the target". Also, this problem is clearly in NP, so it's NP-complete.    Embed Quote 