★Computational Complexity Theory: How would you explain P vs NP problem to a child?
Fluids and electric currents in nature and lab tend to  find  path of least resistance[ or minimum energy config or equilibrium] on their own  . how do you teach a robot [ or computer ]doing that and stuff like that? . Can you imagine that with more complicated circuits it ll be harder and take more and more steps for computer. Working it out by hand is a daunting task that’s prone to error. How many times have you forgotten to carry a two or thought that 3 + 4 somehow equaled  8? You’re better off leaving it to a computer algorithm to figure it out. While it could quickly find the best route for a small number of cities, adding in more cities makes finding a solution more difficult. It increases at a polynomial rate, so instead of something number of steps, it could take , and so on, eating up more and more computational time with each higher power There is a scientific approach that  attempts categorizing such difficulty popular as Complexity Theory .P and np are some of those categories. . P = NP seeks equivalence between these degrees of hardness and there have been very interesting attempts to do so a la a well-known piece of computer science folklore maintains that, if two glass plates with pegs between them are dipped into soapy water, then the soap bubbles will rapidly form a Steiner tree [1]connecting the pegs, this being the minimum-energy configuration. for familiaritie's sake which video game do you play? Location traversal and single-use paths, ala Pac-Man, is NP-hard. Pressure plates, a la Prince of Persia or Portal, is PSPACE-hard if there are two pressure plates, and NP-hard if only one is required to open a door. In the case of switches, one switch is P-hard, two is NP-hard, and three or more is PSPACE-hard. Ask why ? [1]http://en.wikipedia.org/wiki/Ste... [2]http://www.technologyreview.in/b... [3]http://www.scottaaronson.com/pap...    Embed Quote 