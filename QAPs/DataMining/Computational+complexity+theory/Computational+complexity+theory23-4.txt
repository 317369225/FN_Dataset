★Computational Complexity Theory: What's the meaning and significance of P ≠ NP?
Essentially, problems that can be solved, that is, problems for which you can quickly search for the solution, are in P.  Problems for which you cannot quickly search for the solution, but could identify the solution if given it, are in NP. A neat way to understand some of the problems is by comparison to music.  If P NP, then creating great music is significantly harder than identifying great music.  If P NP, then creating great music is no harder than identifying it. Now, to really say this, you'd have to reduce "music creation" to an NP-complete problem and vice versa, which doesn't make sense, but hopefully it gives some insight. [stolen from a tweet]    Embed Quote 