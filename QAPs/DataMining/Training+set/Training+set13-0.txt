★How many different classes can we practically have within a training set, whilst using the KNN algorithm?E.g. Is 700 possible?
There's a fair bit of published work on classification of data with a large number of classes, 700 is certainly possible. For example, Deng et al. (2010) find that KNN outperforms SVMs when the number of distinct classes is large, 7000+. The run-time of KNN is independent of the number of classes, so there's a computational advantage of using it when there's hundreds or thousands or millions of classes*. *Why? Let's say you have C classes, and are using K nearest neighbors - finding the majority class of the K nearest data points can be done in O(K) time by maintaining an array of length C which contains the histogram counts for each class, lets call it A, and maintaining a max count as this histogram is populated. If we call the set of nearest neighbors KNN and denote x_i, y_i to be the respective value and class of datapoint i then the following code performs the classification. A = zero_array_of_length(C) max_count = -inf max_class = 0 for x_i, y_i in KNN:     A[y_i] += 1     if A[y_i] > max_count:         max_count = A[y_i]         max_class = y_i return max_class I'm assuming we can initialize an array in O(1) time, which is possible in modern architecture.    Embed Quote