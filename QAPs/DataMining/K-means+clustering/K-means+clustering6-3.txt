★How can I apply the K-means clustering algorithm to a flight dataset?
Let us first define a problem that we can solve using this dataset. "Identify unusual weather events that led to a large number of flight cancellations" seems to be a reasonable question that we should be able to answer using this data. For this, we will use the data rows referring to cancellations, and the only columns needed are the Scheduled Departure Time and Departure Airport Coordinates (Latitude, Longitude). Ideally we would need another field: whether the cancellation is a "Primary" or "Secondary" event, i.e. is the cancellation a direct result of the unusual event or is it because a prior flight departure cancellation led to the aircraft being unavailable for this flight departure. In the absence of this information, we can consider the set of all cancellations. Since we are comparing geographical coordinates and time dimensions, we should normalize or transform the data, especially the departure time, in some manner (I'll not get into the details here). Next we have to pick the clustering metric representing the distance of a point from a cluster. For now, let us stick to simple Euclidean distance from the centroid of the cluster. To run k-means, we need a rough idea of the number of clusters we are looking for. If you have no way of estimating this, it is probably right to use a different clustering method (like agglomerative clustering) that can do this automatically. Now we have everything we need: a set of input data in three dimensions (X, Y, T) representing flight cancellations. Run the k-means algorithm with multiple seeds or initial assignments and inspect the most common result. Each cluster represents a set of flight cancellations that are "close" to each other geographically and chronologically, and hence can be connected to a real world weather condition or other unusual event leading to flight disruption. You may have to re-run the clustering with a different number of clusters, or data transformation, or clustering metric. It also good to know the strengths and biases of each clustering method: k-means is fast, but tends to return clusters with similar point counts. This is not how the real world event behaves here. The data set is also not very large for cancellations alone. There is also the difficulty in estimating the number of clusters. Hence, my somewhat ironic conclusion here is that we should have used a different clustering method for this problem instead of k-means. But if it is the thought process you are looking for, I hope you have your answer.    Embed Quote