★What is the difference between K-Means and Fuzzy-C Means Clustering?
In fuzzy clustering, each point has a probability of belonging to each cluster, rather than completely belonging to just one cluster as it is the case in the traditional k-means. Fuzzy k-means specifically tries to deal with the problem where points are somewhat in between centers or otherwise ambiguous by replacing distance with probability, which of course could be some function of distance, such as having probability relative to the inverse of the distance. Fuzzy k-means uses a weighted centroid based on those probabilities. Processes of initialization, iteration, and termination are the same as the ones used in k-means. The resulting clusters are best analyzed as probabilistic distributions rather than a hard assignment of labels.  One should realize that k-means is a special case of fuzzy k-means when the probability function used is simply 1 if the data point is closest to a centroid and 0 otherwise. The fuzzy k-means algorithm is the following: Assume a fixed number of clusters k Initialization: Randomly initialize the k-means associated with the clusters and compute the  probability that each data point is a member of a given cluster k, . Iteration: Recalculate the centroid of the cluster as  the weighted centroid given the probabilities of membership of all data points :  Termination: Iterate until convergence or until a  user-specified number of iterations has been reached (the iteration may be trapped at some local maxima or minima) You might be interested in reading Fuzzy C-Means Clustering for Iris Data.    Embed Quote