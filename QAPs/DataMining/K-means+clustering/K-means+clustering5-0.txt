★How do you write a parallel k-means clustering?
You can find plenty of references online so I will spare you the details and explain the intuition: It's the same way you sort in parallel: by starting with a coarse estimation and bucketing. To sort a billion numbers in parallel, you sample from the numbers to get an estimate of the distribution (let's assume it's a uniform distribution from 1 to 100) and then you compute quantiles and assign each machine to a quantile (e.g. if you have 100 machines, machine 1 gets numbers less than 2.0, machine 2 gets 2.0-3.0, ..., machine 100 gets numbers 99.0 and higher ). Then each machine sorts it's own numbers and now you have 100 sorted lists of roughly the same size that can be concatenated to make the full sorted list. Distributed k-means works similarly but instead of dividing a number line into line segments, you are dividing a higher dimensional space into regions, then doing the regular k-means in each region.    Embed Quote