★Why should I use an existing ETL vs writing my own in Python for my data warehouse needs?I've been reading the Kimball Group Reader and they strongly recommend I use an existing ETL. Looking at solutions such as Kettle, SnapLogic, and Talend it seems their GUIs complicate the solution instead of making it easier to model and understand.
I know this is an old question, but is still pertinent hence wanted to add one item I didn't see clearly mentioned in the answers I read. Maintainability: If we assume that the same folks who develop the custom ETL code will support it forever (or for a very long time) then sure this approach may work. In reality though, companies have to deal with attrition and this causes issues when using homegrown solutions. IMHO, the ramp-up time for someone to learn custom code vs. a vendor-based tool is less. This is one reason I can think of why, if you were a decision maker you would chose not to build a custom-coded solution. Also, often times new hires who may also be experts in this area may not find the existing custom code agreeable. This leads to potential changes which complicate things further. So when coming up with the cost, I think one needs to consider this cost as well.    Embed Quote