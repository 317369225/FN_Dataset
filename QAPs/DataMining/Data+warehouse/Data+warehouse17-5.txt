★What is the best approach for the successful kick-off and continuous implementation of a data warehouse?
I start with more questions rather than answers. (1) Are you a Microsoft shop, Java, or hybrid? The talent mix in your shop is a key factor. Have any of them previously worked in a setting which had a mature DW, apart from whether it used SaaS?. Before hiring more permanent talent, the enterprise needs to understand the real need more clearly -- especially considering the constraints you mention. The constraints could doom your chances for success. (2) Do you have an existing reference ("master data") baseline that is something you can build on, or is this part of the need? (3) Is the enterprise persuaded that this -- a full DW -- is a requirement? Sometimes a loosely connected framework of solutions will satisfy the need.A bit of prototyping, with prospective vendor help could sort that out. A full DW requires a commitment that may not have a clear ROI for some firms, especially if things are not in a steady state for talent, infrastructure and leadership vision. (4) Can you construct a set of use cases -- say around 7 -- that would represent a moderate success for stakeholders? Getting beyond idealistic objectives is essential. (5) Do you have mature applications, such as an ERP or CRM like Salesforce, that are an integral part of the mix? If so, I'd start the investigation by seeing what peer firms are doing around your vertical. If your environment is a one-off unique scene, then find one where the data flows and talent mix are similar to yours. (6) The Kimball DW Toolkit book is worth having as an overview and an introduction. Whether it would serve as a guide to building what you need depends on these other factors more than the technical considerations it introduces. In other words, it will have you seeing, "Ah, I need to do that, too!" or "Nah, that's too much for what we need." (7) The latest generation of BI tools (especially around Teradata's ecosystem) can do quite a lot without having to build a DW. Many include ETL capabilities. At a recent Teradata conference, I saw quite a few project descriptions that successfully married structured and unstructured (e.g., Oracle, Hadoop, SQL Server) sources, with comparatively short timeframes. It's hard to know from those descriptions how much work had already been done pre-launch, since those tend to be mature organizations. In my own experience, for smaller shops with more modest needs, a combination of (open source?) ETL, workflow, data quality tools used with a commercial product can achieve similar results. The end result might not be a DW in a Kimball sense, but would perform similarly. That was the case for a number of QlikView projects I worked on. Microsoft's PowerPivot, Tibco Spotfire, Tableau, Microstrategy are in that league and would likely supplant much of what you're doing in Excel now. But your interop requirements and 7 must-have use cases will dictate whether that solution would work for you. (8) I would recommend a concurrent spiral methodology (e.g., Boehm's ICSM) to help guide prototyping, risk management and PM. Others will work, but I find that one to be more practical than most because it accounts for failure and false starts better. (9) If you have funding for it, follow TDWI and BIScorecard. In addition to the usual male-dominated folks, Claudia Imhoff at Intelligent Solutions and Cindi Howson are pretty savvy, but it will depend on your level of readiness and ability to answer questions of the sort I pose here. If I knew more about your setting, my questions might by quite different. But there is a lot of familiar territory here. Other companies are working out similar problems. Socnets, especially LinkedIn, will help you scope the effort and find parallel synergies.    Embed Quote