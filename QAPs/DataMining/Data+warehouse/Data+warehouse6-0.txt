★Are there any practical (near) real-time data warehouse solutions?And how do they work compared to a classical data warehouses, batch analytics platforms like Hadoop and stream processing engines like Storm or S4.
I haven't read much into the paper yet so I can't comment in detail but: http://research.google.com/pubs/... has been touted really heavily in the media lately as one possible solution to a real time big data analytics platform. And http://wiki.apache.org/incubator... is in the works to create an open source version of Dremel. Otherwise, from what I understand there aren't much in the way of real-time analytics warehouses in production other than perhaps DSE Cassandra which integrates Solr for real time text search in the warehouse and Storm as you mentioned above. I can't comment on how Dremel compares with Hadoop/Storm but DSE allows for near real-time text search for the cell entries. It's obviously faster than a full Map/Reduce job (everything is precomputed) but much less flexible since we're limited to specific text search. To give an example of a limitation, we can't look for terms that begin with THE such as THEIR or THEM since we index by terms (AFAIK). But, we can do the search with a full Map/Reduce job just slower. So if your ad-hoc queries has to do with text search, DSE will give you ideal near real-time performance. Now on the other hand if you have a stream of data flowing in and you have an ad-hoc query in mind ahead of time (aggregation or trending tweets let's say), Storm is flexible in that regard and fast as the data is transformed as it enters the warehouse, but you have to have the mindset to perform the transformations as the data is flowing in so you don't get this ad-hoc nature of the queries. To sum it up, Map/Reduce is flexible in terms of both when to execute the query as well as which query to execute, but it's not real-time. Storm and DSE are both "real-time" with the caveat that you don't have flexibility of when to execute the query using Storm and you don't have the flexibility of which query to execute when using DSE (limitations of text indexes). Classical databases have the flexibility because SQL is pretty advanced as a language, but you're left with the problem of scaling up beyond 1 node (sharding can be a real pain) When I have time later this week I'll take a closer look at the Dremel paper to see what it covers and update this answer!    Embed Quote