★What is the best approach for the successful kick-off and continuous implementation of a data warehouse?
1. If you hire someone right now, would you be confident enough to use him to design your new DWH infrastructure right away? In most enterprises, the answer is no, the risk of the staff being "not experienced enough" is simply too high. I would suggest to hire external consulting service to design your new DWH, and then hire a team of expert only to maintain and expand it in the future. 2. Make sure to have your system to be able to be upscaled horizontally, where "jobs" and "processing duties" can be streamlined into multiple servers and being run at parallel. 3. This is the hardest part, transitioning an old system into a new system, especially when there are a lot of data involved is no easy job. First of all, you should think about how this transition would impact your users? Is it okay to expect some amount of downtime, or must it be seamless so users can retain 24/7 access to the application even during transition. You would also need to set some protocols in place in case that there are some "unexpected" events happens, such as data loss during transition, logic flaw at the migration tools. There are a lot of things can happens during "big" migration, just make sure your team is ready when it does truly happens. 4. True, DWH project usually is big, continuous and most of all, always evolving. Companies mostly took years to build the perfect, autonomous BI system for DWH projects, and even then there will be continuous additional business requirement that demand additional information to be stored, additional reporting and analytic tools to be added and so on. Because this requirements are mostly unable to be predicted, the traditional approach simply won't work because you will have an endless development iteration that prevents the product to be finished in timely manners. 5. Hard to say, for some people ETL works, for others it's faster and more efficient to create their own proprietary script. Choose whatever works best and most efficient for you. 6. Have a single API that governs all input/output of data from/to your BI system, and have all other users to create their own ETL to automate the data migration into their own systems.    Embed Quote