★Why should I use an existing ETL vs writing my own in Python for my data warehouse needs?I've been reading the Kimball Group Reader and they strongly recommend I use an existing ETL. Looking at solutions such as Kettle, SnapLogic, and Talend it seems their GUIs complicate the solution instead of making it easier to model and understand.
Disclaimer: I work for SnapLogic. You use tools (be it integration, BI, CRM etc.) so you don't keep reinventing the wheel. Especially when you're trying to pull data from multiple sources (with changing needs and APIs), changing systems midway (Postgres to CouchDB) etc. - it all gets really difficult to do and more importantly maintain in custom code. We believe that you shouldn't have to know how to code if you want to connect two applications together - A salesforce administrator with simple SQL knowledge should be able to move data from SF to MySQL and back. That said, we have both developers and business folks using our product everyday leveraging different aspects of our tool. Agree that custom code may be more efficient in terms of performance in most cases - although just slightly and not by an order of magnitude, but do you really want to have your best engineers work on connecting apps or focus on building your main product instead? We try to do most of the work so you don't have to :)    Embed Quote