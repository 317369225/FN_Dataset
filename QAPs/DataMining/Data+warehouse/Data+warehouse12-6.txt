★Why should I use an existing ETL vs writing my own in Python for my data warehouse needs?I've been reading the Kimball Group Reader and they strongly recommend I use an existing ETL. Looking at solutions such as Kettle, SnapLogic, and Talend it seems their GUIs complicate the solution instead of making it easier to model and understand.
Classic "buy vs. build" discussion here! The true, although much mocked and disliked, answer is "it depends". It depends on things like: Volatility of the endpoints - How soon do the data structures / APIs change. Are the changes usually backwards compatible? Does the business want to take advantage of new features asap?… For fast evolving endpoints, an ETL vendor who has invested in that endpoint is a safer bet. Presence or lack of knowledge of the endpoints with in-house team - Do you understand the endpoint better than the ETL vendor. The answer is usually YES for custom endpoints, but NO for 3rd party applications. Number of endpoints - For 1-to-1 integrations ETL will likely be an overkill, but for most 1-to-n integrations ETLs will save time/money Spikes - Do you expect to see spikes in data volume/rate? If yes, it's best to go with a cloud based ETL tool like SnapLogic (Yes, I've worked at SnapLogic in the past)    Embed Quote