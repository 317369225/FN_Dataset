★Are all regular expressions created equal?I've just started to learn how to use regular expressions through the re module in python and dive into python 3. The question is, is the syntax the same in terms of the pattern regardless of implementation, ie awk or java etc, or will I have to relearn a different way to use them in another language?
There are several different types of "regular expressions" today. Two of the most common are "perl-compatible" and "posix". There are also "basic" and "extended" regular expressions, which I most commonly come across in grep. While the basic ideas are the same, each of these types have significantly different features and syntax. Perl-compatible are more common, and the easiest to use IMO, so I never bothered learning the others. Perl-compatible are the type that you are using in Python. They're also supported in Java, JavaScript, and many other environments. The exact featureset of Perl's regular expressions changed over the years, so sometimes people specify the version. I have seen advertisements for "Perl 5-compatible regular expressions", for example. And some advanced features of Perl's regular expressions are not found in some environments. For the most part though, the syntax for using a particular flavor of regular expressions is consistent across languages and environments. But some minor details do change. How to specify flags is different in Java than it is in Perl, or JavaScript. Also how to escape characters (and which characters need escaping) can vary slightly. And of course you have to learn how to actually create a regular expression, evaluate it, and get the results. That is different in each environment. On a meta-note, (Perl) regular expressions have been one of the most valuable tools I've ever learned. I've used them in ever language I've ever worked in, and probably in most of the projects. They can be abused, but nothing beats them for a quick answer. I highly recommend investing some time and learning them deeply!    Embed Quote