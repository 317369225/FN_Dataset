What are the most important parallel search algorithms? What advantages do they have over classical search algorithms?Parallel algorithms are used over sequential algorithms to increase the efficiency or speed of processing. Consider, a very basic example, you want to find if the array is sorted or not. Using sequential algorithm will give you an complexity of O(n), whereas using multiple processors to work parallely, you can get this done in O(1). This is a basic example. Similarly, all algorithms can be parallelised. However, if it work time is more than or equal to sequential algorithm, it is useless. Hence, only those algorithms which are work optimal are used in parallel computing. There is a parallel algorithm for almost all sequential algorithms today, try searching for an algorithm you know on google. For e.g. 'bubble sort parallel algorithm' and you will get it. However, there are some which are difficult to implement. This article gives a number of problems that are easy to solve sequentially but difficult to parallelise: http://en.wikipedia.org/wiki/P-c... The circuit value problem ("given a Boolean circuit + its input, tell what it outputs") is a good starting point — easy to understand, easy to solve with sequential algorithms, and nobody knows if it can be parallelised efficiently.   