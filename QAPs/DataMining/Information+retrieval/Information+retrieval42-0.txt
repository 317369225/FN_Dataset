★How do I implement information retrieval on Dbpedia?
DBpedia is a knowledge base - an effort to combine information in semantic manner, that is, how entities are related with each other. DBpedia allows you to ask sophisticated queries against Wikipedia, and to link the different data sets on the Web to Wikipedia data. You retrieve/extract information from DBpedia to incorporate it into more semantic search systems. The aim is to facilitate queries like "latest movie of the actor who died in a movie in which a ship sank." DBpedia offers several mechanisms to use its massive knowledge. Best (atleast  for my purpose) and most robust way is to download the knowledge base (if you have infrastructure capabilities), index it and build your own search mechanism. A better (read simpler) way is to use Sparql. It will take time to get comfortable. Once you know the basic terms used in the rdf and schema offered by this dataset, it won't be too hard anymore. To give it a try, go to : SPARQL Explorer In that textarea, enter the following query:- SELECT ?subject ?released WHERE { ?subject rdf:type <http://dbpedia.org/ontology/Film>. ?subject dbpedia2:starring <http://dbpedia.org/resource/Tom_...>. ?subject rdfs:comment ?abstract. ?subject rdfs:label ?label. FILTER(lang(?abstract) = "en" && lang(?label) = "en"). ?subject <http://dbpedia.org/ontology/rele...> ?released. FILTER(xsd:date(?released) < "2000-01-01"^^xsd:date). } ORDER BY ?released The query requests movie name and release date, asking for the movie entries starring Tom Cruise. The resource link that you see is a unique specifier for Tom Cruise. It finally filters the movies before year 2000 and sorts them according to release date. In an application, you'll use a library to connect to the DBpedia. Check ARQ - A SPARQL Processor for Jena for help.  Here are a few good examples : Java and SPARQL. You should also check dbpedia-spotlight/dbpedia-spotlight for spotlight reference.    Embed Quote