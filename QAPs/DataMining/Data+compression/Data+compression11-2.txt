How does file compression work?
One of the simplest methods of compression is Run-length encoding (RLE). Let's say you have an image with a plain blue background. For each row of pixels instead of storing "blue, blue, blue, ... blue, etc" a 1000 times, you could simply store "1000,blue" and would save loads of space. When decoding the image, the algorithm just reads it and says, "oh, it needs blue a thousand times. No problem." For rows with other colours, it might look like: "36,blue,73,red,42, magenta,5,green,86,grey..." This is still better than storing every single pixel value. So by doing this, you reduce the amount of bytes needed to store the information for the image. Of course, colours are stored with numbers, not words, but you get the idea. This is an example of lossless compression. This is because you can extract the exact image in the decoding process. That is, you don't lose any information at all. This doesn't just apply to images, but can be used to compress any file). There is also lossy compression, where information can be thrown away and still be acceptable. Think of an image of clouds. Split the image into tiny 8x8 blocks and you will find that some of them can be approximated by a gradient and can be stored simply as two colours and a direction. The real image cannot be reconstructed exactly but the result is acceptable to the human eye so the reduction of data size is worth it. Music can also be compressed with lossy compression and still be acceptable to the ear. But other types of data cannot afford to lose a single bit of information. A computer program needs to be constructed exactly otherwise the program will run strange commands and result in a system crash. Compression is important because it not only takes up less space in memory and on disk, but it is also much quicker to transfer across communication channels. For example, the more that images, sounds and other data are compressed, the faster a webpage will load.    Embed Quote 