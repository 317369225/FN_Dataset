Is there a theoretical limit to data compression?
Yes there is but no it wasn't :). That is, the limit is purely theoretical: it exists but is not generally computable. So we've defined the limit, but can't always find it. It should be clear that there is some limit to compressibility. Compression is just taking some binary string of length n and recording it in length m < n in a way that we can get the old string out again. Obviously, there are less strings of length m than strings of length n, so we can't compress every possible string without losing information! If we could always compress anything, then we would be able to compress the compressed version and so on until we could represent anything as a single bit! Kolmogorov Complexity So: what is the limit? To answer this, you have to figure out exactly what it means to compress something. Basically, we can think of compression as writing a program that outputs the uncompressed version when run by some "universal" machine. The trick is that the exact machine you use is not super important: as long as it is sufficiently powerful, the result will differ at most by a constant factor from any other similar machine. (The trick is that we can prefix our program by a program that simulates one machine on anther: this is where the constant difference comes from.) Here's a simple example to illustrate how this could work and why it's a difficult problem. Consider these two strings: abcabcabcabcabcabcabcabcabcabcabcabc ;lkqwjd;lkasnc;asdlnva;lskdrfweqvf;lna;sdlkfnThey're the same length. However, it's really obvious how to compress the first one: 1
 replicate 10 "abc" But can we compress the second one? I don't know. It might be too random! The length of the shortest program to compress a string is called its Kolmogorov complexity. Finding this measure is undecidable in general because it requires knowing whether a program produces a given output. This means that having an oracle that told you the Kolmogorov complexity of an arbitrary string would be enough to solve the halting problem!    Embed Quote 