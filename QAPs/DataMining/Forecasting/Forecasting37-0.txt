★Is there a model that Product managers can use to forecast how a feature will  impact KPIs?
I'm basically going to do my best to summarize Dan Olsen's writing on this topic.  He greatly influenced my thinking on product development and optimization through a number of his interviews and presentations.  One of his best (imho) was probably this one: Early Stage Web Product Management (link at bottom - includes a full audio recording of Dan presenting the slides) Key Takeaways: 1.  Know How Your Metrics Impact Your Business:  Defining KPI's and understanding how they tie back to revenue, costs and profits is key for Product Development.  You need to break your business down into an equation at a very granular level.  For example, for an Ad-based business: Revenue - Costs = Profit Let's just break down Revenue: Revenue = Average Effective CPM x (Page Views / 1000) Average Effective CPM = Average Ad Units per Page x Average CPM Page Views = Unique Visitors x Average Pages per Visit Unique Visitors = New Visitors + Returning Visitors And on and on and on... ...You get the picture. While there might be dozens of inputs, there are usually only a handful that really "move the needle" when it comes to revenue and profit, it's helpful to have a spread sheet that allows you to see all of the metrics, but also quickly shows you which metrics create the greatest impact to your business when modified. 2.  Create a Financial Model Based on Those Granular KPI's - I personally use Excel to create a fairly granular financial model for any business I'm involved in.  I try to plot all of the metrics at the top of the sheet and highlight any hardcoded values (makes it easier for others to manipulate later).  Then I plot the impact to the P&L statement at the bottom. Once you start playing with the metrics at the top and see how it impacts your financials, you'll quickly see which levers are most important to your business. Then you can either create teams around each metric, make someone responsible for each, etc. 3.  Deciding What & How to Optimize:  Every product decision you make must at least be made with the intention of improving one of those high-value metrics.  However, you still might have a TON of different ideas for how to improve each metric. How do you prioritize those ideas?  How do you know what to test/add first, second, third, etc.? Dan's presentation recommends a framework for making those decisions based on a "Importance vs. Satisfaction" matrix. The key thesis is that you should attempt to add (or improve) features (based on user feedback) that have the highest degree of importance to the user and the business.  For features that are a "must have", you simply need to have them and they should be your top priority.  For features that are extremely important to the user, you should have them as an immediate secondary priority and do everything you can to over-deliver on them. Dan's thesis is that simply having an important feature isn't good enough if you hope to drive people to repeatedly use your product.  You need to maximize the user's satisfaction as well.  He presents a handy framework for thinking about it that's similar to Maslow's Hierarchy of Needs - the level of satisfaction goes up as you move up the pyramid, beginning with "Can I even access the feature?" (uptime) and ending with "How easy is it to use?" (UX). You can see the slide here: 4.  Implement, Measure, Rinse, Repeat:  Now that you have your KPI's laid out and how they tie back to your business results, as well as a clear understanding of how to prioritize your feature and product modification ideas, you can go ahead and deploy your product modifications. Dan has some detailed slides on how to properly measure and track your product changes and how they impact your KPI's so I won't go into detail on any of that here.  It's also fairly self-explanatory once you have everything keyed into an excel spread sheet. However, make sure you actually exercise some discipline and watch those metrics over time.  You want to be sure that your features don't get added and then forgotten. A new feature might get you an initial boost in usage, but after the novelty wears off it might actually depress results.  If that happens, don't be afraid to scrap it.  The worst thing you can do is hold onto an idea because it's yours or the CEO's, even though your customers (via their actions) are telling you it sucks. 5.  Forecasting As for your original question - I'm not sure how one would accurately predict what any particular feature addition or product modification would do to your results. However, with your spread sheet clearly laid out, a specific metric you're optimizing for and a decent idea of how "important" the feature/modification is, you could create a 3-scenario forecast for how the feature might impact your business: Best Case Scenario:  KPI improves by X% -- key it into your spread sheet, see what happens. "So So" Case Scenario:  Same as above. Worst Case Scenario:  Same as above. Read Dan's Presentation: Don't forget to check out Dan's entire presentation which can be found here: http://www.slideshare.net/dan_o/... I'm merely doing my best to summarize what he's already said and injecting a little bit of the lessons I've learned trying to implement his strategies along the way. He has a bunch of other presentations and webinar recordings up on SlideShare, so spend some time poking around and going through all of them. I hope that was helpful!    Embed Quote