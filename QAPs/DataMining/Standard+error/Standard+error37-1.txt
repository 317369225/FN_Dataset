★Say I have a box that contains 4 red balls, 10 green, and 1 blue (identical in every way aside from color). How many times would an observer need to randomly draw balls from this box (replacing and mixing each time) before being able to determine the respective proportions within standard error?
A monte carlo simulation shows that around 250-300 draws should work. Since you're dealing with a classification problem, you might want to use misclassification rate as your error instead of standard error. Below is the R code: set.seed(4444) library(ggplot2) bls <- c(rep("B",1),rep("G",10),rep("R",4)) n.range <- seq(from=50,to=500,by=10) obs <- data.frame("SampleSize"=NA,"Color"=NA,"Frequency"=NA) for(i in n.range){     draw.tab <- table(sample(x=bls,size=i,replace=TRUE))     obs <- rbind(obs,c(i,                        "Blue",                        tryCatch(round(draw.tab[["B"]][1]/i*15,2),                                 error=function(e) 0)))     obs <- rbind(obs,c(i,                        "Green",                        tryCatch(round(draw.tab[["G"]][1]/i*15,2),                                 error=function(e) 0)))     obs <- rbind(obs,c(i,                        "Red",                        tryCatch(round(draw.tab[["R"]][1]/i*15,2),                                 error=function(e) 0))) } obs <- obs[-1,] rownames(obs) <- NULL obs$SampleSize <- as.numeric(obs$SampleSize) obs$Color <- as.factor(obs$Color) obs$Frequency <- as.numeric(obs$Frequency) ggplot(data=obs,aes(x=SampleSize,y=Frequency,group=Color,color=Color)) +     geom_line() +     geom_point(size=2) +     coord_cartesian(ylim=c(0,12)) +     scale_y_continuous(breaks=seq(0,12,1)) +     scale_colour_manual(values=c("Blue"="blue","Green"="green","Red"="red"))    Embed Quote