There are three fundamental types of HDLC frames.
Information frames, or I-frames, transport user data from the network layer. In addition they can also include flow and error control information piggybacked on data. Supervisory Frames, or S-frames, are used for flow and error control whenever piggybacking is impossible or inappropriate, such as when a station does not have data to send. S-frames do not have information fields. Unnumbered frames, or U-frames, are used for various miscellaneous purposes, including link management. Some U-frames contain an information field, depending on the type.
The general format of the control field is:
HDLC control fields 7 6 5 4 3 2 1 0 N(R) Receive sequence no. P/F N(S) Send sequence no. 0 I-frame N(R) Receive sequence no. P/F type 0 1 S-frame type P/F type 1 1 U-frame
There are also extended (2-byte) forms of I and S frames. Again, the least significant bit (rightmost in this table) is sent first.
Extended HDLC control fields 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 N(R) Receive sequence no. P/F N(S) Send sequence no. 0 Extended I-frame N(R) Receive sequence no. P/F 0 0 0 0 type 0 1 Extended S-frame
RSTP adds new bridge port roles in order to speed convergence following a link failure. The number of states a port can be in has been reduced to three instead of STP's original five.
RSTP bridge port roles:
Root - A forwarding port that is the best port from Nonroot-bridge to Rootbridge Designated - A forwarding port for every LAN segment Alternate - An alternate path to the root bridge. This path is different than using the root port Backup - A backup/redundant path to a segment where another bridge port already connects Disabled - Not strictly part of STP, a network administrator can manually disable a port
RSTP switch port states:
Discarding - No user data is sent over the port Learning - The port is not forwarding frames yet, but is populating its MAC-address-table Forwarding - The port is fully operational
Additional RSTP Operation Details:
Detection of root switch failure is done in 3 hello times, which is 6 seconds if the default hello times have not been changed. Ports may be configured as edge ports if they are attached to a LAN that has no other bridges attached. These edge ports transition directly to the forwarding state. RSTP still continues to monitor the port for BPDUs in case a bridge is connected. RSTP can also be configured to automatically detect edge ports. As soon as the bridge detects a BPDU coming to an edge port, the port becomes a non-edge port. Unlike in STP, RSTP will respond to BPDUs sent from the direction of the root bridge. An RSTP bridge will "propose" its spanning tree information to its designated ports. If another RSTP bridge receives this information and determines this is the superior root information, it sets all its other ports to discarding. The bridge may send an "agreement" to the first bridge confirming its superior spanning tree information. The first bridge, upon receiving this agreement, knows it can rapidly transition that port to the forwarding state bypassing the traditional listening/learning state transition. This essentially creates a cascading effect away from the root bridge where each designated bridge proposes to its neighbors to determine if it can make a rapid transition. This is one of the major elements that allows RSTP to achieve faster convergence times than STP. As discussed in the port role details above, RSTP maintains backup details regarding the discarding status of ports. This avoids timeouts if the current forwarding ports were to fail or BPDUs were not received on the root port in a certain interval. RSTP will revert to legacy STP on an interface if a legacy version of an STP BPDU is detected on that port.

An RSVP host that needs to send a data flow with specific QoS will transmit an RSVP path message every 30 seconds that will travel along the unicast or multicast routes pre-established by the working routing protocol. If the path message arrives at a router that does not understand RSVP, that router forwards the message without interpreting the contents of the message and will not reserve resources for the flow.
Those who want to listen to them send a corresponding resv (short for "Reserve") message which then traces the path backwards to the sender. The resv message contains the flow specs. When a router receives the RSVP resv message it will:
Make a reservation based on the request parameters. For this the admission control and policy control process the request parameters and can either instruct the packet classifier to correctly handle the selected subset of data packets or negotiate with the upper layer how the packet handling should be performed. If they cannot support the reservation being requested, they send a reject message to let the listener know about it. Forward the request upstream (in the direction of the sender). At each node the resv message flowspec can be modified by a forwarding node (e.g. in the case of a multicast flow reservation the reservations requests can be merged). The routers then store the nature of the flow, and also police it. This is all done in soft state, so if nothing is heard for a certain length of time, then the reader will time out and the reservation will be cancelled. This solves the problem if either the sender or the receiver crash or are shut down incorrectly without first cancelling the reservation. The individual routers may, at their option, police the traffic to check that it conforms to the flow specs.
The resv message also has FilterSpec object; it defines the packets that will receive the requested QoS defined in the flowspec. A simple filter spec could be just the sender’s IP address and optionally its UDP or TCP port.
RSTP adds new bridge port roles in order to speed convergence following a link failure. The number of states a port can be in has been reduced to three instead of STP's original five.
RSTP bridge port roles:
Root - A forwarding port that is the best port from Nonroot-bridge to Rootbridge Designated - A forwarding port for every LAN segment Alternate - An alternate path to the root bridge. This path is different than using the root port Backup - A backup/redundant path to a segment where another bridge port already connects Disabled - Not strictly part of STP, a network administrator can manually disable a port
RSTP switch port states:
Discarding - No user data is sent over the port Learning - The port is not forwarding frames yet, but is populating its MAC-address-table Forwarding - The port is fully operational
Additional RSTP Operation Details:
Detection of root switch failure is done in 3 hello times, which is 6 seconds if the default hello times have not been changed. Ports may be configured as edge ports if they are attached to a LAN that has no other bridges attached. These edge ports transition directly to the forwarding state. RSTP still continues to monitor the port for BPDUs in case a bridge is connected. RSTP can also be configured to automatically detect edge ports. As soon as the bridge detects a BPDU coming to an edge port, the port becomes a non-edge port. Unlike in STP, RSTP will respond to BPDUs sent from the direction of the root bridge. An RSTP bridge will "propose" its spanning tree information to its designated ports. If another RSTP bridge receives this information and determines this is the superior root information, it sets all its other ports to discarding. The bridge may send an "agreement" to the first bridge confirming its superior spanning tree information. The first bridge, upon receiving this agreement, knows it can rapidly transition that port to the forwarding state bypassing the traditional listening/learning state transition. This essentially creates a cascading effect away from the root bridge where each designated bridge proposes to its neighbors to determine if it can make a rapid transition. This is one of the major elements that allows RSTP to achieve faster convergence times than STP. As discussed in the port role details above, RSTP maintains backup details regarding the discarding status of ports. This avoids timeouts if the current forwarding ports were to fail or BPDUs were not received on the root port in a certain interval. RSTP will revert to legacy STP on an interface if a legacy version of an STP BPDU is detected on that port.

A Simplified TCP State Diagram. See TCP EFSM diagram for a more detailed state diagram including the states inside the ESTABLISHED state.
TCP protocol operations may be divided into three phases. Connections must be properly established in a multi-step handshake process (connection establishment) before entering the data transfer phase. After data transmission is completed, the connection termination closes established virtual circuits and releases all allocated resources.
A TCP connection is managed by an operating system through a programming interface that represents the local end-point for communications, the Internet socket. During the lifetime of a TCP connection the local end-point undergoes a series of state changes:[12]
LISTEN  (server) represents waiting for a connection request from any remote TCP and port. SYN-SENT  (client) represents waiting for a matching connection request after having sent a connection request. SYN-RECEIVED  (server) represents waiting for a confirming connection request acknowledgment after having both received and sent a connection request. ESTABLISHED  (both server and client) represents an open connection, data received can be delivered to the user. The normal state for the data transfer phase of the connection. FIN-WAIT-1  (both server and client) represents waiting for a connection termination request from the remote TCP, or an acknowledgment of the connection termination request previously sent. FIN-WAIT-2  (both server and client) represents waiting for a connection termination request from the remote TCP. CLOSE-WAIT  (both server and client) represents waiting for a connection termination request from the local user. CLOSING  (both server and client) represents waiting for a connection termination request acknowledgment from the remote TCP. LAST-ACK  (both server and client) represents waiting for an acknowledgment of the connection termination request previously sent to the remote TCP (which includes an acknowledgment of its connection termination request). TIME-WAIT  (either server or client) represents waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request. [According to RFC 793 a connection can stay in TIME-WAIT for a maximum of four minutes known as a MSL (maximum segment lifetime).] CLOSED  (both server and client) represents no connection state at all.
