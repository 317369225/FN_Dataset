Main article: Operations on graphs
There are several operations that produce new graphs from old ones, which might be classified into the following categories:
Elementary operations, sometimes called "editing operations" on graphs, which create a new graph from the original one by a simple, local change, such as addition or deletion of a vertex or an edge, merging and splitting of vertices, etc. Graph rewrite operations replacing the occurrence of some pattern graph within the host graph by an instance of the corresponding replacement graph. Unary operations, which create a significantly new graph from the old one. Examples: Line graph Dual graph Complement graph Binary operations, which create new graph from two initial graphs. Examples: Disjoint union of graphs Cartesian product of graphs Tensor product of graphs Strong product of graphs Lexicographic product of graphs
Many logical operations on BDDs can be implemented by polynomial-time graph manipulation algorithms.
conjunction disjunction negation existential abstraction universal abstraction
However, repeating these operations several times, for example forming the conjunction or disjunction of a set of BDDs, may in the worst case result in an exponentially big BDD. This is because any of the preceding operations for two BDDs may result in a BDD with a size proportional to the product of the BDDs' sizes, and consequently for several BDDs the size may be exponential.
Deletion is the process whereby a node is removed from the tree. Only certain nodes in a binary tree can be removed unambiguously.[6]
Nodes can be inserted into binary trees in between two other nodes or added after an external node. In binary trees, a node that is inserted is specified as to which child it is.
There are a variety of different operations that can be performed on binary trees. Some are mutator operations, while others simply return useful information about the tree.
Deletion is the process whereby a node is removed from the tree. Only certain nodes in a binary tree can be removed unambiguously.[6]
Nodes can be inserted into binary trees in between two other nodes or added after an external node. In binary trees, a node that is inserted is specified as to which child it is.
There are a variety of different operations that can be performed on binary trees. Some are mutator operations, while others simply return useful information about the tree.
Deletion is the process whereby a node is removed from the tree. Only certain nodes in a binary tree can be removed unambiguously.[6]
Nodes can be inserted into binary trees in between two other nodes or added after an external node. In binary trees, a node that is inserted is specified as to which child it is.
There are a variety of different operations that can be performed on binary trees. Some are mutator operations, while others simply return useful information about the tree.
Main article: Operations research
PERT charts like this provide a business management technique based on graph theory.
Operations research provides techniques for solving practical problems in business and other fields ï¿½?problems such as allocating resources to maximize profit, or scheduling project activities to minimize risk. Operations research techniques include linear programming and other areas of optimization, queuing theory, scheduling theory, network theory. Operations research also includes continuous topics such as continuous-time Markov process, continuous-time martingales, process optimization, and continuous and hybrid control theory.
Main article: Operations on graphs
There are several operations that produce new graphs from old ones, which might be classified into the following categories:
Elementary operations, sometimes called "editing operations" on graphs, which create a new graph from the original one by a simple, local change, such as addition or deletion of a vertex or an edge, merging and splitting of vertices, etc. Graph rewrite operations replacing the occurrence of some pattern graph within the host graph by an instance of the corresponding replacement graph. Unary operations, which create a significantly new graph from the old one. Examples: Line graph Dual graph Complement graph Binary operations, which create new graph from two initial graphs. Examples: Disjoint union of graphs Cartesian product of graphs Tensor product of graphs Strong product of graphs Lexicographic product of graphs
Main article: Operations on graphs
There are several operations that produce new graphs from old ones, which might be classified into the following categories:
Elementary operations, sometimes called "editing operations" on graphs, which create a new graph from the original one by a simple, local change, such as addition or deletion of a vertex or an edge, merging and splitting of vertices, etc. Graph rewrite operations replacing the occurrence of some pattern graph within the host graph by an instance of the corresponding replacement graph. Unary operations, which create a significantly new graph from the old one. Examples: Line graph Dual graph Complement graph Binary operations, which create new graph from two initial graphs. Examples: Disjoint union of graphs Cartesian product of graphs Tensor product of graphs Strong product of graphs Lexicographic product of graphs
Deletion is the process whereby a node is removed from the tree. Only certain nodes in a binary tree can be removed unambiguously.
Nodes can be inserted into ternary trees in between three other nodes or added after an external node. In Ternary trees, a node that is inserted is specified as to which child it is.
Enumerating all the items Enumerating a section of a tree Searching for an item Adding a new item at a certain position on the tree Deleting an item Pruning: Removing a whole section of a tree Grafting: Adding a whole section to a tree Finding the root for any node
Main article: Operations on graphs
There are several operations that produce new graphs from old ones, which might be classified into the following categories:
Elementary operations, sometimes called "editing operations" on graphs, which create a new graph from the original one by a simple, local change, such as addition or deletion of a vertex or an edge, merging and splitting of vertices, etc. Graph rewrite operations replacing the occurrence of some pattern graph within the host graph by an instance of the corresponding replacement graph. Unary operations, which create a significantly new graph from the old one. Examples: Line graph Dual graph Complement graph Binary operations, which create new graph from two initial graphs. Examples: Disjoint union of graphs Cartesian product of graphs Tensor product of graphs Strong product of graphs Lexicographic product of graphs
