Time complexity in big O notation
Average 	Worst case
Space 	O(n) 	O(n)
Search 	O(log n) 	O(log n)
Insert 	O(n) 	O(n)
Delete 	O(n) 	O(n)
Elements within a sorted array are found using a binary search, in O(log n); thus sorted arrays are suited for cases when one needs to be able to look up elements quickly,
a sorted dynamic array can do this in amortized O(1) time while a self-balancing binary search tree always operates at O(log n).

Elements in a sorted array can be looked up by their index (random access) at O(1) time, an operation taking O(log n) or O(n) time for more complex data structures.