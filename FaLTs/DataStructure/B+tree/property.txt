For a b-order B+ tree with h levels of index:[citation needed]

The maximum number of records stored is {\displaystyle n_{\max }=b^{h}-b^{h-1}} {\displaystyle n_{\max }=b^{h}-b^{h-1}}
The minimum number of records stored is {\displaystyle n_{\min }=2\left\lceil {\tfrac {b}{2}}\right\rceil ^{h-1}-2\left\lceil {\tfrac {b}{2}}\right\rceil ^{h-2}} {\displaystyle n_{\min }=2\left\lceil {\tfrac {b}{2}}\right\rceil ^{h-1}-2\left\lceil {\tfrac {b}{2}}\right\rceil ^{h-2}}
The minimum number of keys is {\displaystyle n_{\mathrm {kmin} }=2\left\lceil {\tfrac {b}{2}}\right\rceil ^{h-1}-1} {\displaystyle n_{\mathrm {kmin} }=2\left\lceil {\tfrac {b}{2}}\right\rceil ^{h-1}-1}
The maximum number of keys is {\displaystyle n_{\mathrm {kmax} }=b^{h}-1} {\displaystyle n_{\mathrm {kmax} }=b^{h}-1}
The space required to store the tree is {\displaystyle O(n)} O(n)
Inserting a record requires {\displaystyle O(\log _{b}n)} O(\log _{b}n) operations
Finding a record requires {\displaystyle O(\log _{b}n)} O(\log _{b}n) operations
Removing a (previously located) record requires {\displaystyle O(\log _{b}n)} O(\log _{b}n) operations
Performing a range query with k elements occurring within the range requires {\displaystyle O(\log _{b}n+k)} O(\log _{b}n+k) operations