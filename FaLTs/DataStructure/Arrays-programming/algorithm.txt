Stata's matrix programming language Mata supports array programming. Below, we illustrate addition, multiplication, addition of a matrix and a scalar, element by element multiplication, subscripting, and one of Mata's many inverse matrix functions.
. mata:: A = (1,2,3) \(4,5,6): A       1   2   3    +-------------+  1 |  1   2   3  |  2 |  4   5   6  |    +-------------+: B = (2..4) \(1..3): B       1   2   3    +-------------+  1 |  2   3   4  |  2 |  1   2   3  |    +-------------+: C = J(3,2,1)           // A 3 by 2 matrix of ones: C       1   2    +---------+  1 |  1   1  |  2 |  1   1  |  3 |  1   1  |    +---------+: D = A + B: D       1   2   3    +-------------+  1 |  3   5   7  |  2 |  5   7   9  |    +-------------+: E = A*C: E        1    2    +-----------+  1 |   6    6  |  2 |  15   15  |    +-----------+: F = A:*B: F        1    2    3    +----------------+  1 |   2    6   12  |  2 |   4   10   18  |    +----------------+: G = E :+ 3: G        1    2    +-----------+  1 |   9    9  |  2 |  18   18  |    +-----------+: H = F[(2\1), (1, 2)]    // Subscripting to get a submatrix of F and:                         // switch row 1 and 2: H        1    2    +-----------+  1 |   4   10  |  2 |   2    6  |    +-----------+: I = invsym(F'*F)        // Generalized inverse (F*F^(-1)F=F) of a:                         // symmetric positive semi-definite matrix: I[symmetric]                 1             2             3    +-------------------------------------------+  1 |            0                              |  2 |            0          3.25                |  3 |            0         -1.75   .9444444444  |    +-------------------------------------------+: end
