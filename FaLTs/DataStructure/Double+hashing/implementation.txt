Linear probing and, to a lesser extent, quadratic probing are able to take advantage of the data cache by accessing locations that are close together. Double hashing has, on average, larger intervals and is not able to achieve this advantage.

Like all other forms of open addressing, double hashing becomes linear as the hash table approaches maximum capacity. The only solution to this is to rehash to a larger size, as with all other open addressing schemes.

On top of that, it is possible for the secondary hash function to evaluate to zero. For example, if we choose k=5 with the following function:

{\displaystyle h_{2}(k)=5-(k\mod 7)}  h_2(k) = 5 - (k\mod 7) 

The resulting sequence will always remain at the initial hash value. One possible solution is to change the secondary hash function to:

{\displaystyle h_{2}(k)=(k\mod 7)+1}  h_2(k) = (k\mod 7) + 1

This ensures that the secondary hash function will always be non zero.